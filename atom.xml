<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DoCode</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-31T06:56:09.508Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>DoCode</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux实操篇-网络配置</title>
    <link href="http://yoursite.com/2019/05/31/Linux%E5%AE%9E%E6%93%8D%E7%AF%87-%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/05/31/Linux实操篇-网络配置/</id>
    <published>2019-05-31T06:40:26.545Z</published>
    <updated>2019-05-31T06:56:09.508Z</updated>
    
    <content type="html"><![CDATA[<h1 id="虚拟机网络模式"><a href="#虚拟机网络模式" class="headerlink" title="虚拟机网络模式"></a>虚拟机网络模式</h1><p>1）虚拟机连接网络的三种模式</p><p><img src="https://img-blog.csdnimg.cn/2019053114331367.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2）虚拟机使用NAT模式的网络原理图<img src="https://img-blog.csdnimg.cn/20190531143255441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="查看网络IP和网关"><a href="#查看网络IP和网关" class="headerlink" title="查看网络IP和网关"></a>查看网络IP和网关</h1><h2 id="查看虚拟网络编辑器"><a href="#查看虚拟网络编辑器" class="headerlink" title="查看虚拟网络编辑器"></a>查看虚拟网络编辑器</h2><p><img src="https://img-blog.csdnimg.cn/20190531143321832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="修改IP（虚拟网络的IP）"><a href="#修改IP（虚拟网络的IP）" class="headerlink" title="修改IP（虚拟网络的IP）"></a>修改IP（虚拟网络的IP）</h2><p><img src="https://img-blog.csdnimg.cn/20190531143328972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="这里插入图片描述"></p><h2 id="查看网关"><a href="#查看网关" class="headerlink" title="查看网关"></a>查看网关</h2><p><img src="https://img-blog.csdnimg.cn/2019053114350952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="查看windows环境中的VMnet8网络配置"><a href="#查看windows环境中的VMnet8网络配置" class="headerlink" title="查看windows环境中的VMnet8网络配置"></a>查看windows环境中的VMnet8网络配置</h2><p>方式1：命令行输入：ipconfig</p><p>方式2：右键点击菜单栏网络图标——&gt;打开网络和共享中心——&gt;更改适配器——&gt;选择VMnet8——&gt;右键查看属性——&gt;选择IPv4</p><h1 id="ping-测试主机之间网络连通性"><a href="#ping-测试主机之间网络连通性" class="headerlink" title="ping 测试主机之间网络连通性"></a>ping 测试主机之间网络连通性</h1><p>基本语法：ping 目的主机 （功能描述：测试当前服务器是否可以连接目的主机）<br><strong>实例</strong><br>测试当前服务器是否可以连接百度 [root@hadoop100 桌面]# ping <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p><p><img src="https://img-blog.csdnimg.cn/20190531143520945.png" alt="这里插入图片描述"></p><h1 id="Linux网络环境配置"><a href="#Linux网络环境配置" class="headerlink" title="Linux网络环境配置"></a>Linux网络环境配置</h1><h2 id="第一种方法-自动获取"><a href="#第一种方法-自动获取" class="headerlink" title="第一种方法(自动获取)"></a>第一种方法(自动获取)</h2><p>说明：登陆后，通过界面的来设置自动获取ip</p><p><img src="https://img-blog.csdnimg.cn/20190531143529736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>特点：linux启动后会自动获取IP,缺点是每次自动获取的ip地址可能不一样。，不适用于做服务器，因为我们的服务器的IP需要是固定的</strong></p><h2 id="第二种方法-指定固定的ip"><a href="#第二种方法-指定固定的ip" class="headerlink" title="第二种方法(指定固定的ip)"></a>第二种方法(指定固定的ip)</h2><p>说明 直接修改配置文件来指定IP,并可以连接到外网(程序员推荐)，</p><p>编辑 vim  /etc/sysconfig/network-scripts/ifcfg-eth0 （etho的配置文件，如果多块需要配置多块的配置文件）</p><p><strong>实例</strong></p><p>要求：将ip地址配置的静态的，ip地址为192.168.168.130</p><p><strong>注意：设置的IP地址如果和虚拟机的VMnet网卡的IP网段需要是一样的，如果不一样就无法建立通信</strong></p><p>1)步骤1，修改网卡配置文件</p><p><img src="https://img-blog.csdnimg.cn/20190531143537436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="这里插入图片描述"></p><p>2）步骤2 ，重新启动网络服务</p><p><img src="https://img-blog.csdnimg.cn/20190531143544501.png" alt="在这里插入图片描述"></p><h2 id="ifcfg-eth0文件说明"><a href="#ifcfg-eth0文件说明" class="headerlink" title="ifcfg-eth0文件说明"></a>ifcfg-eth0文件说明</h2><p><img src="https://img-blog.csdnimg.cn/20190531143551261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>、</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;虚拟机网络模式&quot;&gt;&lt;a href=&quot;#虚拟机网络模式&quot; class=&quot;headerlink&quot; title=&quot;虚拟机网络模式&quot;&gt;&lt;/a&gt;虚拟机网络模式&lt;/h1&gt;&lt;p&gt;1）虚拟机连接网络的三种模式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.c
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux实操" scheme="http://yoursite.com/tags/Linux%E5%AE%9E%E6%93%8D/"/>
    
  </entry>
  
  <entry>
    <title>Linux实操篇-磁盘分区和挂载</title>
    <link href="http://yoursite.com/2019/05/31/Linux%E5%AE%9E%E6%93%8D%E7%AF%87-%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E5%92%8C%E6%8C%82%E8%BD%BD/"/>
    <id>http://yoursite.com/2019/05/31/Linux实操篇-磁盘分区和挂载/</id>
    <published>2019-05-31T04:19:44.595Z</published>
    <updated>2019-05-31T05:25:24.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分区基本知识"><a href="#分区基本知识" class="headerlink" title="分区基本知识"></a>分区基本知识</h1><h2 id="分区的方式："><a href="#分区的方式：" class="headerlink" title="分区的方式："></a>分区的方式：</h2><p><strong>1) mbr分区:</strong> </p><p>1.最多支持四个主分区 </p><p>2.系统只能安装在主分区 </p><p>3.扩展分区要占一个主分区 </p><p>4.MBR最大只支持2TB，但拥有最好的兼容性<br><strong>2) gtp分区:</strong> </p><p>1.支持无限多个主分区（但操作系统可能限制，比如 windows下最多128个分区） </p><p>2.最大支持18EB的大容量（1EB=1024 PB，1PB=1024 TB ）</p><p> 3.windows7 64位以后支持gtp</p><h2 id="windows下的磁盘分区"><a href="#windows下的磁盘分区" class="headerlink" title="windows下的磁盘分区"></a>windows下的磁盘分区</h2><p><img src="https://img-blog.csdnimg.cn/20190531131558967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="Linux分区"><a href="#Linux分区" class="headerlink" title="Linux分区"></a>Linux分区</h1><h2 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h2><p> 1) Linux来说无论有几个分区，分给哪一目录使用，它归根结底就只有一个根目录，一个独 立且唯一的文件结构 , Linux中每个分区都是用来组成整个文件系统的一部分。<br>2) Linux采用了一种叫“载入”的处理方法，它的整个文件系统中包含了一整套的文件和目 录，且将一个分区和一个目录联系起来。这时要载入的一个分区将使它的存储空间在一 个目录下获得。 </p><p>3) 示意图<img src="https://img-blog.csdnimg.cn/2019053113161697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="硬盘说明"><a href="#硬盘说明" class="headerlink" title="硬盘说明"></a>硬盘说明</h2><p>1) Linux硬盘分IDE硬盘和SCSI硬盘，目前基本上是SCSI硬盘</p><p>2) 对于IDE硬盘，驱动器标识符为“hdx~”,其中“hd”表明分区所在设备的类型，这里是指 IDE硬盘了。“x”为盘号（a为基本盘，b为基本从属盘，c为辅助主盘，d为辅助从属 盘）,“~”代表分区，前四个分区用数字1到4表示，它们是主分区或扩展分区，从5开始就 是逻辑分区。例，hda3表示为第一个IDE硬盘上的第三个主分区或扩展分区,hdb2表示为 第二个IDE硬盘上的第二个主分区或扩展分区。</p><p>3) 对于SCSI硬盘则标识为“sdx~”，SCSI硬盘是用“sd”来表示分区所在设备的类型的，其余 则和IDE硬盘的表示方法一样。</p><h2 id="查看所有设备挂载情况"><a href="#查看所有设备挂载情况" class="headerlink" title="查看所有设备挂载情况"></a>查看所有设备挂载情况</h2><p>命令 ：lsblk （谐音：老师不离开） 或者 lsblk -f<img src="https://img-blog.csdnimg.cn/20190531131629957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20190531131640464.png" alt="在这里插入图片描述"></p><h1 id="挂载经典案例"><a href="#挂载经典案例" class="headerlink" title="挂载经典案例"></a>挂载经典案例</h1><h2 id="虚拟机增加硬盘"><a href="#虚拟机增加硬盘" class="headerlink" title="虚拟机增加硬盘"></a>虚拟机增加硬盘</h2><p>需求：为Linux系统新增加一块硬盘并将其挂载到Linux中的/home/newdisk目录下</p><h3 id="如何增加一块硬盘？"><a href="#如何增加一块硬盘？" class="headerlink" title="如何增加一块硬盘？"></a>如何增加一块硬盘？</h3><p>1）虚拟机添加硬盘</p><p>2）分区</p><p>3）格式化</p><p>4）挂载</p><p>5）设置可以自动挂载</p><h3 id="实操步骤："><a href="#实操步骤：" class="headerlink" title="实操步骤："></a>实操步骤：</h3><p>1）在【虚拟机】菜单中，选择【设 置】，然后设备列表里添加硬盘， 然后一路【下一步】，中间只有 选择磁盘大小的地方需要修改， 至到完成。然后重启系统（才能 识别）！</p><p><img src="https://img-blog.csdnimg.cn/2019053113165895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2）分区命令 fdisk   /dev/sdb </p><p>开始对/sdb分区</p><p> • m   显示命令列表</p><p> • p    显示磁盘分区 同 fdisk  –l </p><p>• n    新增分区 • d     删除分区 </p><p>• w   写入并退出</p><p> 说明： 开始分区后输入n，新增分区，然后选择p ，分区类型为主分区。两次回车默认剩 余全部空间。最后输入w写入分区并退出，若不保存退出输入q。</p><p><img src="https://img-blog.csdnimg.cn/20190531131708395.png" alt="在这里插入图片描述"></p><p>3）格式化分区</p><p>分区命令:mkfs -t  ext4   /dev/sdb1  其中ext4是分区类型</p><p>4）新建挂载目录，并将硬盘挂载到目录</p><p>挂载: 将一个分区与一个目录联系起来，</p><p> 基本语法：mount    设备名称 挂载目录</p><p> 例如： mount    /dev/sdb1    /newdisk</p><p>卸载： umount 设备名称 或者 挂载目录</p><p>  例如： umount /dev/sdb1 或者 umount /newdisk</p><p><strong>注意：</strong>用命令行挂载重启后会失效</p><p>5）设置可以自动挂载（永久挂载，当你重启系统，仍然可以挂载到/home/newdisk目录下）</p><p>永久挂载: 通过修改/etc/fstab实现挂载 添加完成后 执行mount   –a 即刻生效</p><p><img src="https://img-blog.csdnimg.cn/20190531131719985.png" alt="在这里插入图片描述"></p><h1 id="硬盘查询实用指令"><a href="#硬盘查询实用指令" class="headerlink" title="硬盘查询实用指令"></a>硬盘查询实用指令</h1><h2 id="查询系统整体磁盘使用情况"><a href="#查询系统整体磁盘使用情况" class="headerlink" title="查询系统整体磁盘使用情况"></a>查询系统整体磁盘使用情况</h2><p>基本语法： df -h </p><p><strong>实例</strong> </p><p>（1）查询系统整体磁盘使用情况</p><p><img src="https://img-blog.csdnimg.cn/20190531131729304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="查询指定目录的磁盘占用情况"><a href="#查询指定目录的磁盘占用情况" class="headerlink" title="查询指定目录的磁盘占用情况"></a>查询指定目录的磁盘占用情况</h2><p>基本语法： du -h  /目录<br>查询指定目录的磁盘占用情况，默认为当前目录 </p><p>-s 指定目录占用大小汇总</p><p> -h 带计量单位 </p><p>-a 含文件</p><p> –max-depth=1  子目录深度 </p><p>-c 列出明细的同时，增加汇总值 </p><p><strong>实例</strong></p><p>（1） 查询 /opt 目录的磁盘占用情况，深度为1</p><p><img src="https://img-blog.csdnimg.cn/20190531131737331.png" alt="在这里插入图片描述"></p><h1 id="磁盘情况-工作中的实用指令"><a href="#磁盘情况-工作中的实用指令" class="headerlink" title="磁盘情况-工作中的实用指令"></a>磁盘情况-工作中的实用指令</h1><p>1) 统计/home文件夹下文件的个数</p><p><img src="https://img-blog.csdnimg.cn/20190531131802402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p> 2) 统计/home文件夹下目录的个数 </p><p><img src="https://img-blog.csdnimg.cn/20190531131821252.png" alt="在这里插入图片描述"></p><p>3) 统计/home文件夹下文件的个数，包括子文件夹里的</p><p><img src="https://img-blog.csdnimg.cn/20190531131904948.png" alt="在这里插入图片描述"></p><p>4) 统计文件夹下目录的个数，包括子文件夹里的</p><p><img src="https://img-blog.csdnimg.cn/20190531131914503.png" alt="在这里插入图片描述"></p><p> 5) 以树状显示目录结构</p><p><img src="https://img-blog.csdnimg.cn/20190531131926211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;分区基本知识&quot;&gt;&lt;a href=&quot;#分区基本知识&quot; class=&quot;headerlink&quot; title=&quot;分区基本知识&quot;&gt;&lt;/a&gt;分区基本知识&lt;/h1&gt;&lt;h2 id=&quot;分区的方式：&quot;&gt;&lt;a href=&quot;#分区的方式：&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux实操" scheme="http://yoursite.com/tags/Linux%E5%AE%9E%E6%93%8D/"/>
    
  </entry>
  
  <entry>
    <title>Linux实操篇-定时调度任务与实例</title>
    <link href="http://yoursite.com/2019/05/30/Linux%E5%AE%9E%E6%93%8D%E7%AF%87-%E5%AE%9A%E6%97%B6%E8%B0%83%E5%BA%A6%E4%BB%BB%E5%8A%A1/"/>
    <id>http://yoursite.com/2019/05/30/Linux实操篇-定时调度任务/</id>
    <published>2019-05-30T05:58:36.568Z</published>
    <updated>2019-05-30T09:14:18.312Z</updated>
    
    <content type="html"><![CDATA[<h1 id="crond任务调度"><a href="#crond任务调度" class="headerlink" title="crond任务调度"></a>crond任务调度</h1><h2 id="crontab-进行定时任务的设置"><a href="#crontab-进行定时任务的设置" class="headerlink" title="crontab 进行定时任务的设置"></a>crontab 进行定时任务的设置</h2><p> 任务调度：是指系统在某个时间执行的特定的命令或程序。</p><p>原理示意图:</p><p><img src="https://img-blog.csdnimg.cn/20190530171313863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20190530171308189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p> 任务调度分类：</p><p>​     1）系统工作：有些重要的工作必须周而复始地执行。如病毒扫描等</p><p>​      2）个别用户工作：个别用户可能希望执行某些程序，比如对mysql数据库的备份。 </p><p>基本语法 ：crontab [选项] </p><p>常用选项</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:center">选项说明</th></tr></thead><tbody><tr><td style="text-align:left">-e</td><td style="text-align:center">编辑crontab定时任务</td></tr><tr><td style="text-align:left">-l</td><td style="text-align:center">查询crontab任务</td></tr><tr><td style="text-align:left">-r</td><td style="text-align:center">删除当前用户所有的crontab任务</td></tr></tbody></table><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h2 id="任务要求"><a href="#任务要求" class="headerlink" title="任务要求"></a>任务要求</h2><p>1)设置任务调度文件：/etc/crontab </p><p>2)设置个人任务调度。执行crontab –e命令。</p><p>3) 接着输入任务到调度文件 如：<em>/1 </em>  <em>  </em>  *  ls –l  /etc/ &gt; /tmp/to.txt  </p><p>4)意思说每小时的每分钟执行ls –l /etc/ &gt; /tmp/to.txt命令 </p><h2 id="步骤如下"><a href="#步骤如下" class="headerlink" title="步骤如下"></a>步骤如下</h2><p>1）cron -e</p><p>2)输入：<em>/1 </em> <em> </em> * ls -l /etc &gt;&gt;/tmp/to.txt</p><p>3）保存退出后就完成</p><p>4)在每一分钟都会自动的调用 ls-l/etc &gt;&gt;/tmp/to.txt</p><h2 id="参数细节说明"><a href="#参数细节说明" class="headerlink" title="参数细节说明"></a>参数细节说明</h2><p>5个占位符的说明</p><table><thead><tr><th>项目</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td>第一个“*”</td><td>一小时当中的第几分钟</td><td>0-59</td></tr><tr><td>第二个“*”</td><td>一天当中的第几小时</td><td>0-23</td></tr><tr><td>第三个“*”</td><td>一个月当中的第几天</td><td>1-31</td></tr><tr><td>第五个“*”</td><td>一周当中的星期几</td><td>0-7（0和7都代表星期日）</td></tr><tr><td>特殊符号的说明</td><td></td></tr></tbody></table><table><thead><tr><th style="text-align:left">特殊符号</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">*</td><td style="text-align:left">代表任何时间。比如第一个“*”就代表一小时中每分钟都执行一 次的意思。</td></tr><tr><td style="text-align:left">，</td><td style="text-align:left">代表不连续的时间。比如“0 8,12,16 <em> </em> * 命令”，就代表在每天 的8点0分，12点0分，16点0分都执行一次命令</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">代表连续的时间范围。比如“0 5 <em> </em> 1-6命令”，代表在周一到周 六的凌晨5点0分执行命令</td></tr><tr><td style="text-align:left">*/n</td><td style="text-align:left">代表每隔多久执行一次。比如“<em>/10 </em> <em> </em> * 命令”，代表每隔 10分钟就执行一遍命令</td></tr></tbody></table><p>特定时间执行任务案例</p><table><thead><tr><th style="text-align:left">时间</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:left">45 22 <em>  </em>  * 命令</td><td style="text-align:center">在22点45分执行命令</td></tr><tr><td style="text-align:left">0 17 <em> </em> 1 命令</td><td style="text-align:center">每周1 的17点0分执行命令</td></tr><tr><td style="text-align:left">0 5 1,15 <em> </em> 命令</td><td style="text-align:center">每月1号和15号的凌晨5点0分执行命令</td></tr><tr><td style="text-align:left">40 4 <em> </em> 1-5 命令</td><td style="text-align:center">每周一到周五的凌晨4点40分执行命令</td></tr><tr><td style="text-align:left"><em>/10 4 </em> <em> </em> 命令</td><td style="text-align:center">每天的凌晨4点，每隔10分钟执行一次命令</td></tr><tr><td style="text-align:left">0 0 1,15 * 1 命令</td><td style="text-align:center">每月1号和15号，每周1的0点0分都会执行命令。</td></tr></tbody></table><p>注意：星期几和 几号最好不要同时出现，因为他们定义的都是天。非常容易让管理员混乱。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;crond任务调度&quot;&gt;&lt;a href=&quot;#crond任务调度&quot; class=&quot;headerlink&quot; title=&quot;crond任务调度&quot;&gt;&lt;/a&gt;crond任务调度&lt;/h1&gt;&lt;h2 id=&quot;crontab-进行定时任务的设置&quot;&gt;&lt;a href=&quot;#crontab-
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux实操" scheme="http://yoursite.com/tags/Linux%E5%AE%9E%E6%93%8D/"/>
    
  </entry>
  
  <entry>
    <title>Linux实操篇-组管理和权限管理</title>
    <link href="http://yoursite.com/2019/05/29/Linux%E5%AE%9E%E6%93%8D%E7%AF%87-%E7%BB%84%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2019/05/29/Linux实操篇-组管理/</id>
    <published>2019-05-29T02:06:34.892Z</published>
    <updated>2019-05-29T09:54:05.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux组基本介绍"><a href="#Linux组基本介绍" class="headerlink" title="Linux组基本介绍"></a>Linux组基本介绍</h1><p>在linux中的每个用户必须属于一个组，不能独立于组外。在linux中每个文件 有所有者、所在组、其它组的概念。<br>1) 所有者 </p><p>2) 所在组 </p><p>3) 其它组</p><p> 4) 改变用户所在的组</p><p><img src="https://img-blog.csdnimg.cn/20190529173048969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="文件-目录-所有者"><a href="#文件-目录-所有者" class="headerlink" title="文件/目录 所有者"></a>文件/目录 所有者</h1><p>概念：一般为文件的创建者，谁创建了文件，就自然的成为该文件的所有者。</p><h2 id="查看文件的所有者"><a href="#查看文件的所有者" class="headerlink" title="查看文件的所有者"></a>查看文件的所有者</h2><p>1) 指令：ls –ahl</p><p> <strong>实例</strong></p><p>（1）创建一个组police，再创建一个用户tom，将tom放在police组中，然后使用tom来创建一个文件ok.txt，并查看文件所有者</p><p>步骤1：创建police组以及tom用户并将tom放在police组中</p><p><img src="https://img-blog.csdnimg.cn/20190529173212243.png" alt="在这里插入图片描述"></p><p>步骤2：使用tom用户创建ok.txt文件</p><p><img src="https://img-blog.csdnimg.cn/20190529173222543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>特别说明：文件的所在组一般是所有者的所在组，但是也是可以更改的</p><h1 id="文件-目录所在组"><a href="#文件-目录所在组" class="headerlink" title="文件/目录所在组"></a>文件/目录所在组</h1><h2 id="修改文件所有者"><a href="#修改文件所有者" class="headerlink" title="修改文件所有者"></a>修改文件所有者</h2><p>指令：</p><p>1）chown  newowner  file  改变文件的所有者<br>2）chown newowner:newgroup  file  改变用户的所有者和所有组 </p><p>3）-R   如果是目录 则使其下所有子文件或目录递归生效</p><p><strong>实例</strong></p><p>（1）使用root创建一个文件apple.txt，然后将其修改为tom </p><p><img src="https://img-blog.csdnimg.cn/20190529173237218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>（2) 请将 /home/kkk 目录下所有的文件和目录的所有者都修改成tom </p><p>   首先我们应该选择root用户操作</p><p><img src="https://img-blog.csdnimg.cn/2019052917330094.png" alt="在这里插入图片描述"></p><h2 id="组的创建"><a href="#组的创建" class="headerlink" title="组的创建"></a>组的创建</h2><p>基本指令: groupadd 组名<br>实例</p><p>(1) 创建一个组, ,monster 创建一个用户 fox ，并放入到 monster组中</p><p><img src="https://img-blog.csdnimg.cn/20190529173320299.png" alt="在这里插入图片描述"></p><h2 id="修改文件所在的组"><a href="#修改文件所在的组" class="headerlink" title="修改文件所在的组"></a>修改文件所在的组</h2><p>  基本指令 ：</p><p>1）chgrp 组名 文件名 </p><p>2）-R   如果是目录 则使其下所有子文件或目录递归生效</p><p><strong>实例</strong> </p><p>（1）使用root用户创建文件 orange.txt ,看看当前这个文件属于哪个组，然后将这个文 件所在组，修改到 police组。</p><p><img src="https://img-blog.csdnimg.cn/20190529173328558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>（2） 请将 /home/kkk 目录下所有的文件和目录的所在组都修改成 police</p><p>  chgrp -R police  /home/kkk/</p><h2 id="其它组"><a href="#其它组" class="headerlink" title="其它组"></a>其它组</h2><p>介绍：除文件的所有者和所在组的用户外，系统的其它用户都是文件的其它组。</p><h2 id="改变用户所在组"><a href="#改变用户所在组" class="headerlink" title="改变用户所在组"></a>改变用户所在组</h2><p>在添加用户时，可以指定将该用户添加到哪个组中，同样的用root的管理权限可以改变某 个用户所在的组。 改变用户所在组</p><p> 1) usermod   –g   组名 用户名</p><p> 2) usermod   –d   目录名 用户名 改变该用户登陆的初始目录。</p><p><strong>实例</strong></p><p>（1）创建一个土匪组（bandit）将tom这个用户从原来所在的police组，修改为</p><p>土匪组（bandit）</p><p><img src="https://img-blog.csdnimg.cn/20190529173345959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="权限的基本介绍"><a href="#权限的基本介绍" class="headerlink" title="权限的基本介绍"></a>权限的基本介绍</h1><p>ls  -l 中显示的内容如下： -rwxrw-r– 1 root root 1213 Feb 2 09:39 abc<br><strong>0-9位说明</strong> </p><p>1) 第0位确定文件类型(d, - , l , c , b)</p><p> 2) 第1-3位确定所有者（该文件的所有者）拥有该文件的权限。—User </p><p>3) 第4-6位确定所属组（同用户组的）拥有该文件的权限，—Group</p><p> 4) 第7-9位确定其他用户拥有该文件的权限 —Other</p><p><img src="https://img-blog.csdnimg.cn/20190529173358872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="rwx权限详解"><a href="#rwx权限详解" class="headerlink" title="rwx权限详解"></a>rwx权限详解</h1><h2 id="rwx作用到文件"><a href="#rwx作用到文件" class="headerlink" title="rwx作用到文件"></a>rwx作用到文件</h2><p> 1) [ r ]代表可读(read): 可以读取,查看 </p><p>2) [ w ]代表可写(write): 可以修改,但是不代表可以删除该文件,删除一个文件的前提条件是 对该文件所在的目录有写权限，才能删除该文件.</p><p>3) [ x ]代表可执行(execute):可以被执行</p><h2 id="rwx作用到目录"><a href="#rwx作用到目录" class="headerlink" title="rwx作用到目录"></a>rwx作用到目录</h2><p>1) [ r ]代表可读(read): 可以读取，ls查看目录内容 </p><p>2) [ w ]代表可写(write): 可以修改,目录内创建+删除+重命名目录</p><p> 3) [ x ]代表可执行(execute):可以进入该目录</p><h1 id="文件及目录权限实际案例"><a href="#文件及目录权限实际案例" class="headerlink" title="文件及目录权限实际案例"></a>文件及目录权限实际案例</h1><p><strong>ls  -l 中显示的内容如下：</strong></p><p> -rwxrw-r– 1 root root 1213 Feb 2 09:39 abc </p><p>10个字符确定不同用户能对文件干什么</p><p> 第一个字符代表文件类型：文件 (-),目录(d),链接(l) </p><p>其余字符每3个一组(rwx) 读(r) 写(w) 执行(x)</p><p> 第一组rwx : 文件拥有者的权限是读、写和执行 </p><p>第二组rw-: 与文件拥有者同一组的用户的权限是读、写但不能执行</p><p> 第三组r– : 不与文件拥有者同组的其他用户的权限是读不能写和执行 </p><p><strong>可用数字表示为:</strong> r=4,w=2,x=1 因此rwx=4+2+1=7      </p><table><thead><tr><th>权限</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td>1</td><td style="text-align:center">文件：硬连接数或 目录：子目录数</td></tr><tr><td>root</td><td style="text-align:center">用户</td></tr><tr><td>root</td><td style="text-align:center">组</td></tr><tr><td>1213</td><td style="text-align:center">文件大小（字节），如果是文件夹，显示4096字节</td></tr><tr><td>Feb 2 09:39</td><td style="text-align:center">最后修改日期</td></tr><tr><td>abc</td><td style="text-align:center">文件名</td></tr></tbody></table><h1 id="修改权限-chmod"><a href="#修改权限-chmod" class="headerlink" title="修改权限-chmod"></a>修改权限-chmod</h1><p>基本说明： 通过chmod指令，可以修改文件或者目录的权限。</p><h2 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h2><p>第一种方式：+ 、-、= 变更权限 u:所有者 g:所在组 o:其他人 a:所有人(u、g、o的总和)</p><p>1) chmod   u=rwx,g=rx,o=x   文件目录名 </p><p>功能描述：u=rwx给所有者rwx权限，g=rx给所在组的其他用户提供rx权限，o=x其他组用户提供x权限</p><p>2) chmod   o+w    文件目录名 </p><p>功能描述：给其他组用户添加提供w(写)权限</p><p>3) chmod   a-x    文件目录名</p><p>功能描述：给所用用户减去x(执行)权限</p><p><img src="https://img-blog.csdnimg.cn/20190529173502574.png" alt="在这里插入图片描述"></p><p> <strong>实例</strong></p><p>1) 给abc文件 的所有者读写执行的权限，给所在组读执行权限，给其它组读执行权限。</p><p><img src="https://img-blog.csdnimg.cn/20190529173516275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>特别说明：文件获取可执行权限之后，文件名字变成绿色</p><p>2) 给abc文件的所有者除去执行的权限，增加组写的权限 </p><p><img src="https://img-blog.csdnimg.cn/20190529173532152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3) 给abc文件的所有用户添加读的权限</p><p><img src="https://img-blog.csdnimg.cn/20190529173549105.png" alt="在这里插入图片描述"></p><h2 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h2><p>第二种方式：通过数字变更权限 </p><p>r=4 w=2 x=1        rwx=4+2+1=7</p><p> chmod u=rwx,g=rx,o=x    文件目录名 </p><p>相当于 chmod   751  文件目录名</p><p> <strong>实例</strong></p><p> （1）将 /home/abc.txt 文件的权限修改成 rwxr-xr-x, 使用给数字的方式实现：</p><p>rwx=4+2+1=7</p><p>r-x=4+1=5</p><p>r-x=5+1=5</p><p>指令：chmod 755 /home/abc.txt</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux组基本介绍&quot;&gt;&lt;a href=&quot;#Linux组基本介绍&quot; class=&quot;headerlink&quot; title=&quot;Linux组基本介绍&quot;&gt;&lt;/a&gt;Linux组基本介绍&lt;/h1&gt;&lt;p&gt;在linux中的每个用户必须属于一个组，不能独立于组外。在linux中每个文
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux实操" scheme="http://yoursite.com/tags/Linux%E5%AE%9E%E6%93%8D/"/>
    
  </entry>
  
  <entry>
    <title>Java基础篇-Java异常处理</title>
    <link href="http://yoursite.com/2019/05/25/Java%E5%9F%BA%E7%A1%80%E7%AF%87-Java%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    <id>http://yoursite.com/2019/05/25/Java基础篇-Java异常处理/</id>
    <published>2019-05-25T09:49:40.996Z</published>
    <updated>2019-05-28T06:04:53.859Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p><strong>介绍</strong></p><p>异常：就是程序在运行时出现不正常的情况</p><p>异常由来：问题也是现实生活中一个具体的事物，也可以通过java的类的形式进行描述。并封装成对象。其实就是java对不征程情况进行描述后的对象体现</p><p><strong>问题的划分</strong></p><p>1）严重的问题  2）非严重的问题</p><p><strong>问题的描述</strong></p><p>1）对于严重的问题，java通过使用Error类进行描述</p><p>​        对于Error一般不编写针对性的代码进行处理</p><p>2）对于非严重的问题，java通过Exception类进行描述</p><p>​        对于Exception可以使用针对性的处理方式进行处理</p><p><strong>说明</strong></p><p>无论是Error还是Exception都具有一些的共性内容</p><p>比如不正常的情况信息引发原因等,于是向上抽取形成Throwable体系</p><p>Throwable</p><p>​         |–Error</p><p>​         |–Exception</p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><h2 id="java提供了以下特有的语句进行异常处理"><a href="#java提供了以下特有的语句进行异常处理" class="headerlink" title="java提供了以下特有的语句进行异常处理"></a><strong>java提供了以下特有的语句进行异常处理</strong></h2><p><img src="https://img-blog.csdnimg.cn/20190528135104306.png" alt="在这里插入图片描述"></p><p><strong>注意</strong>：如果在try中定义有变量，则这个变量只能在try语句范围内有效</p><p><strong>实例：</strong></p><p><img src="https://img-blog.csdnimg.cn/20190528135112945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="对捕获异常对象进行的常见方法操作"><a href="#对捕获异常对象进行的常见方法操作" class="headerlink" title="对捕获异常对象进行的常见方法操作"></a>对捕获异常对象进行的常见方法操作</h1><p> 1） String   getMessage();//获取异常信息字符串      </p><p>​          说明：获取的只有异常信息，较为简单</p><p><img src="https://img-blog.csdnimg.cn/20190528135120763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2）String   toString()//获取异常名称 ：异常信息     </p><p>​     说明：获取的信息较为齐全</p><p>3）void prinStackTrace();//异常名称，异常信息，异常出现的位置</p><p>注意：jvm默认的异常处理机制就是在调用prinStackTrace方法。打印异常的堆栈跟踪信息</p><p>说明：信息最为齐全</p><h1 id="异常声明throws"><a href="#异常声明throws" class="headerlink" title="异常声明throws"></a>异常声明throws</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><strong>介绍</strong></h2><p>在程序的开发过程中，应该对可能出现异常并未处理的功能模块使用throws进行标识声明将，在调用者使用该功能模块时知道该模块可能出现问题，并进行异常处理，如果不处理将会出现编译失败的情况。</p><p><img src="https://img-blog.csdnimg.cn/20190528135137565.png" alt="在这里插入图片描述"></p><h2 id="处理实例"><a href="#处理实例" class="headerlink" title="处理实例"></a>处理实例</h2><p>对功能模块中声明的异常，主函数在使用的时候针对抛出的异常进行捕抓并做相对应的处理</p><p><img src="https://img-blog.csdnimg.cn/20190528135205944.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="多异常处理"><a href="#多异常处理" class="headerlink" title="多异常处理"></a>多异常处理</h1><p>1）在声明异常时，建议声明更加具体的异常。这样的处理更加的具体。</p><p>2）对声明的异常进行处理时一般使用更加具体的异常进行异常处理，提高正对性</p><p>3）提高异常处理的针对性可以在发生声明的具体异常意外出现的异常进行及时有效的处理</p><p>总结：当功能模块可能出现多个异常时一般使用多异常的处理机制进行处理</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>1）多异常声明方法：throws 异常1，异常2</p><p><img src="https://img-blog.csdnimg.cn/20190528135217661.png" alt="在这里插入图片描述"></p><p>2）异常处理方法，书写对应的catch语句对捕获异常进行处理,如图所示</p><p><img src="https://img-blog.csdnimg.cn/20190528135224521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>​     1）对方声明几个异常就有几个catch块进行异常处理，不要定义多余的catch块</p><p>​     2）如果多个catch块中的异常出现继承关系，父类异常catch块放在最下面</p><p>​     3）建立catch处理时，catch中一定要定义具体处理方式，不要简单的定义一句                         e.printStackTrace(),也不要简单的书写一条输出语句。</p><p>​      4）正确的处理异常方式是将异常结果输出记录到异常记录文件，提供维护人员进行维护</p><h1 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h1><h2 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h2><p>Java针对了普遍有可能出现的问题进行了总结和封装成类的形式，但是在项目开发的过程中同样会出现异常，这些异常部分可能是项目的特有异常Java中是没有定义的，所以就需要开发人员自定义异常。</p><h2 id="自定义异常类"><a href="#自定义异常类" class="headerlink" title="自定义异常类"></a>自定义异常类</h2><p>1）将异常封装成一个类并继承Exception,注意必须是自定义类继承Exception</p><p>原因：异常体系有一个特点：因为异常类和异常对象都被抛出他们都具备可抛性，这个可抛性是Throwable这个体系中独有特点，只有这个体系的类和对象才可以被throws和throw操作</p><p>2）添加异常信息，直接定义构造函数接收异常信息并调用父类方法即可添加</p><p><img src="https://img-blog.csdnimg.cn/20190528135235948.png" alt="在这里插入图片描述"></p><p>原因：在父类的Throwable中已经定义了错误信息接收机制，子类直接使用父类构造方法即可</p><p><img src="https://img-blog.csdnimg.cn/20190528135241669.png" alt="在这里插入图片描述"></p><h2 id="自定义异常方法"><a href="#自定义异常方法" class="headerlink" title="自定义异常方法"></a>自定义异常方法</h2><p>1）定义一个自定义的异常类</p><p>2)在功能模块中，达到了异常条件时将自定义异常手动抛出</p><p>3）对抛出异常对象进行处理，处理方式</p><p>（1）在函数内部使用try catch处理，如下图所示</p><p><img src="https://img-blog.csdnimg.cn/20190528135316758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>（2）在函数上声明让调用者进行处理</p><p>注意：</p><p>（1）由于自定义异常非Java本身定义所以在编写功能模块时需要使用关键字throw将异常手动抛出</p><p>（1）编写功能模块时，功能模块内部引起的异常则在内部进行处理，如果是外部调用者导致的功能异常则将异常抛出由调用者解决（即谁直接导致或操作导致异常的发生谁就对该异常进行处理，不能层层抛出去）</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>需求：在进行除法运算时，对于除数是负数的情况，也视为是错误的无法进行运算的</p><p>（1）自定义异常类</p><p><img src="https://img-blog.csdnimg.cn/201905281356033.png" alt="在这里插入图片描述"></p><p>（2）功能模块</p><p><img src="https://img-blog.csdnimg.cn/20190528135530957.png" alt="在这里插入图片描述"></p><p>（3）调用者函数</p><p><img src="https://img-blog.csdnimg.cn/20190528135258949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="throw和throws的区别"><a href="#throw和throws的区别" class="headerlink" title="throw和throws的区别"></a>throw和throws的区别</h2><p>1）throws使用在函数上</p><p>2）throw使用在函数内</p><p>3）throws后面跟的异常类，可以跟多个。用逗号隔开</p><p>4）throw后跟的是异常对象(不仅限于自定义异常)</p><h1 id="RuntimeException"><a href="#RuntimeException" class="headerlink" title="RuntimeException"></a>RuntimeException</h1><h2 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h2><p>对于异常分为两种：</p><p>1）编译时被检测异常</p><p>2）编译时不被检测异常（运行时异常。RuntimeException以及其子类）</p><p>RuntimeException是Exception中的特殊异常类</p><p> 该异常类特点：</p><p>（1）在函数内部throw异常对象时，不需要在函数上声明,编译一样通过</p><p>（2）在函数上进行声明，调用者<strong>可以</strong>不进行处理，编译一样通过</p><p>原因：之所以不用在函数上进行声明是因为不需要调用者进行处理，当该异常发生时希望程序停止。因为在运行时，出现了无法继续运算的情况，希望停止程序后对代码进行修正</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><p><img src="https://img-blog.csdnimg.cn/20190528135306703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="自定义异常新类型"><a href="#自定义异常新类型" class="headerlink" title="自定义异常新类型"></a>自定义异常新类型</h2><p>自定义异常时：如果该异常的发生，无法继续进行运算，就让自定义异常继承RuntimeException</p><h1 id="异常-finally"><a href="#异常-finally" class="headerlink" title="异常-finally"></a>异常-finally</h1><p>介绍：finally代码块存放着程序中一定会执行的代码</p><p>常用环境：常用于关闭资源</p><p>注意：finally只有一种情况不执行，当执行到System.exit(0),finally不会执行</p><h1 id="异常-覆盖时的异常特点"><a href="#异常-覆盖时的异常特点" class="headerlink" title="异常-覆盖时的异常特点"></a>异常-覆盖时的异常特点</h1><p>1）子类在覆盖父类方法时，如果覆盖的父类方法抛出异常，那么子类的覆盖方法只能抛出父类的异常或该异常的子类或者不抛出异常</p><p>2）如果在覆盖方法的时候出现了新的异常，这种情况不可以将异常抛出，而是将异常处理在函数内部</p><p>3）如果父类方法抛出多异常，那么子类在覆盖该方法时，只能抛出父类异常的子集</p><p>4）如果父类或者接口方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常，如果子类发生了异常就只能进行try处理，绝对不能抛出</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>异常的好处</p><p>1)将问题进行封装</p><p>2）将正常流程代码和问题处理代码相分离，方便阅读</p><p>异常处理原则</p><p>1）处理方式有两种:try或者throws</p><p>2）调用到抛出异常的功能时，抛出几个就处理几个（一个try，对应多个catch）</p><p>3）多个catch，父类的catch放到最下面</p><p>4）catch内，需要定义针对性的处理方式。不要简单定义printStackTrace输出语句,也不要不写，当捕获的异常本功能处理不了时，可以在catch中抛出</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;异常：就是程序在运行时出现不正常的情况&lt;/p&gt;
&lt;p&gt;异常由来：问题也是现实生活中一个
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java基础" scheme="http://yoursite.com/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Linux实操篇-Linux实用指令</title>
    <link href="http://yoursite.com/2019/05/25/Linux%E5%AE%9E%E6%93%8D%E7%AF%87-Linux%E5%AE%9E%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>http://yoursite.com/2019/05/25/Linux实操篇-Linux实用指令/</id>
    <published>2019-05-25T05:04:48.707Z</published>
    <updated>2019-05-28T06:06:00.680Z</updated>
    
    <content type="html"><![CDATA[<h1 id="运行级别指令"><a href="#运行级别指令" class="headerlink" title="运行级别指令"></a>运行级别指令</h1><h2 id="运行级别说明"><a href="#运行级别说明" class="headerlink" title="运行级别说明"></a>运行级别说明</h2><p>Linux有七个运行级别，如下所示</p><table><thead><tr><th>运行级别</th><th style="text-align:center">级别说明</th></tr></thead><tbody><tr><td>0</td><td style="text-align:center">关机</td></tr><tr><td>1</td><td style="text-align:center">单用户（找回丢失密码）</td></tr><tr><td>2</td><td style="text-align:center">多用户无网络服务</td></tr><tr><td>3</td><td style="text-align:center">多用户有网络服务（用的最多的）</td></tr><tr><td>4</td><td style="text-align:center">保留尚未使用</td></tr><tr><td>5</td><td style="text-align:center">图形界面</td></tr><tr><td>6</td><td style="text-align:center">重启（启用该运行别之后机器进入该级别就会重启）</td></tr></tbody></table><p><strong>运行级别配置文件：/etc/inittab</strong></p><p>常用的运行级别是3和5，要修改默认的运行级别可以修改运行级别配置文件：/etc/inittab的id:5 initdefault:这行中的数字</p><h2 id="指定运行级别"><a href="#指定运行级别" class="headerlink" title="指定运行级别"></a>指定运行级别</h2><p>基本语法： init [0123456]</p><p>举例：从图像界面到运行级别3，再从级别3回退到级别5</p><p>在Linux的图形界面中，打开终端输入：init  3 回车进入级别3，再输入init5即可回到级别5</p><h2 id="【面试题】如何找回root密码"><a href="#【面试题】如何找回root密码" class="headerlink" title="【面试题】如何找回root密码"></a>【面试题】如何找回root密码</h2><p>题目：如何找回root密码，如果我们不小心忘记了root密码，怎么找回？</p><p>思路：进入到单用户模式（运行级别1），然后修改root密码，因为进入单用户模式，root不需要密码就可以登录</p><p>实际操作步骤：<br>1）启动系统没有进入到登录页面前点击enter键暂停启动，如下图所示</p><p><img src="https://img-blog.csdnimg.cn/20190528131532841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="img">=2）输入e,编辑命令在启动之前，进入如下页面</p><p><img src="https://img-blog.csdnimg.cn/2019052813175089.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="img"></p><p>3)将光标移动到第二行，再输入e(编辑内核)，进入如下页面，输入1（运行级别1，单用户模式）</p><p><img src="https://img-blog.csdnimg.cn/20190528131906868.png" alt="在这里插入图片描述"></p><p>4）输入enter键，再输入b，开始引导</p><p>5）开始进入单用户模式，用户登录为root</p><p><img src="https://img-blog.csdnimg.cn/20190528132000508.png" alt="在这里插入图片描述"></p><p>6）进入之后直接输入passwd root进行修改root账户密码。</p><p>7）输入reboot重启完成操作</p><p><strong>细节说明</strong></p><p>1）不允许通过使用远程操作的方式进行修改密码，需要进行直接操作电脑的方式进行</p><p>2）假如默认运行级别被修改为级别0，出现无法开机的情况，解决办法是进入单用户模式修改默认启动级别即可</p><h1 id="帮助指令"><a href="#帮助指令" class="headerlink" title="帮助指令"></a>帮助指令</h1><p>当我们对某个指令不熟悉时，我们可以使用Linux指令的帮助指令进行了解指令的使用方法。</p><h2 id="man-获得帮助信息"><a href="#man-获得帮助信息" class="headerlink" title="man 获得帮助信息"></a>man 获得帮助信息</h2><p> 基本语法 :man [命令或配置文件]（功能描述：获得帮助信息） </p><h2 id="help指令"><a href="#help指令" class="headerlink" title="help指令"></a>help指令</h2><p> 基本语法:help 命令 （功能描述：获得shell内置命令的帮助信息） </p><p>百度帮助更直接</p><p>虽然上面两个都可以来获取指令帮助，但是需要英语功底，如果英语不太好的，我还是 推荐大家直接百度靠谱。</p><h1 id="文件目录类"><a href="#文件目录类" class="headerlink" title="文件目录类"></a>文件目录类</h1><h2 id="pwd-指令"><a href="#pwd-指令" class="headerlink" title="pwd 指令"></a>pwd 指令</h2><p>功能描述：显示当前工作目录的绝对路径</p><p>基本语法：pwd</p><h2 id="ls指令"><a href="#ls指令" class="headerlink" title="ls指令"></a>ls指令</h2><p> 基本语法：ls [选项] [目录或是文件] </p><p> 常用选项</p><p>1） -a ：显示当前目录所有的文件和目录，包括隐藏的。</p><p>2） -l  ：以列表的方式显示信息 </p><p> 操作实例如图所示：</p><p><img src="https://img-blog.csdnimg.cn/20190528132021365.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20190528132031802.png" alt="在这里插入图片描述"></p><h2 id="cd-指令"><a href="#cd-指令" class="headerlink" title="cd 指令"></a>cd 指令</h2><p>功能描述：进入到指定目录</p><p> 基本语法 ：cd  [参数] (功能描述：切换到指定目录)</p><p> 常用参数 ：</p><p>1） 绝对路径和相对路径 </p><p>2）cd ~ 或者cd 回到自己的家目录</p><p>3） cd .. 回到当前目录的上一级目录</p><h2 id="如何理解绝对绝对路径与相对路径："><a href="#如何理解绝对绝对路径与相对路径：" class="headerlink" title="如何理解绝对绝对路径与相对路径："></a>如何理解绝对绝对路径与相对路径：</h2><p>需求：从当前工作目录时的 /root进入到/home</p><p>绝对路径： /home，即从根目录开始定位</p><p>相对路径：../home，从当前工作目录定位</p><h2 id="mkdir指令"><a href="#mkdir指令" class="headerlink" title="mkdir指令"></a>mkdir指令</h2><p>功能描述：mkdir指令用于创建目录</p><p>基本语法：  mkdir  [选项] 要创建的目录 </p><p>常用选项 ：-p ：创建多级目录</p><p><strong>实例</strong></p><p>1）创建一个目录：/home/dog</p><p>指令： mkdir   /home/dog</p><p>2）创建多级目录 /home/animal/tiger</p><p>指令：mkdir -p  /home/animal/tiger</p><h2 id="rmdir指令"><a href="#rmdir指令" class="headerlink" title="rmdir指令"></a>rmdir指令</h2><p>功能描述： rmdir指令删除空目录</p><p> 基本语法     rmdir  [选项] 要删除的空目录 </p><p><strong>细节说明</strong> </p><p>1）rmdir 删除的是空目录，如果目录下有内容时无法删除的。</p><p>2）如果需要删除非空目录，需要使用指令： rm -rf 要删除的目录</p><h2 id="touch指令"><a href="#touch指令" class="headerlink" title="touch指令"></a>touch指令</h2><p>功能描述： touch指令创建空文件 </p><p> 基本语法     touch 文件名称 </p><p><strong>实例：</strong></p><p>1）创建一个文件: touch 1.txt</p><p>2)   创建多个文件：touch 1.txt   2.txt</p><h2 id="cp指令"><a href="#cp指令" class="headerlink" title="cp指令"></a>cp指令</h2><p>cp 指令拷贝文件到指定目录 </p><p>基本语法 cp [选项] source dest</p><p>常用选项 -r ：递归复制整个文件夹</p><p>说明： 强制覆盖不提示的方法：\cp</p><p><strong>实例：</strong></p><p>1）将当前目录下的1.txt文件拷贝到当前目录home/b目录下</p><p><img src="https://img-blog.csdnimg.cn/2019052813213189.png" alt="在这里插入图片描述"></p><p>2） 拷贝文件夹  ： cp  -r   源目录/   目标目录/</p><p>3）拷贝文件夹时，覆盖目标文件夹文件：\cp   -r   源目录/   目标目录/</p><h2 id="rm指令"><a href="#rm指令" class="headerlink" title="rm指令"></a>rm指令</h2><p>功能描述：rm 指令移除文件或目录 </p><p>基本语法 rm  [选项] 要删除的文件或目录</p><p> 常用选项         </p><p>1) -r ：递归删除整个文件夹</p><p>2）-f ： 强制删除不提示</p><p>说明：强制删除不提示的方法：带上 -f 参数即可</p><p><strong>实例</strong></p><p>（1）删除文件</p><p><img src="https://img-blog.csdnimg.cn/20190528132233147.png" alt="在这里插入图片描述"></p><p>（2）强制删除整个目录</p><p><img src="https://img-blog.csdnimg.cn/20190528132248421.png" alt="在这里插入图片描述"></p><h2 id="mv指令"><a href="#mv指令" class="headerlink" title="mv指令"></a>mv指令</h2><p>功能描述：mv 移动文件到相应目录或重命名 </p><p>基本语法</p><p>1）mv  oldNameFile newNameFile     (功能描述：重命名) </p><p>2）mv /temp/movefile /targetFolder (功能描述：移动文件)</p><p><strong>实例</strong></p><p>（1）重命名文件</p><p>需求：将当前目录下的aaa.txt文件重命名为pig.txt</p><p><img src="https://img-blog.csdnimg.cn/20190528132324523.png" alt="在这里插入图片描述"></p><p>细节说明：它的实质还是移动命令（即剪切），将当前目录下的aaa.txt文件，移动到当前目录下的pig.txt文件</p><p>（2）移动文件</p><p>需求：将当前目录下的pig.txt文件移动到/root目录下</p><p><img src="https://img-blog.csdnimg.cn/20190528132332540.png" alt="在这里插入图片描述"></p><h2 id="cat指令"><a href="#cat指令" class="headerlink" title="cat指令"></a>cat指令</h2><p>功能描述：cat 查看文件内容 ，以只读的方式</p><p>基本语法 ：cat  [选项] 要查看的文件 </p><p>常用选项 ：    -n ：显示行号</p><p><strong>实例</strong></p><p>需求：  读取/ect/profile 文件内容，并显示行号 </p><p><img src="https://img-blog.csdnimg.cn/20190528132348759.png" alt="在这里插入图片描述"></p><p><strong>细节说明</strong></p><p>1）它的功能只能查看文件内容，不能对文件进行修改。（只读的方式）</p><p>2）在使用cat命令为了浏览方便，一般会带上 管道命令 | more ，对文件分页显示，点击空格键即可浏览下一页。语法：cat  文件名 | more</p><h2 id="more指令"><a href="#more指令" class="headerlink" title="more指令"></a>more指令</h2><p>功能描述： more指令是一个基于VI编辑器的文本过滤器，它以全屏幕的方式按页          显示文本文件的内容。 more指令中内置了若干快捷键，详见操作说明</p><p>操作说明</p><table><thead><tr><th>操作</th><th style="text-align:center">功能说明</th></tr></thead><tbody><tr><td>空白键（space）</td><td style="text-align:center">代表向下翻一页</td></tr><tr><td>Enter</td><td style="text-align:center">代表向下翻一行</td></tr><tr><td>q</td><td style="text-align:center">代表立刻离开more ，不再显示该文件内容。</td></tr><tr><td>Ctrl+F</td><td style="text-align:center">向下滚动一屏</td></tr><tr><td>Ctrl+B</td><td style="text-align:center">返回上一屏</td></tr><tr><td>=</td><td style="text-align:center">输出当前行的行号</td></tr><tr><td>:f</td><td style="text-align:center">输出文件名和当前行的行号</td></tr></tbody></table><p>基本语法 ：more 要查看的文件 </p><h2 id="less指令"><a href="#less指令" class="headerlink" title="less指令"></a>less指令</h2><p>功能描述：less指令用来分屏查看文件内容，它的功能与more指令类似，但是比more指令更加强大，支 持各种显示终端。less指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是 根据显示需要加载内容，<strong>对于显示大型文件具有较高的效率。</strong></p><p>操作说明</p><table><thead><tr><th>操作</th><th style="text-align:center">功能说明</th></tr></thead><tbody><tr><td>空白键</td><td style="text-align:center">向下翻动一页</td></tr><tr><td>[pagedown]</td><td style="text-align:center">向下翻动一页</td></tr><tr><td>[pageup]</td><td style="text-align:center">向上翻动一页；</td></tr><tr><td>/字串</td><td style="text-align:center">向下搜寻『字串』的功能；n：向下查找；N：向上查找；</td></tr><tr><td>?字串</td><td style="text-align:center">向上搜寻『字串』的功能；n：向上查找；N：向下查找；</td></tr><tr><td>q</td><td style="text-align:center">离开 less 这个程序；</td></tr></tbody></table><h2 id="指令-gt-和-gt-gt-指令"><a href="#指令-gt-和-gt-gt-指令" class="headerlink" title="指令&gt; 和 &gt;&gt; 指令"></a><strong>指令&gt; 和 &gt;&gt; 指令</strong></h2><p>输出重定向&gt;和 &gt;&gt; 追加 </p><p>功能描述：</p><p>1)输出重定向&gt;添加内到指定文件会将原来的文件内容覆盖</p><p>2）追加&gt;&gt;添加内容到指定文件不会覆盖原来的文件内容，而是追加到文件末尾</p><p>基本语法<br>1) ls -l &gt;文件 （功能描述：列表的内容写入文件a.txt中（覆盖写））<br>2) ls -al &gt;&gt;文件 （功能描述：列表的内容追加到文件aa.txt的末尾）<br>3)  cat 文件1 &gt; 文件2 （功能描述：将文件1的内容覆盖到文件2）<br>4) echo “内容”&gt;&gt; 文件 (功能描述：直接将双引号中的内容追加到指定文件中)</p><p><strong>实例</strong></p><p>（1）需求：创建a.txt文件并存入当前列表信息</p><p><img src="https://img-blog.csdnimg.cn/20190528132418567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>说明：ls-l &gt;a.txt,是将ls-l的显示内容覆盖写入到a.txt文件中。如果该文件不存在，将新建一个a.txt文件</p><p>（2）将文件1的内容覆盖到文件2<img src="https://img-blog.csdnimg.cn/20190528132429912.png" alt="在这里插入图片描述"></p><h2 id="echo指令"><a href="#echo指令" class="headerlink" title="echo指令"></a>echo指令</h2><p>功能描述： echo输出内容到控制台。 </p><p>基本语法 echo  [选项] [输出内容]</p><p>实例</p><p>（1）输出环境变量路径（path）</p><p><img src="https://img-blog.csdnimg.cn/20190528132429912.png" alt="在这里插入图片描述"></p><p>(2)输出hello到控制台</p><p><img src="https://img-blog.csdnimg.cn/20190528132516600.png" alt="在这里插入图片描述"></p><h2 id="head指令"><a href="#head指令" class="headerlink" title="head指令"></a>head指令</h2><p>功能描述：head用于显示文件的开头部分内容，默认情况下head指令显示文件的前10行内容 </p><p>基本语法：</p><p>1） head 文件 (功能描述：查看文件头10行内容) </p><p>2）head -n 5 文件 (功能描述：查看文件头5行内容，5可以是任意行数) </p><p><strong>实例</strong></p><p>（1）查看/etc/profile文件前五行</p><p><img src="https://img-blog.csdnimg.cn/20190528132530553.png" alt="在这里插入图片描述"></p><h2 id="tail指令"><a href="#tail指令" class="headerlink" title="tail指令"></a>tail指令</h2><p>功能描述：tail用于输出文件中尾部的内容，默认情况下tail指令显示文件的前10行内容。 </p><p>基本语法 </p><p>1) tail  文件 （功能描述：查看文件后10行内容） </p><p>2) tail  -n 5 文件 （功能描述：查看文件后5行内容，5可以是任意行数） </p><p>3) tail  -f  文件 （功能描述：实时追踪该文档的所有更新） </p><p><strong>实例</strong></p><p>（1）查看/etc/profile 最后5行的代码</p><p><img src="https://img-blog.csdnimg.cn/20190528132542862.png" alt="在这里插入图片描述"></p><p>（2）实时监控mydate.txt,看看文件有变化时，是否看到实时的追加日期</p><p>​      1）tail  -f  文件对文件进行实时监控</p><p><img src="https://img-blog.csdnimg.cn/20190528132548946.png" alt="在这里插入图片描述"></p><p>​       2）在其他终端向文件添加内容，实时监控终端也会同步更新显示</p><h2 id="ln-指令"><a href="#ln-指令" class="headerlink" title="ln 指令"></a>ln 指令</h2><p>功能描述：软链接也成为符号链接，类似于windows里的快捷方式，主要存放了链接其他文件的路径</p><p> 基本语法： ln -s [原文件或目录] [软链接名] （功能描述：给原文件创建一个软链接）</p><p> 细节说明：当我们使用pwd指令查看目录时，仍然看到的是软链接所在目录。</p><p> <strong>实例</strong> </p><p>（1） 在/home 目录下创建一个软链接 linkToRoot，连接到 /root 目录<br><img src="https://img-blog.csdnimg.cn/20190528132605835.png" alt="在这里插入图片描述"></p><p>（2） 删除软连接 linkToRoot（删除软链接的时候不要带斜杠，否则提示忙）</p><p><img src="https://img-blog.csdnimg.cn/20190528132619958.png" alt="在这里插入图片描述"></p><h2 id="history指令"><a href="#history指令" class="headerlink" title="history指令"></a>history指令</h2><p>查看已经执行过历史命令,也可以执行历史指令</p><p> 基本语法 ：history （功能描述：查看已经执行过历史命令） </p><p><strong>实例</strong></p><p>（1）显示所有的历史命令 </p><p>  <img src="https://img-blog.csdnimg.cn/20190528132637679.png" alt="在这里插入图片描述"></p><p>（2） 显示最近使用过的10个指令</p><p><img src="https://img-blog.csdnimg.cn/20190528132648240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>（3）执行历史编号为178的指令</p><p><img src="https://img-blog.csdnimg.cn/20190528132656910.png" alt="在这里插入图片描述"></p><h1 id="时间日期类"><a href="#时间日期类" class="headerlink" title="时间日期类"></a>时间日期类</h1><h2 id="date指令-显示当前日期"><a href="#date指令-显示当前日期" class="headerlink" title="date指令-显示当前日期"></a>date指令-显示当前日期</h2><p>基本语法 </p><p>1) date （功能描述：显示当前时间）</p><p> 2) date +%Y （功能描述：显示当前年份）</p><p> 3) date +%m （功能描述：显示当前月份）</p><p> 4) date +%d （功能描述：显示当前是哪一天） </p><p>5) date “+%Y-%m-%d %H:%M:%S”（功能描述：显示年月日时分秒）</p><p><strong>实例</strong></p><p>（1）显示当前年月日</p><p>​               1）第一种方式</p><p><img src="https://img-blog.csdnimg.cn/20190528132711318.png" alt="在这里插入图片描述"></p><p>​                2）第二种方式</p><p><img src="https://img-blog.csdnimg.cn/2019052813272178.png" alt="在这里插入图片描述"></p><h2 id="date指令-设置日期"><a href="#date指令-设置日期" class="headerlink" title="date指令-设置日期"></a>date指令-设置日期</h2><p>基本语法： date  -s 字符串时间 </p><p><strong>实例</strong></p><p> （1） 设置系统当前时间 ， 比如设置成 2018-10-10 11:22:22</p><p><img src="https://img-blog.csdnimg.cn/20190528132731337.png" alt="在这里插入图片描述"></p><h2 id="cal指令"><a href="#cal指令" class="headerlink" title="cal指令"></a>cal指令</h2><p>功能描述：查看日历指令 </p><p>基本语法： cal [选项] （功能描述：不加选项，显示本月日历） </p><p>实例 </p><p>（1） 显示当前日历</p><p><img src="https://img-blog.csdnimg.cn/20190528132745857.png" alt="在这里插入图片描述"></p><p> （2） 显示2020年日历</p><p><img src="https://img-blog.csdnimg.cn/20190528132752412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="搜索查找类"><a href="#搜索查找类" class="headerlink" title="搜索查找类"></a>搜索查找类</h1><h2 id="find指令"><a href="#find指令" class="headerlink" title="find指令"></a>find指令</h2><p>功能描述： find指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终 端。</p><p> 基本语法 ：find  [搜索范围] [选项]</p><p>常用选项说明</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-name&lt;查询方式&gt;</td><td>按照指定的文件名查找模式查找文件</td></tr><tr><td>-user&lt;用户名&gt;</td><td>-user&lt;用户名&gt;</td></tr><tr><td>-size&lt;文件大小&gt;</td><td>按照指定的文件大小查找文件。</td></tr></tbody></table><p><strong>实例</strong></p><p>（1） 按文件名：根据名称查找/home 目录下的hello.txt文件 </p><p><img src="https://img-blog.csdnimg.cn/20190528132803531.png" alt="在这里插入图片描述"></p><p>（2）按拥有者：查找/opt目录下，用户名称为 nobody的文件</p><p><img src="https://img-blog.csdnimg.cn/20190528132813335.png" alt="在这里插入图片描述"></p><h2 id="locate指令"><a href="#locate指令" class="headerlink" title="locate指令"></a>locate指令</h2><p>功能描述： locaate指令可以快速定位文件路径。locate指令利用事先建立的系统中所有文件名称及路径 的locate数据库实现快速定位给定的文件。Locate指令无需遍历整个文件系统，查询速度较快。 为了保证查询结果的准确度，管理员必须定期更新locate时刻。 </p><p>基本语法 ：locate 搜索文件</p><p> 特别说明： 由于locate指令基于数据库进行查询，所以第一次运行前，必须使用updatedb指令创建locate 数据库。</p><p> <strong>实例</strong> </p><p>（1）请使用locate 指令快速定位 hello.txt 文件所在目录</p><p><img src="https://img-blog.csdnimg.cn/20190528132845187.png" alt="在这里插入图片描述"></p><h2 id="grep指令和-管道符号"><a href="#grep指令和-管道符号" class="headerlink" title="grep指令和 管道符号 |"></a>grep指令和 管道符号 |</h2><p>功能描述： grep 过滤查找 ， 管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理。<br>基本语法 ：grep [选项] 查找内容 源文件</p><p> 常用选项</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-n</td><td>显示匹配行以及行号</td></tr><tr><td>-i</td><td>忽略字母大小写</td></tr></tbody></table><p>实例</p><p> （1） 请在 hello.txt 文件中，查找 “yes”  所在行(区分大小写)，并且显示行号</p><p><img src="https://img-blog.csdnimg.cn/20190528132857739.png" alt="在这里插入图片描述"></p><p> （1） 请在 hello.txt 文件中，查找 “yes”  或”Yes”所在行，并且显示行号</p><p><img src="https://img-blog.csdnimg.cn/20190528132910240.png" alt="在这里插入图片描述"></p><h1 id="压缩和解压类"><a href="#压缩和解压类" class="headerlink" title="压缩和解压类"></a>压缩和解压类</h1><h2 id="gzip-gunzip-指令"><a href="#gzip-gunzip-指令" class="headerlink" title="gzip/gunzip 指令"></a>gzip/gunzip 指令</h2><p>功能描述：gzip 用于压缩文件， gunzip 用于解压的<br>基本语法 ：</p><p>1）gzip 文件 （功能描述：压缩文件，只能将文件压缩为*.gz文件）</p><p>2）gunzip 文件.gz （功能描述：解压缩文件命令）<br><strong>实例</strong></p><p>（1）gzip压缩， 将 /home下的 hello.txt文件进行压缩 </p><p> <img src="https://img-blog.csdnimg.cn/20190528133108238.png" alt="在这里插入图片描述"></p><p>（2）gunzip压缩， 将 /home下的 hello.txt.gz 文件进行解压缩</p><p><img src="https://img-blog.csdnimg.cn/20190528133114193.png" alt="在这里插入图片描述"></p><h2 id="zip-unzip-指令"><a href="#zip-unzip-指令" class="headerlink" title="zip/unzip 指令"></a>zip/unzip 指令</h2><p>功能描述：zip 用于压缩文件， unzip 用于解压的，这个在项目打包发布中很有用的<br>基本语法：</p><p> zip      [选项] XXX.zip  将要压缩的内容（功能描述：压缩文件和目录的命令） unzip [选项] XXX.zip （功能描述：解压缩文件） </p><p> zip常用选项： -r：递归压缩，即压缩目录 </p><p>unzip的常用选项： -d&lt;目录&gt; ：指定解压后文件的存放目录 </p><p><strong>实例</strong> </p><p>（1） 将 /home下的 所有文件进行压缩成 mypackage.zip</p><p><img src="https://img-blog.csdnimg.cn/20190528133129470.png" alt="在这里插入图片描述"></p><p>（2） 将 mypackge.zip 解压到 /opt/tmp 目录下</p><p><img src="https://img-blog.csdnimg.cn/20190528133140104.png" alt="在这里插入图片描述"></p><h2 id="tar-指令"><a href="#tar-指令" class="headerlink" title="tar 指令"></a>tar 指令</h2><p>功能描述：tar 指令 是打包指令，最后打包后的文件是 .tar.gz 的文件。<br>基本语法：</p><p> tar  [选项]  XXX.tar.gz  打包的内容 (功能描述：打包目录，压缩后的文件格式.tar.gz)      </p><p> 选项说明（压缩带上前四个参数，如果是解压就不带z参数应带x参数）</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-c</td><td>产生.tar打包文件</td></tr><tr><td>-v</td><td>显示详细信息</td></tr><tr><td>-f</td><td>指定压缩后的文件名</td></tr><tr><td>-z</td><td>打包同时压缩</td></tr><tr><td>-x</td><td>解包.tar文件</td></tr></tbody></table><p><strong>实例</strong> </p><p>(1) 压缩多个文件，将 /home/a1.txt 和 /home/a2.txt 压缩成 a.tar.gz </p><p> <img src="https://img-blog.csdnimg.cn/20190528133148164.png" alt="在这里插入图片描述"></p><p>(2)  将/home 的文件夹 压缩成 myhome.tar.gz </p><p><img src="https://img-blog.csdnimg.cn/201905281331544.png" alt="在这里插入图片描述"></p><p>(3)  将 a.tar.gz  解压到当前目录(注意参数)</p><p><img src="https://img-blog.csdnimg.cn/20190528133200378.png" alt="在这里插入图片描述"></p><p>(4)将myhome.tar.gz 解压到 /opt目录下（指定解压的目录，事先需要存在，否则报错）</p><p><img src="https://img-blog.csdnimg.cn/20190528133207573.png" alt="在这里插入图片描述"></p><ul><li>gunzip压缩， 将 /home下的 hello.txt.gz 文件进行解压缩</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;运行级别指令&quot;&gt;&lt;a href=&quot;#运行级别指令&quot; class=&quot;headerlink&quot; title=&quot;运行级别指令&quot;&gt;&lt;/a&gt;运行级别指令&lt;/h1&gt;&lt;h2 id=&quot;运行级别说明&quot;&gt;&lt;a href=&quot;#运行级别说明&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux实操" scheme="http://yoursite.com/tags/Linux%E5%AE%9E%E6%93%8D/"/>
    
  </entry>
  
  <entry>
    <title>Linux实操篇-常见命令与用户管理</title>
    <link href="http://yoursite.com/2019/05/24/Linux%E5%AE%9E%E6%93%8D%E7%AF%87-%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%E4%B8%8E%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2019/05/24/Linux实操篇-常见命令与用户管理/</id>
    <published>2019-05-24T10:46:55.166Z</published>
    <updated>2019-05-28T05:49:41.507Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h1><h2 id="关机-amp-重启相关命令"><a href="#关机-amp-重启相关命令" class="headerlink" title="关机&amp;重启相关命令"></a>关机&amp;重启相关命令</h2><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>shutdown  -h    1</td><td>一分钟后关机</td></tr><tr><td>shutdown   -h   now</td><td>立即进行关机</td></tr><tr><td>shutdown   -r    now</td><td>立即重启计算机</td></tr><tr><td>halt</td><td>关机</td></tr><tr><td>reboot</td><td>现在重启计算机</td></tr><tr><td>sync</td><td>把内存的数据同步到磁盘</td></tr></tbody></table><p><strong>注意：</strong></p><p>不管是重启计算机还是关闭计算机，都需要运行sync命令，把内存中的数据写到磁盘中去，防止数据丢失。</p><h2 id="用户登录和注销"><a href="#用户登录和注销" class="headerlink" title="用户登录和注销"></a>用户登录和注销</h2><p>1) 登录时尽量少用root帐号登录，因为它是系统管理员，最大的权限，避免操作失误。可以使用普通用户登录，涉及到需要更高权限的操作时，在登录后再用”su - 用户名’命令来切换成系统管理员身份</p><p> 2) 在提示符下输入 logout 即可注销用户</p><p><strong>细节：</strong> logout 注销指令在图形运行级别无效，在 运行级别 3下有效</p><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向 系统管理员申请一个账号，然后以这个账号的身份进入系统。</p><h2 id="用户管理常见指令"><a href="#用户管理常见指令" class="headerlink" title="用户管理常见指令"></a>用户管理常见指令</h2><p><strong>添加用户</strong></p><p>基本语法：命令行输入useradd  用户名</p><p>说明：</p><p>1) 当创建用户成功后，会自动的创建和用户同名的家目录 </p><p>2) 也可以通过 useradd -d  指定目录 新的用户名，给新创建的用户指定家目录</p><p><strong>指定/修改密码</strong></p><p>基本语法： passwd    用户名 </p><p><strong>删除用户</strong></p><p>基本语法 </p><p>1）删除用户，但是保留家目录：userdel   用户名</p><p>2）删除用户以及用户家目录： userdel -r  用户名</p><p>注意：在实际开发中如果出现开发人员离职的情况，需要删除用户，但是不会删除家目录因为在家目录中还有很多的工程源码。</p><p><strong>查询用户信息</strong></p><p>基本语法： id   用户名</p><p><img src="https://img-blog.csdnimg.cn/20190524201801183.png" alt="在这里插入图片描述"></p><p><strong>切换用户</strong></p><p>在操作Linux中，如果当前用户的权限不够，可以通过 su - 指令，切换到高权限用户，比如root 基本语法 su   切换用户名 </p><p> 细节说明</p><p> 1) 从权限高的用户切换到权限低的用户，不需要输入密码，反之需要。</p><p> 2) 当需要返回到原来用户时，使用exit指令</p><p>实例：创建一个用户zwj，然后切换到zwj</p><p><img src="https://img-blog.csdnimg.cn/20190524201815392.png" alt="在这里插入图片描述"></p><p><strong>查看当前登录用户</strong></p><p>基本语法：whoami/who am i</p><p>两种命令执行效果如下图所示</p><p><img src="https://img-blog.csdnimg.cn/20190524201829766.png" alt="在这里插入图片描述"></p><h2 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h2><p><strong>介绍</strong></p><p>类似于角色，系统可以对有共性的多个用户进行统一的管理，比如武侠小说中的门派，每一个用户都有一个属于自己的门派有自己独特的武功</p><p><strong>增加用户组</strong></p><p>基本语法：groupadd 组名</p><p>操作示意图</p><p><img src="https://img-blog.csdnimg.cn/20190524201839402.png" alt="在这里插入图片描述"></p><p><strong>删除用户组</strong></p><p>基本语法： groupdel 组名</p><p>操作示意图</p><p><img src="https://img-blog.csdnimg.cn/20190524201850716.png" alt="在这里插入图片描述"></p><p><strong>添加用户时候为用户指定对应的组</strong></p><p><img src="https://img-blog.csdnimg.cn/20190524201903669.png" alt="在这里插入图片描述"></p><p>细节说明：</p><p>1）前面的zwj账号已经被删除的基础上新建的zwj账号</p><p><strong>修改用户的组</strong></p><p>基本语法：user -g 用户组  用户名</p><p>细节说明：</p><p>1)用户组为用户修改到的新的用户组</p><h2 id="用户和组的相关文件"><a href="#用户和组的相关文件" class="headerlink" title="用户和组的相关文件"></a>用户和组的相关文件</h2><p><strong>/etc/passwd 文件</strong> </p><p>用户（user）的配置文件，记录用户的各种信息 </p><p>每行的含义：用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录</p><p><img src="https://img-blog.csdnimg.cn/20190524201913110.png" alt="在这里插入图片描述"></p><p><strong>Shell /etc/shadow 文件 </strong></p><p>口令的配置文件<br>每行的含义：登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警 告时间:不活动时间:失效时间:标志</p><p> <strong>/etc/group 文件</strong></p><p> 组(group)的配置文件，记录Linux包含的组的信息 </p><p>每行含义：组名:口令:组标识号:组内用户列表</p><p><img src="https://img-blog.csdnimg.cn/20190524201919499.png" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常见命令&quot;&gt;&lt;a href=&quot;#常见命令&quot; class=&quot;headerlink&quot; title=&quot;常见命令&quot;&gt;&lt;/a&gt;常见命令&lt;/h1&gt;&lt;h2 id=&quot;关机-amp-重启相关命令&quot;&gt;&lt;a href=&quot;#关机-amp-重启相关命令&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux实操" scheme="http://yoursite.com/tags/Linux%E5%AE%9E%E6%93%8D/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础篇-vi和vim编辑器</title>
    <link href="http://yoursite.com/2019/05/24/Linux%E5%9F%BA%E7%A1%80%E7%AF%87-vi%E5%92%8Cvim%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>http://yoursite.com/2019/05/24/Linux基础篇-vi和vim编辑器/</id>
    <published>2019-05-24T08:39:22.229Z</published>
    <updated>2019-05-24T09:21:07.926Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>1）所有的Linux系统都会内建有vi文本编辑器</p><p>2）vim 具有程序编辑的能力，可以看做是Vi的增强版本，可以主动的以字体颜色辨别 语法的正确性，方便程序设计。代码补完、编译及错误跳转等方便编程的功能特别 丰富，在程序员中被广泛使用。</p><h1 id="vi和vim的常用三种模式"><a href="#vi和vim的常用三种模式" class="headerlink" title="vi和vim的常用三种模式"></a>vi和vim的常用三种模式</h1><p><strong>正常模式</strong>: </p><p>以 vim 打开一个档案就直接进入一般模式了(这是默认的模式)。在这个模式中， 你可以使用 『上下左右』按键来移动光标，你可以使用『删除字符』或『删除整行』来处理档案内容， 也可以使用『复制、贴上』来处理你的文件数据。 </p><p><strong>插入模式</strong>: </p><p>按下i, I, o, O, a, A, r, R等任何一个字母之后才会进入编辑模式, 一般来说按i即可.</p><p><strong>命令行模式</strong> ：</p><p>在这个模式当中， 可以提供你相关指令，完成读取、存盘、替换、离开 vim 、显示行号等的 动作则是在此模式中达成的！</p><h1 id="vi和vim的三种模式转换"><a href="#vi和vim的三种模式转换" class="headerlink" title="vi和vim的三种模式转换"></a>vi和vim的三种模式转换</h1><p><img src="https://img-blog.csdnimg.cn/20190524171350488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h1><p>需求：使用vim编辑器，开发一个Hello.java程序，并保存</p><p>步骤：</p><p>1）使用远程登录工具，登录服务器，这里使用Xshell进行连接</p><p>2）命令行键入vim Hello.java 新建Hello.java文件</p><p><img src="https://img-blog.csdnimg.cn/2019052417141042.png" alt="在这里插入图片描述"></p><p>3）当前属于正常模式，键盘输入i进入插入模式（命令行窗口底部提示进入插入模式）</p><p><img src="https://img-blog.csdnimg.cn/20190524171418602.png" alt="在这里插入图片描述"></p><p>4）直接使用键盘进行输入编辑文件内容，如图所示</p><p><img src="https://img-blog.csdnimg.cn/20190524171425487.png" alt="在这里插入图片描述"></p><p>5）保存并退出。首先由插入模式转换为正常模式，转换方式为按下键盘Esc键，转换到正常模式，正常模式输入：wq 保存并退出，这时候输入ll指令，就可以看到在目录里面已经存在Hello.java这个文件了</p><p><img src="https://img-blog.csdnimg.cn/20190524171439380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="常用vi和vim编辑器快捷键"><a href="#常用vi和vim编辑器快捷键" class="headerlink" title="常用vi和vim编辑器快捷键"></a>常用vi和vim编辑器快捷键</h1><p>1）删除当前行： dd,删除当前行向下的n行：ndd(n是删除行数)；模式：     正常模式</p><p>2）拷贝当前行：yy,拷贝当前行向下的n行：nyy(n是拷贝的行数)；粘贴指令：p;模式：正常模式</p><p>3) 在文件中查找某个单词 [命令行模式下 /关键字 ， 回车查找 ,  输入 n 就是查找下一个 ]<br>4) 设置文件的行号，取消文件的行号.[命令行下 : set nu 和 :set nonu] </p><p>5) 编辑 /etc/profile 文件，使用快捷键到底文档的最末行[G]和最首行[gg] </p><p>6) 在一个文件中输入 “hello” ,然后又撤销这个动作 u；模式：正常模式 </p><p>7) 将光标移动到 指定行，使用方式：行号+shift+g，模式：正常模式</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;1）所有的Linux系统都会内建有vi文本编辑器&lt;/p&gt;
&lt;p&gt;2）vim 具有程序编辑的能力，可以看做是Vi的增强版本，可以主动的以字体颜
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux基础" scheme="http://yoursite.com/tags/Linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础篇-Linux的远程登录与上传下载文件</title>
    <link href="http://yoursite.com/2019/05/23/Linux%E5%9F%BA%E7%A1%80%E7%AF%87-Linux%E7%9A%84%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E4%B8%8E%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/05/23/Linux基础篇-Linux的远程登录与上传下载文件/</id>
    <published>2019-05-23T14:30:07.769Z</published>
    <updated>2019-05-24T07:44:12.305Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux的远程登录"><a href="#Linux的远程登录" class="headerlink" title="Linux的远程登录"></a>Linux的远程登录</h1><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在实际的使用的情况中，Linux的应用领域在服务器方面的运用比较多。由于服务器都是在远端的机房中，所以开发和维护人员无法通过直接操作服务器的方式展开工作。所以在实际的开发和维护中，开发和维护人员都通过使用远程登录的方式进行对服务器的操作。</p><h2 id="远程登录工具"><a href="#远程登录工具" class="headerlink" title="远程登录工具"></a>远程登录工具</h2><p>目前市面上的远程工具较多，本文介绍Xshell软件进行远程登录，理由如下：</p><p>1）相比SecureCRT，它是一款对个人是免费的软件，如果使用SecureCRT需要付费或者使用破解版；</p><p>2）配色与Linux一致，并且还改进了深蓝色字体不容易看见的问题</p><p>免费和界面的理由让我选择了它</p><p>注意：使用远程登录工具登录到服务器后是以命令行的方式显示显示在工具窗口中，程序员的工作环境也一般是命令行窗口</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>软件的安装过程较为简单，安装过程中选择家庭免费版进行安装即可。</p><p>1）第一步点击新建连接</p><p><img src="https://img-blog.csdnimg.cn/20190524152402295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2）设置连接信息，名称自定义即可，填写需要进行连接的服务器IP地址。最后点击确认按钮，新建连接成功。<br><img src="https://img-blog.csdnimg.cn/20190524152419611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>4）点击查看连接会话，查看新建的连接，点击连接服务器。若是第一次连接会提示输入登录账号密码，按要求输入即可</p><p><img src="https://img-blog.csdnimg.cn/20190524152434513.png" alt="在这里插入图片描述"></p><h1 id="Linux的远程上传下载文件"><a href="#Linux的远程上传下载文件" class="headerlink" title="Linux的远程上传下载文件"></a>Linux的远程上传下载文件</h1><p>1）Xshell的同系列软件还有Xftp它是远程上传下载文件的工具，同样的它也是免费的，它的创建和连接服务器的操作步骤与Xshell类似。需要注意的是在创建连接会话的时候应该将协议改为SFTP,端口切换为22号端口后连接。</p><p><img src="https://img-blog.csdnimg.cn/20190524152449488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2）在连接成功后就会出现如下图所示的窗口，通过拖拽或者右键点击相应的文件再点击传输按钮即可实现文件的上传和下载功能。如下图所示</p><p><img src="https://img-blog.csdnimg.cn/20190524152505341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3）<strong>注意：如果出现中文乱码的问题，将编码方式设置成UTF-8即可，操作步骤如下：</strong></p><p><img src="https://img-blog.csdnimg.cn/20190524152517876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux的远程登录&quot;&gt;&lt;a href=&quot;#Linux的远程登录&quot; class=&quot;headerlink&quot; title=&quot;Linux的远程登录&quot;&gt;&lt;/a&gt;Linux的远程登录&lt;/h1&gt;&lt;h2 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux基础" scheme="http://yoursite.com/tags/Linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础篇-Linux的目录结构</title>
    <link href="http://yoursite.com/2019/05/22/Linux%E5%9F%BA%E7%A1%80%E7%AF%87-Linux%E7%9A%84%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2019/05/22/Linux基础篇-Linux的目录结构/</id>
    <published>2019-05-22T15:42:52.517Z</published>
    <updated>2019-05-23T14:31:18.877Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h1><p>Linux的文件系统中采用的是级层式的树状目录结构，在目录的最上层是文件系统的根目录“/”，然后在此根目录下创建其他的目录。</p><p>一句经典的话：<strong>在Linux的世界里，一切皆文件</strong>（不管是软件还是硬件，都可以以文件的方式进行操作）</p><p>以下是文件系统树状图：</p><p><img src="https://img-blog.csdnimg.cn/20190523213856640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="img"></p><p>在CentOSE中的文件系统图像化目录如下图所示：</p><p><img src="https://img-blog.csdnimg.cn/20190523213910339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="目录结构具体介绍"><a href="#目录结构具体介绍" class="headerlink" title="目录结构具体介绍"></a>目录结构具体介绍</h1><h2 id="文件系统的根目录"><a href="#文件系统的根目录" class="headerlink" title="文件系统的根目录"></a>文件系统的根目录</h2><p>在Linux中我们见到的都是树状结构，比如操作系统安装在了文件系统中，它是由”/“起始的树状结构，它就是Linux的最顶端，我们将其称之为Linux的root。Linux的文件系统入口就是“/”，所有的目录、文件、设备都在/之下，/就是Linux文件系统的组织者，也是最上级的领导者。</p><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><p>概念：挂载的意思是将设备与系统的目录关联，实现对设备进行操作；</p><p>没有挂载的设备相当于一个封闭的盒子，里面的数据出不来外面的数据进不去，设备挂载之后，相当于给盒子开了一个窗户或者门，实现数据的交流。</p><h2 id="FHS规范"><a href="#FHS规范" class="headerlink" title="FHS规范"></a>FHS规范</h2><p>因为Linux属于开源的操作系统，所以在很多公司或者技术团队在使用过程中会对Linux的核心代码进行开发、编程等操作。这样的个性化开发将会目录存放数据混乱的问题。这个问题使Linux的开发人员无法对他人发的电脑进行开发和使用。于是FHS（Filesystem Hierarchy Standard ）标准诞生，解决了这个问题。规范目录下存放的数据内容，规范每一个特定目录下存放的数据。FHS依据文件系统使用的频繁与否与是否允许使用者进行随意改动，而将目录定义成为四种交互作用的形态，如下表所示：</p><table><thead><tr><th></th><th>可分享的(shareable)</th><th>不可分享的(unshareable)</th></tr></thead><tbody><tr><td>不变的(static)</td><td>/usr (软件放置处)</td><td>/etc (配置文件)</td></tr><tr><td></td><td>/opt (第三方协力软件)</td><td>/boot (开机与核心档)</td></tr><tr><td>可变动的(variable)</td><td>/var/mail (使用者邮件信箱)</td><td>/var/run (程序相关)</td></tr><tr><td></td><td>/var/spool/news (新闻组)</td><td>/var/lock (程序相关)</td></tr></tbody></table><p><strong>四种类型:</strong></p><p><strong>1.可分享的：</strong></p><p>可以分享给其他系统挂载使用的目录，所以包括执行文件与用户的邮件等数据， 是能够分享给网络上其他主机挂载用的目录；</p><p><strong>2.不可分享的：</strong></p><p>自己机器上面运作的装置文件或者是与程序有关的socket文件等， 仅与自身机器有关，不可以分享给其他主机。</p><p><strong>3.不变的：</strong></p><p>有些数据是不会经常变动的，跟随着distribution而不变动。 例如函式库、文件说明文件、系统管理员所管理的主机服务配置文件等等；</p><p><strong>4.可变动的：</strong></p><p>经常改变的数据，例如登录文件、一般用户可自行收受的新闻组等。</p><p>事实上，FHS针对目录树架构仅定义出三层目录底下应该放置什么数据而已，分别是底下这三个目录的定义：</p><p>/ (root, 根目录)：与开机系统有关；</p><p>/usr (unix software resource)：与软件安装/执行有关；</p><p>/var (variable)：与系统运作过程有关。</p><h2 id="根目录的意义"><a href="#根目录的意义" class="headerlink" title="根目录的意义"></a>根目录的意义</h2><p>根目录是操作系统的最重要的目录，其重要性等同于Windows系统中的c盘目录，它包含了各类的系统重要文件，由于根目录的重要性所以在FHS的标准中建议根目录所在分区越小越好，而且程序安装最好不要和根目录放在同一分区内，保持根分区越小越好，这样保证了文件系统出现问题的几率变小，同时使得文件系统的性能更佳。</p><p>基于以上的原因，FHS认为根目录下面应该包含以下的子目录：</p><table><thead><tr><th style="text-align:right">目录</th><th style="text-align:left">应放置文件内容</th></tr></thead><tbody><tr><td style="text-align:right">/bin</td><td style="text-align:left">是Binary的缩写，这个目录存放着最经常使用的命令。在/bin底下的指令可以被root与一般帐号所使用，主要有：cat,chmod(修改权限), chown, date, mv, mkdir, cp, bash等等常用的指令。</td></tr><tr><td style="text-align:right">/boot</td><td style="text-align:left">主要放置开机会使用到的核心文件，包括Linux连接文件、镜像文件</td></tr><tr><td style="text-align:right">/dev</td><td style="text-align:left">在Linux系统上，任何装置与周边设备都是以文件的型态存在于这个目录当中。 （相当于Windows的设备管理器，把所有的硬件用文件的形式存储）</td></tr><tr><td style="text-align:right">/etc</td><td style="text-align:left">所有的系统管理所需要的配置文件和子目录 my.conf。例如人员的帐号密码文件、各种服务的启始文件等等。 这个目录下的各文件属性是可以让一般使用者查阅的，但是只有root有权力修改。</td></tr><tr><td style="text-align:right">/home</td><td style="text-align:left">这是系统预设的使用者家目录(home directory)。 在你新增一个一般使用者帐号时，就会有一个与与户名相同的目录出现。比较重要的是，家目录有两种代号：~ ：代表当前使用者的家目录，而 ~guest：则代表用户名为guest的家目录。</td></tr><tr><td style="text-align:right">/lib</td><td style="text-align:left">系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几 乎所有的应用程序都需要用到这些共享库。</td></tr><tr><td style="text-align:right">/media</td><td style="text-align:left">media是媒体的英文，顾名思义，这个/media底下放置的就是可移除的装置。 如：光碟、DVD、U盘等装置都暂时挂载于此。 常见的有：/media/floppy, /media/cdrom等等。</td></tr><tr><td style="text-align:right">/mnt</td><td style="text-align:left">系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂 载在/mnt/上，然后进入该目录就可以查看里的内容。 d:/myshare</td></tr><tr><td style="text-align:right">/opt</td><td style="text-align:left">这是给主机额外安装软件所摆放的目录。如安装ORACLE数据库就可放到该目录下。 默认为空。</td></tr></tbody></table><p><strong>事实上FHS针对根目录所定义的标准就仅限于上表，不过仍旧有些目录也需要我们了解一下，具体如下：</strong></p><table><thead><tr><th>目录</th><th style="text-align:left">应放置文件内容</th></tr></thead><tbody><tr><td>/proc</td><td style="text-align:left">这个目录本身是一个虚拟文件系统(virtual filesystem)。 它是系统内存的映射，访问这个目录来获取系统信息。</td></tr><tr><td>/lost+found</td><td style="text-align:left">这个目录是使用标准的ext2/ext3文件系统格式才会产生的一个目录，目的在于当档案系统发生错误时，将一些遗失的片段放置到这个目录下。（这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。）</td></tr><tr><td>/sys</td><td style="text-align:left">这是Linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统。</td></tr></tbody></table><p>除了这些目录的内容之外，另外要注意的是，因为根目录与开机有关，开机过程中仅有根目录会被挂载， 其他分区则是在开机完成之后才会持续的进行挂载的行为。就是因为如此，因此根目录下与开机过程有关的目录， 就不能够与根目录放到不同的分区去。</p><p>那哪些目录不可与根目录分开呢？有底下这些：</p><p><strong>/etc：</strong>各种软件与系统的设置文件，及软件的启动停止脚本 </p><p><strong>/bin：</strong>重要执行文件</p><p><strong>/dev：</strong>所需要的设置文件</p><p><strong>/lib：</strong>各种目标文件与函数库和各种不同版本内核的模块 </p><p><strong>/sbin：</strong>重要的系统执行文件</p><p>这五个目录千万不可与根目录分开在不同的分区。请背下来啊。</p><h2 id="usr-的意义与内容："><a href="#usr-的意义与内容：" class="headerlink" title="/usr 的意义与内容："></a>/usr 的意义与内容：</h2><p>　　/usr不是user的缩写，其实usr是Unix Software Resource的缩写， 也就是Unix操作系统软件资源所放置的目录。 FHS建议所有软件开发者，将他们的数据合理的放置到这个目录下的次目录，而不要自行建立该软件自己独立的目录。</p><p>　　因为是所有系统默认的软件(distribution发布者提供的软件)都会放置到/usr底下，因此这个目录有点类似Windows 系统的C:\Windows\ + C:\Program files\这两个目录的综合体，系统刚安装完毕时，这个目录会占用最多的硬盘容量。 一般来说，/usr的次目录建议有底下这些：</p><table><thead><tr><th>目录</th><th style="text-align:left">应放置的文件内容</th></tr></thead><tbody><tr><td>/usr/X11R6/</td><td style="text-align:left">为X Window System重要数据所放置的目录，之所以取名为X11R6是因为最后的X版本为第11版，且该版的第6次释出之意</td></tr><tr><td>/usr/bin/</td><td style="text-align:left">绝大部分的用户可使用指令都放在这里。所有可执行文件，如 gcc，firefox 等。请注意到他与/bin的不同之处。(是否与开机过程有关)</td></tr><tr><td>/usr/include/</td><td style="text-align:left">c/c++等程序语言的头文件(header)与包含文件(include)放置处，当我们以tarball方式 (*.tar.gz 的方式安装软件)安装某些数据时，会使用到里头的许多包含档。</td></tr><tr><td>/usr/lib/</td><td style="text-align:left">包含各应用软件的函式库、目标文件(object file)，以及不被一般使用者惯用的执行档或脚本(script)。 某些软件会提供一些特殊的指令来进行服务器的设定，这些指令也不会经常被系统管理员操作， 那就会被摆放到这个目录下啦。要注意的是，如果你使用的是X86_64的Linux系统， 那可能会有/usr/lib64/目录产生</td></tr><tr><td>/usr/local/</td><td style="text-align:left">这是另一个给主机额外安装软件所安装的目录。一般是通过编译源码方式安装的程序。举例：你的distribution提供的软件较旧，你想安装较新的软件但又不想移除旧版， 此时你可以将新版软件安装于/usr/local/目录下，可与原先的旧版软件有分别啦。 你可以自行到/usr/local去看看，该目录下也是具有bin, etc, include, lib…的次目录</td></tr><tr><td>/usr/sbin/</td><td style="text-align:left">非系统正常运作所需要的系统指令。最常见的就是某些网络服务器软件的服务指令(daemon)</td></tr><tr><td>/usr/share/</td><td style="text-align:left">放置共享文件的地方，在这个目录下放置的数据几乎是不分硬件架构均可读取的数据， 因为几乎都是文本文件嘛。在此目录下常见的还有这些次目录：/usr/share/man：联机帮助文件</td></tr><tr><td>/usr/src/</td><td style="text-align:left">一般原始码建议放置到这里，src有source的意思。至于核心原始码则建议放置到/usr/src/linux/目录下。</td></tr></tbody></table><h2 id="var-的意义与内容："><a href="#var-的意义与内容：" class="headerlink" title="/var 的意义与内容："></a>/var 的意义与内容：</h2><p>　　如果/usr是安装时会占用较大硬盘容量的目录，那么/var就是在系统运作后才会渐渐占用硬盘容量的目录。 因为/var目录主要针对常态性变动的文件，包括缓存(cache)、登录文件(log file)以及某些软件运作所产生的文件， 包括程序文件(lock file, run file)，或者例如MySQL数据库的文件等等。常见的次目录有：</p><table><thead><tr><th>目录</th><th style="text-align:left">应放置文件内容</th></tr></thead><tbody><tr><td>/var/cache/</td><td style="text-align:left">应用程序本身运作过程中会产生的一些暂存档</td></tr><tr><td>/var/lib/</td><td style="text-align:left">程序本身执行的过程中，需要使用到的数据文件放置的目录。在此目录下各自的软件应该要有各自的目录。 举例来说，MySQL的数据库放置到/var/lib/mysql/而rpm的数据库则放到/var/lib/rpm去</td></tr><tr><td>/var/lock/</td><td style="text-align:left">某些装置或者是文件资源一次只能被一个应用程序所使用，如果同时有两个程序使用该设备时， 就可能产生一些错误的状况，因此就得要将该装置上锁(lock)，以确保该设备只会给单一软件所使用。 举例来说，刻录机正在刻录一块光盘，如果两个人同时刻录，那片子写入的是谁的数据？所以当第一个人在刻录时该刻录机就会被上锁， 第二个人就得要该装置被解除锁定(就是前一个人用完了)才能够继续使用</td></tr><tr><td>/var/log/</td><td style="text-align:left">非常重要。这是登录文件放置的目录。里面比较重要的文件如/var/log/messages, /var/log/wtmp(记录登入者的信息)等。</td></tr><tr><td>/var/mail/</td><td style="text-align:left">放置个人电子邮件信箱的目录，不过这个目录也被放置到/var/spool/mail/目录中，通常这两个目录是互为链接文件。</td></tr><tr><td>/var/run/</td><td style="text-align:left">某些程序或者是服务启动后，会将他们的PID放置在这个目录下</td></tr><tr><td>/var/spool/</td><td style="text-align:left">这个目录通常放置一些队列数据，所谓的“队列”就是排队等待其他程序使用的数据。 这些数据被使用后通常都会被删除。举例来说，系统收到新信会放置到/var/spool/mail/中， 但使用者收下该信件后该封信原则上就会被删除。信件如果暂时寄不出去会被放到/var/spool/mqueue/中， 等到被送出后就被删除。如果是工作排程数据(crontab)，就会被放置到/var/spool/cron/目录中。</td></tr></tbody></table><p>由于FHS仅是定义出最上层(/)及次层(/usr, /var)的目录内容应该要放置的文件或目录数据， 因此，在其他次目录层级内，就可以随开发者自行来配置了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1)Linux的目录中有且只有一个根目录/</p><p>2）Linux的各个目录存放的内容是规划好的，不可以乱放文件</p><p>3）Linux是以文件的方式进行管理设备，因此在Linux系统中，一切皆文件</p><p>4）学习要求：掌握目录存放内容、脑海中形成目录树</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本介绍&quot;&gt;&lt;a href=&quot;#基本介绍&quot; class=&quot;headerlink&quot; title=&quot;基本介绍&quot;&gt;&lt;/a&gt;基本介绍&lt;/h1&gt;&lt;p&gt;Linux的文件系统中采用的是级层式的树状目录结构，在目录的最上层是文件系统的根目录“/”，然后在此根目录下创建其他的目录。
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux基础" scheme="http://yoursite.com/tags/Linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础篇-Linux的介绍</title>
    <link href="http://yoursite.com/2019/05/22/Linux%E5%9F%BA%E7%A1%80%E7%AF%87-Linux%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2019/05/22/Linux基础篇-Linux的介绍/</id>
    <published>2019-05-22T12:40:10.268Z</published>
    <updated>2019-05-23T14:31:31.043Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux介绍"><a href="#Linux介绍" class="headerlink" title="Linux介绍"></a>Linux介绍</h1><p>   1）Linux的读法，常见有三种【里纽克斯、利尼克斯、里纳克斯】<br>   2）Linux特点：免费、开源、安全（由于系统是开源的所以现在基本全世界的程序员都在维护Linux,保证了Linux系统的安全性）、高效、稳定、对<strong>高并发的处理</strong>非常的强悍。<br>   3）Linux的创始人是来自芬兰的林纳斯，吉祥物是一只企鹅，据说林纳斯因为再一次逛动物园的时候被一只企鹅咬了，所以就以企鹅作为Linux的吉祥物。吉祥物的名字叫tux  </p><p><img src="https://img-blog.csdnimg.cn/20190522204613982.jpg" alt="林纳斯"></p><p>4）Linux的主要发行版有：Redhat、CentOSE、Ubuntu、Suse、红旗Linux。如下所示，其中Redhat和CentOSE都是来自于Redhat公司旗下的发行版<br><img src="https://img-blog.csdnimg.cn/20190522204655661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="Linux和UNIX"><a href="#Linux和UNIX" class="headerlink" title="Linux和UNIX"></a>Linux和UNIX</h1><p>Linux和UNIX的最大的区别是，前者是开发源代码的自由软件，而后者是对源代码实行知识产权保护的传统商业软件。这应该是他们最大的不同，这种不同体现在用户对前者有很高的自主权，而对后者却只能去被动的适应；这种不同还表现在前者的开发是处在一个完全开放的环境之中,而后者的开发完全是处在一个黑箱之中,只有相关的开发人员才能够接触的产品的原型。</p><p>　　Linux 的源头要追溯到最古老的UNIX。1969年，Bell实验室的Ken Thompson开始利用一台闲置的 PDP-7计算机开发了一种多用户，多任务操作系统。很快，Dennis Richie加入了这个项目，在他们共同努力下诞生了最早的UNIX。Richie受一个更早的项目——MULTICS的启发，将此操作系统命名为 Unix。早期UNIX是用汇编语言编写的，但其第三个版本用一种崭新的编程语言C重新设计了。C是Richie设计出来并用于编写操作系统的程序语言。通过这次重新编写，Unix得以移植到更为强大的 DEC PDP-11/45与11/70计算机上运行。后来发生的一切，正如他们所说，已经成为历史。Unix从实验室走出来并成为了操作系统的主流，现在几乎每个主要的计算机厂商都有其自有版本的Unix.</p><p>　　Linux起源于一个学生的简单需求。Linus Torvalds,Linux的作者与主要维护者，在其上大学时所买得起的唯一软件是Minix. Minix是一个类似Unix，被广泛用来辅助教学的简单操作系统。Linus 对Minix不是很满意，于是决定自己编写软件。他以学生时代熟悉的Unix作为原型， 在一台Intel 386 PC上开始了他的工作。他的进展很快，受工作成绩的鼓舞，他将这项成果通过互连网与其他同学共享，主要用于学术领域。有人看到了这个软件并开始分发。每当出现新问题时，有人会立刻找到解决办法并加入其中，很快的， Linux成为了一个操作系统。值得注意的是Linux并没有包括Unix源码。它是按照公开的POSIX标准重新编写的。Linux大量使用了由麻省剑桥免费软件基金的GNU软件，同时Linux自身也是用它们构造而成。</p><p><strong>二者也有两个大的区别：</strong><br>UNIX 系统大多是与硬件配套的，也就是说，大多数 UNIX 系统如 AIX、HP-UX 等是无法安装在 x86 服务器和个人计算机上的，而 Linux 则可以运行在多种硬件平台上；<br>UNIX 是商业软件所以是收费的，而 Linux 是开源软件，是免费、公开源代码的。</p><p>Linux 受至旷大计算机爱好者的喜爱，主要原因也有两个：<br>它属于开源软件，用户不用支付可费用就可以获得它和它的源代码，并且可以根据自己的需要对它进行必要的修改，无偿使用，无约束地继续传播；<br>它具有 UNIX 的全部功能，任何使用 UNIX 操作系统或想要学习 UNIX 操作系统的人都可以从 Linux 中获益。</p><p>开源软件是不同于商业软件的一种模式，从字面上理解，就是开放源代码，大家不用担心里面会搞什么猫腻，这会带来软件的革新和安全。</p><p>另外，开源其实并不等同于免费，而是一种新的软件盈利模式。目前很多软件都是开源软件，对计算机行业与互联网影响深远。<br><img src="https://img-blog.csdnimg.cn/20190522210454761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="Linux与Windows的区别对比"><a href="#Linux与Windows的区别对比" class="headerlink" title="Linux与Windows的区别对比"></a>Linux与Windows的区别对比</h1><p><img src="https://img-blog.csdnimg.cn/20190522204723356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjgzMDQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux介绍&quot;&gt;&lt;a href=&quot;#Linux介绍&quot; class=&quot;headerlink&quot; title=&quot;Linux介绍&quot;&gt;&lt;/a&gt;Linux介绍&lt;/h1&gt;&lt;p&gt;   1）Linux的读法，常见有三种【里纽克斯、利尼克斯、里纳克斯】&lt;br&gt;   2）Linux特
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux基础" scheme="http://yoursite.com/tags/Linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客pure主题配置（转载）</title>
    <link href="http://yoursite.com/2019/05/10/hexo%E5%8D%9A%E5%AE%A2pure%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/"/>
    <id>http://yoursite.com/2019/05/10/hexo博客pure主题配置（转载）/</id>
    <published>2019-05-09T18:25:20.617Z</published>
    <updated>2019-05-09T18:28:33.329Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pure"><a href="#pure" class="headerlink" title="pure"></a>pure</h1><p>A brand new default theme for [<a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a>].  <a href="http://cofess.github.io/" target="_blank" rel="noopener">Preview</a> | <a href="README.md">English documentation</a> | <a href="http://blog.cofess.com/hexo-theme-pure/iconfont/demo_fontclass.html" target="_blank" rel="noopener">iconfont</a></p><p><img src="screenshot/pure.png" alt></p><h2 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h2><ul><li>多语言</li><li>第三方评论框（友言、来必力、gitment、gitalk）</li><li>可展示个人豆瓣书单</li><li>可展示个人github托管项目</li><li>可设置支付宝、微信打赏<h2 id="页面展示"><a href="#页面展示" class="headerlink" title="页面展示"></a>页面展示</h2></li></ul><p><a href="http://cofess.github.io/" target="_blank" rel="noopener">首页</a> | <a href="http://cofess.github.io/archives/" target="_blank" rel="noopener">归档</a> | <a href="http://cofess.github.io/categories/" target="_blank" rel="noopener">分类</a> | <a href="http://cofess.github.io/tags/" target="_blank" rel="noopener">标签</a> | <a href="http://cofess.github.io/repository/" target="_blank" rel="noopener">项目</a> | <a href="http://cofess.github.io/books/" target="_blank" rel="noopener">书单</a> | <a href="http://cofess.github.io/links/" target="_blank" rel="noopener">友链</a> | <a href="http://cofess.github.io/about/" target="_blank" rel="noopener">关于</a></p><h2 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/pure</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="启用pure主题"><a href="#启用pure主题" class="headerlink" title="启用pure主题"></a>启用pure主题</h2><p>打开站点配置文件，找到theme字段，将其值更改为 pure</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: pure</span><br></pre></td></tr></table></figure><p>到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><h3 id="hexo-wordcount"><a href="#hexo-wordcount" class="headerlink" title="hexo-wordcount"></a><a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-json-content"><a href="#hexo-generator-json-content" class="headerlink" title="hexo-generator-json-content"></a><a href="https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-json-content</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-sitemap"><a href="#hexo-generator-sitemap" class="headerlink" title="hexo-generator-sitemap"></a><a href="https://github.com/hexojs/hexo-generator-sitemap" target="_blank" rel="noopener">hexo-generator-sitemap</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-baidu-sitemap"><a href="#hexo-generator-baidu-sitemap" class="headerlink" title="hexo-generator-baidu-sitemap"></a><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" rel="noopener">hexo-generator-baidu-sitemap</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\pure\languages目录下语言文件，简体中文配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><h3 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h3><p>定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># config</span><br><span class="line">config:</span><br><span class="line">  skin: # 主题颜色 theme-black theme-blue theme-green theme-purple</span><br></pre></td></tr></table></figure><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 导航菜单</span><br><span class="line">menu:</span><br><span class="line">  Home: . </span><br><span class="line">  Archives: archives # 归档</span><br><span class="line">  Categories: categories # 分类</span><br><span class="line">  Tags: tags # 标签</span><br><span class="line">  Repository: repository # github repositories</span><br><span class="line">  Books: books     # 书单</span><br><span class="line">  Links: links # 友链</span><br><span class="line">  About: about # 关于</span><br><span class="line"></span><br><span class="line"># 导航菜单图标（font awesome）</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true # 是否启用菜单图标</span><br><span class="line">  home: icon-home-fill</span><br><span class="line">  archives: icon-archives-fill</span><br><span class="line">  categories: icon-folder</span><br><span class="line">  tags: icon-tags</span><br><span class="line">  repository: icon-project</span><br><span class="line">  books: icon-book-fill</span><br><span class="line">  links: icon-friendship</span><br><span class="line">  about: icon-cup-fill</span><br></pre></td></tr></table></figure><h3 id="设置个人信息"><a href="#设置个人信息" class="headerlink" title="设置个人信息"></a>设置个人信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">头像在themes\pure\source\images 目录下替换图片即可，捐献的二维码同理。</span><br><span class="line"></span><br><span class="line">个人信息大部分都在 主题配置文件 中设置</span><br></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>主题内置三种站内搜索方式：insight、swiftype、baidu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Search</span><br><span class="line">search:</span><br><span class="line">  insight: true # you need to install `hexo-generator-json-content` before using Insight Search</span><br><span class="line">  swiftype: # enter swiftype install key here</span><br><span class="line">  baidu: false # you need to disable other search engines to use Baidu search</span><br></pre></td></tr></table></figure><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p>支持<code>weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Share</span><br><span class="line"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span><br><span class="line">share:</span><br><span class="line">  enable: true  # 是否启用分享</span><br><span class="line">  sites: weibo,qq,wechat,facebook,twitter  # PC端显示的分享图标</span><br><span class="line">  mobile_sites: weibo,qq,qzone  # 移动端显示的分享图标</span><br></pre></td></tr></table></figure><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>主题集成了<a href="https://disqus.com/" target="_blank" rel="noopener">disqus</a>、<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言</a>、<a href="https://livere.com/" target="_blank" rel="noopener">来必力</a>、<a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">gitment</a>、<a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">gitalk</a>评论系统，选择其中一种即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># Comment</span><br><span class="line"># Gitment</span><br><span class="line"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class="line">comment:</span><br><span class="line">  type: livere # 启用哪种评论系统</span><br><span class="line">  disqus:  # enter disqus shortname here</span><br><span class="line">  youyan: </span><br><span class="line">    uid: *** # enter youyan uid </span><br><span class="line">  livere:</span><br><span class="line">    uid: *** # enter livere uid</span><br><span class="line">  gitment:</span><br><span class="line">    githubID: username</span><br><span class="line">    repo: username.github.io</span><br><span class="line">    ClientID: ***</span><br><span class="line">    ClientSecret: ***</span><br><span class="line">    lazy: false</span><br></pre></td></tr></table></figure><h3 id="文章浏览量统计"><a href="#文章浏览量统计" class="headerlink" title="文章浏览量统计"></a>文章浏览量统计</h3><p>主题内置了不蒜子和leancloud来统计文章浏览量，启用其中之一即可，注意leancloud需要到其官网申请APP ID 和APP Key。</p><p>比如，启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pv:</span><br><span class="line">  busuanzi:</span><br><span class="line">    enable: true  # 不蒜子统计</span><br></pre></td></tr></table></figure><p>如果不需要第三方来统计浏览量，只需将相应设置改为false即可（设置为false后不会加载第三方JS脚本）</p><h3 id="Github-respostory"><a href="#Github-respostory" class="headerlink" title="Github respostory"></a>Github respostory</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>repository</code>文件夹到<code>blog path/source/</code> 目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Github</span><br><span class="line">github: </span><br><span class="line">  username: ***  # github username</span><br></pre></td></tr></table></figure><h3 id="豆瓣书单"><a href="#豆瓣书单" class="headerlink" title="豆瓣书单"></a>豆瓣书单</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>books</code>文件夹到<code>blog path/source/</code> 目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># douban 豆瓣书单</span><br><span class="line">douban:</span><br><span class="line">  user: *** # 豆瓣用户名</span><br><span class="line">  start: 0 # 从哪一条记录开始</span><br><span class="line">  count: 100 # 获取豆瓣书单数据条数</span><br></pre></td></tr></table></figure><h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>links</code>文件夹到<code>blog path/source/</code> 目录下</p><p>在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。</p><p>然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。</p><p>单个友情链接的格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name:</span><br><span class="line">    link: http://example.com</span><br><span class="line">    avatar: http://example.com/avatar.png</span><br><span class="line">    desc: &quot;这是一个描述&quot;</span><br></pre></td></tr></table></figure><p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p><p>. 将 Name 改为友情链接的名字，例如 Cofess。</p><p>. <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a> 为友情链接的地址。</p><p>. <a href="http://example.com/avatar.png" target="_blank" rel="noopener">http://example.com/avatar.png</a> 为友情链接的头像。</p><p>. 这是一个描述 为友情链接描述。</p><h3 id="文章索引目录"><a href="#文章索引目录" class="headerlink" title="文章索引目录"></a>文章索引目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">categories:</span><br><span class="line">  - 文章分类</span><br><span class="line">tags:</span><br><span class="line">  - 文章标签</span><br><span class="line">toc: true # 是否启用内容索引</span><br></pre></td></tr></table></figure><h3 id="sidebar侧边栏"><a href="#sidebar侧边栏" class="headerlink" title="sidebar侧边栏"></a>sidebar侧边栏</h3><p>文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">categories:</span><br><span class="line">  - 文章分类</span><br><span class="line">tags:</span><br><span class="line">  - 文章标签</span><br><span class="line">sidebar: none # 是否启用sidebar侧边栏，none：不启用</span><br></pre></td></tr></table></figure><h2 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h2><h3 id="hexo-neat"><a href="#hexo-neat" class="headerlink" title="hexo-neat"></a><a href="https://github.com/rozbo/hexo-neat" target="_blank" rel="noopener">hexo-neat</a></h3><blockquote><p>auto Minify html、js、css and make it neat</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># hexo-neat</span><br><span class="line">neat_enable: true</span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:  </span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;*.min.css&apos;</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;*.min.js&apos;</span><br></pre></td></tr></table></figure><h3 id="hexo-baidu-url-submit"><a href="#hexo-baidu-url-submit" class="headerlink" title="hexo-baidu-url-submit"></a><a href="https://github.com/huiwang/hexo-baidu-url-submit" target="_blank" rel="noopener">hexo-baidu-url-submit</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><h3 id="hexo-translate-title"><a href="#hexo-translate-title" class="headerlink" title="hexo-translate-title"></a><a href="https://github.com/cometlj/hexo-translate-title" target="_blank" rel="noopener">hexo-translate-title</a></h3><blockquote><p>使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题</p></blockquote><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-translate-title --save</span><br></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">translate_title:</span></span><br><span class="line"><span class="attr">  translate_way:</span> <span class="string">google</span>    <span class="comment">#google | baidu | youdao</span></span><br><span class="line"><span class="attr">  youdao_api_key:</span> <span class="string">XXX</span></span><br><span class="line"><span class="attr">  youdao_keyfrom:</span> <span class="string">XXX</span></span><br><span class="line"><span class="attr">  is_need_proxy:</span> <span class="literal">true</span>     <span class="comment">#true | false</span></span><br><span class="line"><span class="attr">  proxy_url:</span> <span class="attr">http://localhost:8123</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为false。如果设置为true,请设置本地代理地址</p><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><blockquote><p>Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签</p></blockquote><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。</p><p>更换Hexo的markdown渲染引擎，<a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus" target="_blank" rel="noopener">hexo-renderer-markdown-it-plus</a>引擎替换默认的渲染引擎<a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a>即可。</p><h3 id="安装hexo-renderer-markdown-it-plus插件"><a href="#安装hexo-renderer-markdown-it-plus插件" class="headerlink" title="安装hexo-renderer-markdown-it-plus插件"></a>安装hexo-renderer-markdown-it-plus插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line">npm i hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">markdown_it_plus:</span><br><span class="line">  highlight: true</span><br><span class="line">  html: true</span><br><span class="line">  xhtmlOut: true</span><br><span class="line">  breaks: true</span><br><span class="line">  langPrefix:</span><br><span class="line">  linkify: true</span><br><span class="line">  typographer:</span><br><span class="line">  quotes: “”‘’</span><br><span class="line">  plugins:</span><br><span class="line">    - plugin:</span><br><span class="line">        name: markdown-it-katex</span><br><span class="line">        enable: true</span><br><span class="line">    - plugin:</span><br><span class="line">        name: markdown-it-mark</span><br><span class="line">        enable: false</span><br></pre></td></tr></table></figure><h3 id="文章启用mathjax"><a href="#文章启用mathjax" class="headerlink" title="文章启用mathjax"></a>文章启用mathjax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">mathjax: true</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;pure&quot;&gt;&lt;a href=&quot;#pure&quot; class=&quot;headerlink&quot; title=&quot;pure&quot;&gt;&lt;/a&gt;pure&lt;/h1&gt;&lt;p&gt;A brand new default theme for [&lt;a href=&quot;https://hexo.io&quot; targe
      
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>在校大学生如何申请软件著作权（超级详细）</title>
    <link href="http://yoursite.com/2019/05/09/%E5%9C%A8%E6%A0%A1%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E8%BD%AF%E4%BB%B6%E8%91%97%E4%BD%9C%E6%9D%83%EF%BC%88%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86%EF%BC%89/"/>
    <id>http://yoursite.com/2019/05/09/在校大学生如何申请软件著作权（超级详细）/</id>
    <published>2019-05-09T12:47:47.406Z</published>
    <updated>2019-05-29T09:54:43.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前段时间，参加比赛负责开发APP，在开发完成后需要以学校为第一作者单位的方式进行申请软件著作权。因为是第一次申请，花了挺多时间去了解这个流程的，其中：</p><p>（1）网上的文章大多是针对个人名义申请的流程方法进行讲解</p><p>（2）网上针对在校大学生的申请方法资料较少，而且不仔细</p><p>导致在申请软件著作权的时候走了挺多弯路的。所以我想写一篇博客给大家介绍作为一名在校大学生如何以学校作为第一作者单位申请软件著作权。避免入坑！！！</p><h1 id="网上申请步骤："><a href="#网上申请步骤：" class="headerlink" title="网上申请步骤："></a>网上申请步骤：</h1><p><strong>注意：本文所涉及的浏览器操作都需要在IE浏览器中打开并设置兼容视图，其他浏览器可能会出现不兼容的情况</strong></p><p>设置兼容视图方法：</p><p>   在IE浏览器的右上角有一个齿轮的图标，点一下弹出菜单，选择兼容性视图设置，点击后 在弹出的窗口里把中国版权保护中心网站首页的地址添加进去，网址：<a href="http://www.ccopyright.com.cn/" target="_blank" rel="noopener">http://www.ccopyright.com.cn/</a></p><h2 id="打开中国版权保护中心网站"><a href="#打开中国版权保护中心网站" class="headerlink" title="打开中国版权保护中心网站"></a>打开中国版权保护中心网站</h2><p><img src="/images/软件著作权/Snipaste_2019-05-04_21-47-08.png" alt="中国版权保护中心首页"></p><h2 id="点击网站右上方注册-登录按钮"><a href="#点击网站右上方注册-登录按钮" class="headerlink" title="点击网站右上方注册/登录按钮"></a>点击网站右上方注册/登录按钮</h2><p>（1）已经有账号的同学直接点击登录按钮进行登录</p><p>（2）没有账号的同学往下看怎么注册</p><p>​          1）点击注册进入如下页面填写个人信息（注意邮箱一定要使用自己的常用邮箱因为版权中心需要联系你的      时候可以是通过发邮件的方式联系你）</p><p><img src="/images/软件著作权/1556978524671.png" alt></p><p>​            2）点击进一步完善资料，继续填写资料信息并点击同意注册按钮注册账户。注册账户之后进行邮箱验证。          激活邮箱后完成注册。</p><p><img src="/images/软件著作权/1556978683834.png" alt></p><p>（3）返回到网站首页点击登录按钮登录（图为登录成功页面）</p><p><img src="/images/软件著作权/1556979247479.png" alt></p><h2 id="进行网上申请登记软件著作权"><a href="#进行网上申请登记软件著作权" class="headerlink" title="进行网上申请登记软件著作权"></a>进行网上申请登记软件著作权</h2><p>(1)点击登录页面上左下角的我要登记按钮，接着再点击右边栏目的“R11.计算机软件著作权登记申请”，如下图所示</p><p><img src="/images/软件著作权/1556979909610.png" alt></p><p>（2）进入到登记申请表页面进行申请填写</p><p> 软件全称：品牌 + 产品用途与功能+“软件（不能加软件版本号）</p><p> 开发方式：合作开发</p><p><strong>软件技术特点栏填写提示</strong>：</p><p>​       1）硬件环境：填写所申请软件的最小运行的硬件环境如CPU、内存等</p><p>​       2）软件环境：申请软件的操作系统运行环境以及在操作系统上还需要什么运行环境</p><p>​       3）程序语言：填写申请软件开发语言</p><p>​       4）程序量：源代码程序没有空行没有注释的情况下代码行数</p><p>​       5）软件功能和技术特点：分别填写软件功能和技术特点不要漏写</p><p>   其中著作权人是本次针对以学校为第一作者单位申请<strong>最需要注意</strong>的地方，以下对它做详细的填写说明</p><p>​         第一栏著作权人信息：</p><p>​            1）姓名/单位名称一栏填写内容：申请人所在学校 </p><p>​            2）类别选择事业单位法人</p><p>​            3）证件类型：事业单位法人证书</p><p>​            4）证件号码：填写学校事业单位法认证书号码，同学需要自己去自己学校官网或向校办咨询</p><p> <strong>注意</strong>：如申请软件著作权用于科研项目，请事先咨询学校或学院的科技处第一栏位置填写学校、学院还是个人</p><p><img src="/images/软件著作权/1556980071902.png" alt></p><p>​            通过点击“添加著作权人”的方式添加著作权人（开始填写软件开发的作者）</p><p>​            1）姓名/单位名称：作者名字</p><p>​            2）类别：自然人</p><p>​            3）证件类别以及证件号码：选择身份证并填写身份证号码即可</p><p><strong>注意：在第二栏的著作权人信息中，如果需要软件著作权证书点击“是“，如下图所示</strong></p><p><img src="/images/软件著作权/1556981080414.png" alt></p><p>完成申请表格的填写后，点击保存按钮进行预览自己的软件著作权申请登记表是否有问题，没有问题即可提交打印下载pdf文件。</p><p>注意：在提交之前一定要看清楚有没有信息填写错误，一旦提交就不能修改了。</p><h1 id="材料准备"><a href="#材料准备" class="headerlink" title="材料准备"></a>材料准备</h1><p>完成第二步的网上申请以后，就可以进行准备材料邮寄或到大厅办理了。以下对准备的材料做详细介绍：</p><h2 id="申请表"><a href="#申请表" class="headerlink" title="申请表"></a>申请表</h2><p> 申请表是在上一步在网上登记申请提交后下载的pdf文件，在下载下来后，将其打印成纸质版。签章处签上申请人名字，如果申请人是学校则在签章位置盖上学校签章。</p><h2 id="完整文档一份"><a href="#完整文档一份" class="headerlink" title="完整文档一份"></a>完整文档一份</h2><p>软件总体设计，软件详细设计，软件使用说明书都是可以的，因为申请时使用说明书的比较多，这里重点介绍一下《用户使用说明书》写作注意事项。</p><p>1）必须包括软件的硬件环境，软件环境，安装及卸载等章节<br>2）文档每页不少于30行，有图除外<br>3）使用A4纸张，纵向、单面打印，文字应当从左向右排列<br>4）文档需黑白打印<br>5）申请文件各部分应当分别用数字顺序在右上角标注页码。所有登记材料中出现的版本号，应与申请表中保持完             全一致。以及出现的软件截图中的软件名字需要和申请书一致<br>6）提交60页的文档，如果不足则全部提交，如果超过60页，则只提交前30页和最后30页</p><p>模板百度搜索就能找到，网上挺多类型的开发文档模板的，同学们按需求查找即可。</p><h2 id="合作开发协议书"><a href="#合作开发协议书" class="headerlink" title="合作开发协议书"></a>合作开发协议书</h2><p>由于学校、软甲开发作者有几个著作权人进行合作开发。所以在申请材料准备的时候需要拟定合作开发协议，什么？拟定？嗨呀，百度一下模板就出来了。注意合作开发协议的甲方需要是学校公章盖章。其他乙方等由自然人作者签字就可以了。</p><h2 id="软件源码"><a href="#软件源码" class="headerlink" title="软件源码"></a>软件源码</h2><p>（1）一般交存：源程序和文档应提交前、后各连续30页，不足60页的，应当全部提交；<br>（2）例外交存：请按照《计算机软件著作权登记办法》第十二条规定的方式之一提交软件的鉴别材料。</p><p><strong>软件源码格式要求如下：</strong></p><p>1）申请人若在源程序和文档页眉上标注了所申请软件的名称和版本号，应当与申请表即《计算机软件著作权申请表》中相应内容完全一致</p><p>2）右上角应标注页码</p><p>3）源程序每页不少于50行</p><p>4）最后一页应是程序的结束页，文档每页不少于30行，有图除外。</p><p>5）不得有注释，不得有空行</p><p>6）有全部的源程序留存、备查、应当和提交的60页文档相同页码部分完全一致</p><p>注：如果嫌麻烦的同学，这里我推荐使用下图这个软件著作权小工具制作源代码文件。但是这个是一个收费的软件，也比较便宜9.99元一个月，1.99元一天。使用的同学需要电脑office2010及以下的版本，太高版本的office可能会出现没办法用的问题。需要的同学自取：<a href="https://www.xasumao.cn/products-SoftwareCopyrightApplication.html" target="_blank" rel="noopener">https://www.xasumao.cn/products-SoftwareCopyrightApplication.html</a></p><p><img src="/images/软件著作权/1556987440077.png" alt></p><h2 id="身份证复印件以及事业单位法人证书"><a href="#身份证复印件以及事业单位法人证书" class="headerlink" title="身份证复印件以及事业单位法人证书"></a>身份证复印件以及事业单位法人证书</h2><p>1）学校事业单位法人证书复印件一份（并在法人证书复印件上注明软件著作权使用、盖上学校公章）</p><p>2）申请自然人作者身份证复印件正反面，复印在一张A4纸上</p><h2 id="学校公章和事业单位法人证书的获取办法"><a href="#学校公章和事业单位法人证书的获取办法" class="headerlink" title="学校公章和事业单位法人证书的获取办法"></a>学校公章和事业单位法人证书的获取办法</h2><p>不同的学校可能会有不同的方法，这里介绍我所在学校的申请学校公章和事业单位法人证书的方式（仅做参考）：</p><p>首先到学校科技处（一般在学校办公大楼，不知道的同学可以事先去学校官网了解）说明你的来意，在老师同意之后，老师会给你学校的事业单位法人证书，并向学校校长办公室申请学校公章（注意这里你要数清楚你要盖多少个公章）。接着过到学校校长办公室盖章即可。</p><h1 id="将材料寄送或到大厅办理"><a href="#将材料寄送或到大厅办理" class="headerlink" title="将材料寄送或到大厅办理"></a>将材料寄送或到大厅办理</h1><p> 第三章的材料准备好之后就可以开始邮寄了，邮寄地址如下：</p><p>办理软件著作权登记可到登记大厅现场办理，也可使用挂号信函或特快专递邮寄到中国版权保护中心软件登记部。</p><p>​      邮寄联系地址：北京市西城区天桥南大街1号天桥艺术大厦A座三层302（邮编：100050）登记部（收）</p><p>​      电话：86-010-68003887</p><p>​      现场办理地址：天桥艺术大厦A座版权登记大厅</p><p><strong>另外：</strong><br>     在进行邮寄后中国版权中心收到纸质版材料在受理材料后会向申请人发送受理通知邮件。如需登正材料也会发邮件提示登正</p><p><strong>注</strong>：</p><p>（1）2016年6月1日起，中国版权保护中心登记大厅（天桥）不再现场取号受理登记业务,登记受理将全部实行微信预约<br>（2）在线提交表格后60个工作日内未提交纸质版材料申请作废</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前段时间，参加比赛负责开发APP，在开发完成后需要以学校为第一作者单位的方式进行申请软件著作权。因为是第一次申请，花了挺多时间去了解这个流程
      
    
    </summary>
    
      <category term="办证、申请" scheme="http://yoursite.com/categories/%E5%8A%9E%E8%AF%81%E3%80%81%E7%94%B3%E8%AF%B7/"/>
    
    
      <category term="软件著作权" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E8%91%97%E4%BD%9C%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>DoCode的前世今生</title>
    <link href="http://yoursite.com/2019/05/09/DoCode%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/"/>
    <id>http://yoursite.com/2019/05/09/DoCode的前世今生/</id>
    <published>2019-05-09T12:47:47.403Z</published>
    <updated>2019-05-09T18:30:09.839Z</updated>
    
    <content type="html"><![CDATA[<p>在混迹于于各种程序员的圈子后自己也开始想，要是能也有一个属于自己的博客就好了，于是乎在2018年的末尾注册了一个CSDN的账号，有了自己的第一个博客。但是不争气的自己事实上并不是那么安稳的人。在CSDN还没开始写博客的时候，就开始想着会不会有一种属于自己搭建的博客呢？</p><p>但是事情并没有那么的顺利，我第一次开始着手的时候，突然意识到一个问题，那就是：我没有前端的相关知识…..这就难倒我了。完了…….没有技术还想入非非，第一次放弃。</p><p>随着时间的推移，我也慢慢忘记了这么一回事，我也以为这个事情就这样过去了。在2019年也就是我大四下学期开学的时候，一个偶然的机会在B站看到了一个视频，内容是个人博客的搭建教学视频。这个视频一下子激发了我的兴趣，我在想，那不是我这样就可以实现我之前个人博客的想法了观看完这个视频后。因为这个视频的让我感觉到不是注册账号登录那么简答，所以我并没有冲动地打开电脑开始搭建自己的第一个个人博客。我仔细思考了一番，虽然我是一名即将迈入社会的程序员。但是同时我拥有的另外一个身份是我是一名非计算机专业出身的程序员。自己的能力水平，至少还是在需要自己安安心心踏踏实实学习的阶段。人是要有梦想，但同时还需要拥有的是自己的踏实。仰望星空的同时要一步一个脚印。</p><p>在冷静想了一番后，我决定把这件事情往后挪一挪。时间就这么过去了一周，一周过后因为一些原因没办法再安心地学习下去了。于是自己想着找一件事情来做，也是为了自己不去想那么多也没那么难受。于是就开始搭建第一个属于自己的个人博客。</p><p>站名在思考很久之后最后决定取名DoCode，主要原因是因为自己是一名非科班出身的程序员，希望自己能在这条路一直走下去，坚持自己最初的想法，不忘初心。</p><p>​                                                                                                                                     2019年3月4日</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在混迹于于各种程序员的圈子后自己也开始想，要是能也有一个属于自己的博客就好了，于是乎在2018年的末尾注册了一个CSDN的账号，有了自己的第一个博客。但是不争气的自己事实上并不是那么安稳的人。在CSDN还没开始写博客的时候，就开始想着会不会有一种属于自己搭建的博客呢？&lt;/p
      
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="关于DoCode" scheme="http://yoursite.com/tags/%E5%85%B3%E4%BA%8EDoCode/"/>
    
  </entry>
  
</feed>
