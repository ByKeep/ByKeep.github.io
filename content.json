{"meta":{"title":"DoCode","subtitle":null,"description":null,"author":"DoCode","url":"http://yoursite.com","root":"/"},"pages":[{"title":"分类","date":"2019-05-09T08:52:52.527Z","updated":"2019-05-09T08:52:52.527Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"关于","date":"2019-05-09T08:52:52.524Z","updated":"2019-05-09T08:52:52.524Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"友情链接","date":"2019-05-09T08:52:52.528Z","updated":"2019-05-09T08:52:52.528Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":""},{"title":"项目仓库","date":"2019-05-11T07:10:15.873Z","updated":"2019-05-11T07:10:15.873Z","comments":false,"path":"repository/index.html","permalink":"http://yoursite.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-05-09T08:52:52.531Z","updated":"2019-05-09T08:52:52.531Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux实操篇-PRM与YUM","slug":"Linux实操篇-PRM与YUM","date":"2019-06-01T06:20:16.540Z","updated":"2019-06-01T11:26:27.735Z","comments":true,"path":"2019/06/01/Linux实操篇-PRM与YUM/","link":"","permalink":"http://yoursite.com/2019/06/01/Linux实操篇-PRM与YUM/","excerpt":"","text":"RPM包的管理介绍一种用于互联网下载包的打包及安装工具，它包含在某些Linux分发版中。它生成 具有.RPM扩展名的文件。RPM是RedHat Package Manager（RedHat软件包管理工 具）的缩写，类似windows的setup.exe，这一文件格式名称虽然打上了RedHat的 标志，但理念是通用的。Linux的分发版本都有采用（suse,redhat, centos 等等），可以算是公认的行业标 准了。 rpm包的简单查询指令查询已安装的rpm列表 rpm –qa|grep xx 实例 （1）查看当前的系统有没有安装有火狐浏览器 rpm包名基本格式： 一个rpm包名：firefox-45.0.1-1.el6.centos.x86_64.rpm 名称:firefox 版本号：60.7.0-1 适用操作系统: el6.centos.x86_64 表示centos6.x的64位系统 如果是i686、i386表示32位系统，noarch表示通用。 rpm包的其它查询指令：(1)rpm -qa :查询所安装的所有rpm软件包 rpm -qa | more rpm -qa | grep X [rpm -qa | grep firefox ] (2)rpm -q 软件包名 :查询软件包是否安装 rpm -q firefox (3)rpm -qi 软件包名 ：查询软件包信息 rpm -qi file (4)rpm -ql 软件包名 :查询软件包中的文件 rpm -ql firefox (5)rpm -qf 文件全路径名 查询文件所属的软件包 rpm -qf /etc/passwd 卸载rpm包 基本语法 rpm -e RPM包的名称 应用案例 1) 删除firefox 软件包 细节说明 1) 如果其它软件包依赖于您要卸载的软件包，卸载时则会产生错误信息。 如： $ rpm -e foo removing these packages would break dependencies:foo is needed by bar-1.0-1 2) 如果我们就是要删除 foo这个rpm 包，可以增加参数 –nodeps ,就可以强制删除，但是一 般不推荐这样做，因为依赖于该软件包的程序可能无法运行 如：$ rpm -e –nodeps foo 安装rpm包 基本语法 rpm -ivh RPM包全路径名称 参数说明 i=install 安装 v=verbose 提示 h=hash 进度条 实例1) 演示安装firefox浏览器 步骤： 1）先找到firefox 的rpm安装包，需要挂载系统的ios文件，然后去/media/找到rpm安装包 2）找到之后，使用cp 指令将安装包拷贝到/opt/目录下 3）进入到opt目录下安装 yum介绍 Yum 是一个Shell前端软件包管理器。基于RPM包管理，能够从指定 的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并 且一次安装所有依赖的软件包。 yum的基本指令查询yum服务器是否有需要安装的软件 yum list|grep xx软件列表 安装指定的yum包: yum install xxx 下载安装实例(1)请使用yum的方式来安装firefox 步骤： 1）先查看yum服务器有没有这个软件的安装包 2）安装 会安装最新版的软件","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux实操","slug":"Linux实操","permalink":"http://yoursite.com/tags/Linux实操/"}]},{"title":"Linux实操篇-进程管理","slug":"Linux实操篇-进程管理","date":"2019-06-01T03:48:10.260Z","updated":"2019-06-10T10:09:22.318Z","comments":true,"path":"2019/06/01/Linux实操篇-进程管理/","link":"","permalink":"http://yoursite.com/2019/06/01/Linux实操篇-进程管理/","excerpt":"","text":"基本介绍1) 在LINUX中，每个执行的程序（代码）都称为一个进程。每一个进程都分配一 个ID号。 2) 每一个进程，都会对应一个父进程，而这个父进程可以复制多个子进程。例 如www服务器。 3) 每个进程都可能以两种方式存在的。前台与后台，所谓前台进程就是用户目 前的屏幕上可以进行操作的。后台进程则是实际在操作，但由于屏幕上无法 看到的进程，通常使用后台方式执行。 4) 一般系统的服务都是以后台进程的方式存在，而且都会常驻在系统中。直到 关机才才结束。 显示系统执行的进程ps指令基本介绍： ps命令是用来查看目前系统中，有哪些正在执行，以及它们执行的状况。 可以不加任何参数. 说明：查看进程使用的指令是ps，一般来说使用的参数是ps -aux ps显示的信息选项 字段 说明 PID 进程识别号 TTY 终端机号 TIME 此进程所消cpu时间 CMD 正在执行的命令或进程名 常见命令与说明 命令 说明 ps -a 显示当前终端的所有进程信息 ps -u 以用户格式显示进程信息 ps -x 显示后台进程运行的参数 实例 ps详解1) 指令：ps –aux|grep xxx ，比如我看看有没有sshd服务 2) 指令说明 • System V展示风格 • USER：用户名称 • PID：进程号 • %CPU：进程占用CPU的百分比 • %MEM：进程占用物理内存的百分比 • VSZ：进程占用的虚拟内存大小（单位：KB） • RSS：进程占用的物理内存大小（单位：KB） • TT：终端名称,缩写 . • STAT：进程状态，其中S-睡眠，s-表示该进程是会话的先导进程，N-表示进程拥有比普通 优先级更低的优先级，R-正在运行，D-短期等待，Z-僵死进程，T-被跟踪或者被停止等等 • STARTED：进程的启动时间 • TIME：CPU时间，即进程使用CPU的总时间 • COMMAND：启动进程所用的命令和参数，如果过长会被截断显示 应用实例要求：以全格式显示当前所有的进程，查看进程的父进程。 （1）ps -ef是以全格式显示当前所有的进程 • -e 显示所有进程。-f 全格式。 （2） ps -ef | grep xxx 详解： ​ 1） 是BSD风格 ​ 2） UID：用户ID ​ 3） PID：进程ID ​ 4） PPID：父进程ID ​ 5） C：CPU用于计算执行优先级的因子。数值越大，表明进程是CPU密集型运 算， 执行优先级会降低；数值越小，表明进程是I/O密集型运算，执行优先级会提高 ​ 6） STIME：进程启动的时间 ​ 7） TTY：完整的终端名称 • TIME：CPU时间 • CMD：启动进程所用的命令和参数 终止线程终止进程kill和killall介绍: 若是某个进程执行一半需要停止时，或是已消了很大的系统资源时，此时可以考虑停止该 进程。使用kill命令来完成此项任务。 基本语法： 1）kill [选项] 进程号（功能描述：通过进程号杀死进程） 2） killall 进程名称 （功能描述：通过进程名称杀死进程，也支持通配符，这在系统因负 载过大而变得很慢时很有用） 常用选项： -9 :表示强迫进程立即停止 实例（1）踢掉某个非法登录用户 （2）终止远程登录服务sshd，在适当的时候再重启sshd服务 （3）终止多个gedit编辑器【killall】 特别说明：如果使用该指令杀掉某些进行的父进程，那么相对应的子进程也会被杀掉 （4）强制杀掉一个终端 查看进程树基本语法： pstree [选项] ,可以更加直观的来看进程信息常用选项： -p :显示进程的PID -u :显示进程的所属用户 实例 请你树状的形式显示进程的pid 服务（service）管理介绍服务(service) 本质就是进程，但是是运行在后台的，通常都会监听某个端口，等待其它程 序的请求，比如(mysql , sshd 防火墙等)，因此我们又称为守护进程，是Linux中非常重要的 知识点。 【原理图】 service管理指令 service 服务名 [start | stop | restart | reload | status] 在CentOS7.0后 不再使用service ,而是 systemctl 实例 1) 查看当前防火墙的状况，关闭防火墙和重启防火墙。 防火墙当前状态 关闭和重启防火墙 细节说明1) 关闭或者启用防火墙后，立即生效。[telnet 测试 某个端口即可] windows的dos命令行下测试服务器指定端口 2) 这种方式只是临时生效，当重启系统后，还是回归以前对服务的设置。 3) 如果希望设置某个服务自启动或关闭永久生效，要使用chkconfig指令 查看服务名方式1：使用setup -&gt; 系统服务 就可以看到。 （特别说明：系统界面退出只需要点击Tab键切换选择到确认取消按钮，再点击enter即可选择按下，进而退出页面） 方式2: /etc/init.d/服务名称 运行级别（1）服务的运行级别(runlevel)，服务在Linux的各个运行级别中均可修改是否自启动 （2） 查看或者修改默认级别：vi /etc/inittab （3）Linux系统有7种运行级别(runlevel)：常用的是级别3和5 • 运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动 • 运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆 • 运行级别2：多用户状态(没有NFS)，不支持网络 • 运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式 • 运行级别4：系统未使用，保留 • 运行级别5：X11控制台，登陆后进入图形GUI模式 • 运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动 开机的流程说明 chkconfig指令介绍 通过chkconfig 命令可以给每个服务的各个运行级别设置自启动/关闭 基本语法 1) 查看服务 chkconfig –list|grep xxx 2) chkconfig 服务名 –list 3) chkconfig –level 5 服务名 on/off 需求：请将sshd在运行级别为5的情况下，不要自启动 实例 1) 请显示当前系统所有服务的各个运行级别的运行状态 2) 请查看sshd服务的运行状态 3) 将sshd 服务在运行级别5下设置为不自动启动，看看有什么效果？ 指令：chkconfig –level 5 sshd off 4) 当运行级别为5时，关闭防火墙。 指令：chkconfig –level 5 iptables off 5) 在所有运行级别下，关闭防火墙 指令：chkconfig iptables off 6) 在所有运行级别下，开启防火墙 指令： chkconfig iptables on 细节说明：chkconfig重新设置服务自启动或关闭后，需要重新启动机器reboot才能生效 监控服务动态监控进程介绍 top与ps命令很相似。它们都用来显示正在执行的进程。top与ps最大的不同之处，在于top 在执行一段时间可以更新正在运行的的进程。 基本语法： top [选项] 选项说明： 选项 功能 -d 秒数 指定top命令每隔几秒更新。默认是3秒在top命令的交互模式当中可以执行的 命令： -i 使top不显示任何闲置或者僵死进程。 -p 通过指定监控进程ID来仅仅监控某个进程的状态。 交互操作说明： 操作 功能 P 以CPU使用率排序，默认就是此项 M 以内存的使用率排序 N 以PID排序 q 退出top 实例 （1）监视特定用户 步骤： 1）top：输入此命令，按回车键，查看执行的进程。 2）u：然后输入“u”回车，再输入用户名，即可 （2）终止指定的进程。 步骤： 1）top：输入此命令，按回车键，查看执行的进程。 2） k：然后输入“k”回车，再输入要结束的进程ID号 （3）指定系统状态更新的时间(每隔10秒自动更新，默认是3秒)： 指令：top -d 10 监控网络状态查看系统网络情况netstat基本语法 ：netstat [选项] 常用指令：netsat -anp 选项说明 1）-an 按一定顺序排列输出 2）-p 显示哪个进程在调用 实例 (1)查看系统所有的网络服务 (2)请查看服务名为 sshd 的服务的信息。 检测主机连接命令ping： 是一种网络检测检测工具，它主要是用检测远程主机是否正常，或是两部主机间 的介质是否为断、网线是否脱落或网卡故障。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux实操","slug":"Linux实操","permalink":"http://yoursite.com/tags/Linux实操/"}]},{"title":"Java基础篇-多线程","slug":"Java基础篇-多线程","date":"2019-05-31T07:16:00.529Z","updated":"2019-06-01T03:51:50.048Z","comments":true,"path":"2019/05/31/Java基础篇-多线程/","link":"","permalink":"http://yoursite.com/2019/05/31/Java基础篇-多线程/","excerpt":"","text":"介绍进程与线程进程：是一个正在执行中的程序。 说明：每一个进程执行都有一个执行顺序。该顺序是一个执行路径，或者叫一个控制单元 线程：就是进程中的一个独立的控制单元。 说明：线程在控制着进程的执行 细节说明：一个进程中至少有一个线程 Java中的线程与进程Java VM 在启动的时候会有一个java.exe 该进程中至少一个线程负责java程序的执行，而且这个线程运行的代码存在于main方法中，该线程称之为主线程 扩展知识：其实更细节说明jvm，jvm启动不止一个线程，还有负责垃圾回收机制的线程。所以至少两个线程 创建线程-继承Thread类java已经提供了对线程这类事物的描述。就是Thread类。 1）创建线程的第一种方式：继承Thread类，并覆盖run方法 2）创建线程的第二种方式：声明实现Runable接口的类，该类然后实现run方法 第一种方式创建线程覆盖run方法的原因 （1）Thread类用于描述线程。该类定义了一个功能，用于存储线程中要运行的代码。该存储功能就是run方法 （2）Thread类中的run方法用于存储线程中要运行的代码 步骤： 1）定义类继承Thread方法 2）复写Thread类中的run方法 3）调用线程的start方法，启动线程以及调用run（）方法 实例： 细节说明： (1)发现运行结果每一次的都不同，因为多个线程都在获取cpu的执行权。cpu执行到谁，谁就运行。 (2)cpu在做着快速的切换，以达到看上去同时运行的效果。 (3)我们可以形象的把多线程的运行认为在相互抢夺cpu的执行权。这就是多线程的特性：随机性,谁抢到谁执行，至于执行多长时间，cpu说了算 明确一点：在某一时刻，只能有一个程序运行。（多核除外） 第二种方式创建线程步骤： 1）定义类实现Runable接口 2）覆盖Runablez接口中的run方法 ​ 将线程中要运行的代码存放在该run方法中 3）通过Thread类建立线程对象 4）将Runable接口的子类对象作为实际参数传递给Thread类的构造函数 ​ 为什么要将Runable接口子类对象传递给Thread的构造函数？因为，自定义的run方法所属的对象是Runable接口的子类对象。所以要让线程去执行指定对象的run方法，就必须明确该run方法所属的对象 5）调用Thread类中的start方法开启线程并调用Runable接口子类的run方法 实例 方式1和方式2的区别1）方式2 避免了单继承的局限性，在定义线程时，建议使用实现方式（方式2） 2）继承Thread:线程代码存放在Thread子类的run方法中,实现Runable接口线程代码存放在接口子类的run方法中 线程的四种状态 线程对象与线程名称获取默认线程名称线程都有自己的默认的名称 默认名称：Thread-编号 （编号从0开始） 获取线程名称方法：使用getName()方法。 实例 自定义线程名称自定义线程名称有两种方式进行设置： 1）使用setName()方法进行设置 2）构造函数方式进行设置 获取线程对象： static Thread currentThread()；获取当前线程的对象 自定义线程名称步骤如下： 1）创建线程即初始化时，向线程对象传递线程名称 2）线程类中书写构造函数，并使用父类构造方法 实例 自定义线程名称，并在运行时显示自定义线程名称到控制台中 1）通过调用currentThread()方法获取当前线程的对象 2）线程对象调用线程的getName（）方法，获取当前线程的名称 多线程的安全性问题","categories":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/categories/Java/"}],"tags":[{"name":"Java基础","slug":"Java基础","permalink":"http://yoursite.com/tags/Java基础/"}]},{"title":"Linux实操篇-网络配置","slug":"Linux实操篇-网络配置","date":"2019-05-31T06:40:26.545Z","updated":"2019-05-31T07:01:59.149Z","comments":true,"path":"2019/05/31/Linux实操篇-网络配置/","link":"","permalink":"http://yoursite.com/2019/05/31/Linux实操篇-网络配置/","excerpt":"","text":"虚拟机网络模式1）虚拟机连接网络的三种模式 2）虚拟机使用NAT模式的网络原理图 查看网络IP和网关查看虚拟网络编辑器 修改IP（虚拟网络的IP） 查看网关 查看windows环境中的VMnet8网络配置方式1：命令行输入：ipconfig 方式2：右键点击菜单栏网络图标——&gt;打开网络和共享中心——&gt;更改适配器——&gt;选择VMnet8——&gt;右键查看属性——&gt;选择IPv4 ping 测试主机之间网络连通性基本语法：ping 目的主机 （功能描述：测试当前服务器是否可以连接目的主机）实例测试当前服务器是否可以连接百度 [root@hadoop100 桌面]# ping www.baidu.com Linux网络环境配置第一种方法(自动获取)说明：登陆后，通过界面的来设置自动获取ip 特点：linux启动后会自动获取IP,缺点是每次自动获取的ip地址可能不一样。，不适用于做服务器，因为我们的服务器的IP需要是固定的 第二种方法(指定固定的ip)说明 直接修改配置文件来指定IP,并可以连接到外网(程序员推荐)， 编辑 vim /etc/sysconfig/network-scripts/ifcfg-eth0 （etho的配置文件，如果多块需要配置多块的配置文件） 实例 要求：将ip地址配置的静态的，ip地址为192.168.168.130 注意：设置的IP地址如果和虚拟机的VMnet网卡的IP网段需要是一样的，如果不一样就无法建立通信，本例子中的IP设置和前面图的IP不在同一网段 1)步骤1，修改网卡配置文件 2）步骤2 ，重新启动网络服务 ifcfg-eth0文件说明 、","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux实操","slug":"Linux实操","permalink":"http://yoursite.com/tags/Linux实操/"}]},{"title":"Linux实操篇-磁盘分区和挂载","slug":"Linux实操篇-磁盘分区和挂载","date":"2019-05-31T04:19:44.595Z","updated":"2019-05-31T05:25:24.454Z","comments":true,"path":"2019/05/31/Linux实操篇-磁盘分区和挂载/","link":"","permalink":"http://yoursite.com/2019/05/31/Linux实操篇-磁盘分区和挂载/","excerpt":"","text":"分区基本知识分区的方式：1) mbr分区: 1.最多支持四个主分区 2.系统只能安装在主分区 3.扩展分区要占一个主分区 4.MBR最大只支持2TB，但拥有最好的兼容性2) gtp分区: 1.支持无限多个主分区（但操作系统可能限制，比如 windows下最多128个分区） 2.最大支持18EB的大容量（1EB=1024 PB，1PB=1024 TB ） 3.windows7 64位以后支持gtp windows下的磁盘分区 Linux分区原理介绍 1) Linux来说无论有几个分区，分给哪一目录使用，它归根结底就只有一个根目录，一个独 立且唯一的文件结构 , Linux中每个分区都是用来组成整个文件系统的一部分。2) Linux采用了一种叫“载入”的处理方法，它的整个文件系统中包含了一整套的文件和目 录，且将一个分区和一个目录联系起来。这时要载入的一个分区将使它的存储空间在一 个目录下获得。 3) 示意图 硬盘说明1) Linux硬盘分IDE硬盘和SCSI硬盘，目前基本上是SCSI硬盘 2) 对于IDE硬盘，驱动器标识符为“hdx~”,其中“hd”表明分区所在设备的类型，这里是指 IDE硬盘了。“x”为盘号（a为基本盘，b为基本从属盘，c为辅助主盘，d为辅助从属 盘）,“~”代表分区，前四个分区用数字1到4表示，它们是主分区或扩展分区，从5开始就 是逻辑分区。例，hda3表示为第一个IDE硬盘上的第三个主分区或扩展分区,hdb2表示为 第二个IDE硬盘上的第二个主分区或扩展分区。 3) 对于SCSI硬盘则标识为“sdx~”，SCSI硬盘是用“sd”来表示分区所在设备的类型的，其余 则和IDE硬盘的表示方法一样。 查看所有设备挂载情况命令 ：lsblk （谐音：老师不离开） 或者 lsblk -f 挂载经典案例虚拟机增加硬盘需求：为Linux系统新增加一块硬盘并将其挂载到Linux中的/home/newdisk目录下 如何增加一块硬盘？1）虚拟机添加硬盘 2）分区 3）格式化 4）挂载 5）设置可以自动挂载 实操步骤：1）在【虚拟机】菜单中，选择【设 置】，然后设备列表里添加硬盘， 然后一路【下一步】，中间只有 选择磁盘大小的地方需要修改， 至到完成。然后重启系统（才能 识别）！ 2）分区命令 fdisk /dev/sdb 开始对/sdb分区 • m 显示命令列表 • p 显示磁盘分区 同 fdisk –l • n 新增分区 • d 删除分区 • w 写入并退出 说明： 开始分区后输入n，新增分区，然后选择p ，分区类型为主分区。两次回车默认剩 余全部空间。最后输入w写入分区并退出，若不保存退出输入q。 3）格式化分区 分区命令:mkfs -t ext4 /dev/sdb1 其中ext4是分区类型 4）新建挂载目录，并将硬盘挂载到目录 挂载: 将一个分区与一个目录联系起来， 基本语法：mount 设备名称 挂载目录 例如： mount /dev/sdb1 /newdisk 卸载： umount 设备名称 或者 挂载目录 例如： umount /dev/sdb1 或者 umount /newdisk 注意：用命令行挂载重启后会失效 5）设置可以自动挂载（永久挂载，当你重启系统，仍然可以挂载到/home/newdisk目录下） 永久挂载: 通过修改/etc/fstab实现挂载 添加完成后 执行mount –a 即刻生效 硬盘查询实用指令查询系统整体磁盘使用情况基本语法： df -h 实例 （1）查询系统整体磁盘使用情况 查询指定目录的磁盘占用情况基本语法： du -h /目录查询指定目录的磁盘占用情况，默认为当前目录 -s 指定目录占用大小汇总 -h 带计量单位 -a 含文件 –max-depth=1 子目录深度 -c 列出明细的同时，增加汇总值 实例 （1） 查询 /opt 目录的磁盘占用情况，深度为1 磁盘情况-工作中的实用指令1) 统计/home文件夹下文件的个数 2) 统计/home文件夹下目录的个数 3) 统计/home文件夹下文件的个数，包括子文件夹里的 4) 统计文件夹下目录的个数，包括子文件夹里的 5) 以树状显示目录结构","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux实操","slug":"Linux实操","permalink":"http://yoursite.com/tags/Linux实操/"}]},{"title":"Linux实操篇-定时调度任务与实例","slug":"Linux实操篇-定时调度任务","date":"2019-05-30T05:58:36.568Z","updated":"2019-05-30T09:14:18.312Z","comments":true,"path":"2019/05/30/Linux实操篇-定时调度任务/","link":"","permalink":"http://yoursite.com/2019/05/30/Linux实操篇-定时调度任务/","excerpt":"","text":"crond任务调度crontab 进行定时任务的设置 任务调度：是指系统在某个时间执行的特定的命令或程序。 原理示意图: 任务调度分类： ​ 1）系统工作：有些重要的工作必须周而复始地执行。如病毒扫描等 ​ 2）个别用户工作：个别用户可能希望执行某些程序，比如对mysql数据库的备份。 基本语法 ：crontab [选项] 常用选项 选项 选项说明 -e 编辑crontab定时任务 -l 查询crontab任务 -r 删除当前用户所有的crontab任务 快速入门任务要求1)设置任务调度文件：/etc/crontab 2)设置个人任务调度。执行crontab –e命令。 3) 接着输入任务到调度文件 如：/1 * ls –l /etc/ &gt; /tmp/to.txt 4)意思说每小时的每分钟执行ls –l /etc/ &gt; /tmp/to.txt命令 步骤如下1）cron -e 2)输入：/1 * ls -l /etc &gt;&gt;/tmp/to.txt 3）保存退出后就完成 4)在每一分钟都会自动的调用 ls-l/etc &gt;&gt;/tmp/to.txt 参数细节说明5个占位符的说明 项目 含义 范围 第一个“*” 一小时当中的第几分钟 0-59 第二个“*” 一天当中的第几小时 0-23 第三个“*” 一个月当中的第几天 1-31 第五个“*” 一周当中的星期几 0-7（0和7都代表星期日） 特殊符号的说明 特殊符号 含义 * 代表任何时间。比如第一个“*”就代表一小时中每分钟都执行一 次的意思。 ， 代表不连续的时间。比如“0 8,12,16 * 命令”，就代表在每天 的8点0分，12点0分，16点0分都执行一次命令 - 代表连续的时间范围。比如“0 5 1-6命令”，代表在周一到周 六的凌晨5点0分执行命令 */n 代表每隔多久执行一次。比如“/10 * 命令”，代表每隔 10分钟就执行一遍命令 特定时间执行任务案例 时间 含义 45 22 * 命令 在22点45分执行命令 0 17 1 命令 每周1 的17点0分执行命令 0 5 1,15 命令 每月1号和15号的凌晨5点0分执行命令 40 4 1-5 命令 每周一到周五的凌晨4点40分执行命令 /10 4 命令 每天的凌晨4点，每隔10分钟执行一次命令 0 0 1,15 * 1 命令 每月1号和15号，每周1的0点0分都会执行命令。 注意：星期几和 几号最好不要同时出现，因为他们定义的都是天。非常容易让管理员混乱。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux实操","slug":"Linux实操","permalink":"http://yoursite.com/tags/Linux实操/"}]},{"title":"Linux实操篇-组管理和权限管理","slug":"Linux实操篇-组管理","date":"2019-05-29T02:06:34.892Z","updated":"2019-05-29T09:54:05.111Z","comments":true,"path":"2019/05/29/Linux实操篇-组管理/","link":"","permalink":"http://yoursite.com/2019/05/29/Linux实操篇-组管理/","excerpt":"","text":"Linux组基本介绍在linux中的每个用户必须属于一个组，不能独立于组外。在linux中每个文件 有所有者、所在组、其它组的概念。1) 所有者 2) 所在组 3) 其它组 4) 改变用户所在的组 文件/目录 所有者概念：一般为文件的创建者，谁创建了文件，就自然的成为该文件的所有者。 查看文件的所有者1) 指令：ls –ahl 实例 （1）创建一个组police，再创建一个用户tom，将tom放在police组中，然后使用tom来创建一个文件ok.txt，并查看文件所有者 步骤1：创建police组以及tom用户并将tom放在police组中 步骤2：使用tom用户创建ok.txt文件 特别说明：文件的所在组一般是所有者的所在组，但是也是可以更改的 文件/目录所在组修改文件所有者指令： 1）chown newowner file 改变文件的所有者2）chown newowner:newgroup file 改变用户的所有者和所有组 3）-R 如果是目录 则使其下所有子文件或目录递归生效 实例 （1）使用root创建一个文件apple.txt，然后将其修改为tom （2) 请将 /home/kkk 目录下所有的文件和目录的所有者都修改成tom 首先我们应该选择root用户操作 组的创建基本指令: groupadd 组名实例 (1) 创建一个组, ,monster 创建一个用户 fox ，并放入到 monster组中 修改文件所在的组 基本指令 ： 1）chgrp 组名 文件名 2）-R 如果是目录 则使其下所有子文件或目录递归生效 实例 （1）使用root用户创建文件 orange.txt ,看看当前这个文件属于哪个组，然后将这个文 件所在组，修改到 police组。 （2） 请将 /home/kkk 目录下所有的文件和目录的所在组都修改成 police chgrp -R police /home/kkk/ 其它组介绍：除文件的所有者和所在组的用户外，系统的其它用户都是文件的其它组。 改变用户所在组在添加用户时，可以指定将该用户添加到哪个组中，同样的用root的管理权限可以改变某 个用户所在的组。 改变用户所在组 1) usermod –g 组名 用户名 2) usermod –d 目录名 用户名 改变该用户登陆的初始目录。 实例 （1）创建一个土匪组（bandit）将tom这个用户从原来所在的police组，修改为 土匪组（bandit） 权限的基本介绍ls -l 中显示的内容如下： -rwxrw-r– 1 root root 1213 Feb 2 09:39 abc0-9位说明 1) 第0位确定文件类型(d, - , l , c , b) 2) 第1-3位确定所有者（该文件的所有者）拥有该文件的权限。—User 3) 第4-6位确定所属组（同用户组的）拥有该文件的权限，—Group 4) 第7-9位确定其他用户拥有该文件的权限 —Other rwx权限详解rwx作用到文件 1) [ r ]代表可读(read): 可以读取,查看 2) [ w ]代表可写(write): 可以修改,但是不代表可以删除该文件,删除一个文件的前提条件是 对该文件所在的目录有写权限，才能删除该文件. 3) [ x ]代表可执行(execute):可以被执行 rwx作用到目录1) [ r ]代表可读(read): 可以读取，ls查看目录内容 2) [ w ]代表可写(write): 可以修改,目录内创建+删除+重命名目录 3) [ x ]代表可执行(execute):可以进入该目录 文件及目录权限实际案例ls -l 中显示的内容如下： -rwxrw-r– 1 root root 1213 Feb 2 09:39 abc 10个字符确定不同用户能对文件干什么 第一个字符代表文件类型：文件 (-),目录(d),链接(l) 其余字符每3个一组(rwx) 读(r) 写(w) 执行(x) 第一组rwx : 文件拥有者的权限是读、写和执行 第二组rw-: 与文件拥有者同一组的用户的权限是读、写但不能执行 第三组r– : 不与文件拥有者同组的其他用户的权限是读不能写和执行 可用数字表示为: r=4,w=2,x=1 因此rwx=4+2+1=7 权限 说明 1 文件：硬连接数或 目录：子目录数 root 用户 root 组 1213 文件大小（字节），如果是文件夹，显示4096字节 Feb 2 09:39 最后修改日期 abc 文件名 修改权限-chmod基本说明： 通过chmod指令，可以修改文件或者目录的权限。 第一种方式第一种方式：+ 、-、= 变更权限 u:所有者 g:所在组 o:其他人 a:所有人(u、g、o的总和) 1) chmod u=rwx,g=rx,o=x 文件目录名 功能描述：u=rwx给所有者rwx权限，g=rx给所在组的其他用户提供rx权限，o=x其他组用户提供x权限 2) chmod o+w 文件目录名 功能描述：给其他组用户添加提供w(写)权限 3) chmod a-x 文件目录名 功能描述：给所用用户减去x(执行)权限 实例 1) 给abc文件 的所有者读写执行的权限，给所在组读执行权限，给其它组读执行权限。 特别说明：文件获取可执行权限之后，文件名字变成绿色 2) 给abc文件的所有者除去执行的权限，增加组写的权限 3) 给abc文件的所有用户添加读的权限 第二种方式第二种方式：通过数字变更权限 r=4 w=2 x=1 rwx=4+2+1=7 chmod u=rwx,g=rx,o=x 文件目录名 相当于 chmod 751 文件目录名 实例 （1）将 /home/abc.txt 文件的权限修改成 rwxr-xr-x, 使用给数字的方式实现： rwx=4+2+1=7 r-x=4+1=5 r-x=5+1=5 指令：chmod 755 /home/abc.txt","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux实操","slug":"Linux实操","permalink":"http://yoursite.com/tags/Linux实操/"}]},{"title":"Java基础篇-Java异常处理","slug":"Java基础篇-Java异常处理","date":"2019-05-25T09:49:40.996Z","updated":"2019-05-28T06:04:53.859Z","comments":true,"path":"2019/05/25/Java基础篇-Java异常处理/","link":"","permalink":"http://yoursite.com/2019/05/25/Java基础篇-Java异常处理/","excerpt":"","text":"概念介绍 异常：就是程序在运行时出现不正常的情况 异常由来：问题也是现实生活中一个具体的事物，也可以通过java的类的形式进行描述。并封装成对象。其实就是java对不征程情况进行描述后的对象体现 问题的划分 1）严重的问题 2）非严重的问题 问题的描述 1）对于严重的问题，java通过使用Error类进行描述 ​ 对于Error一般不编写针对性的代码进行处理 2）对于非严重的问题，java通过Exception类进行描述 ​ 对于Exception可以使用针对性的处理方式进行处理 说明 无论是Error还是Exception都具有一些的共性内容 比如不正常的情况信息引发原因等,于是向上抽取形成Throwable体系 Throwable ​ |–Error ​ |–Exception 异常处理java提供了以下特有的语句进行异常处理 注意：如果在try中定义有变量，则这个变量只能在try语句范围内有效 实例： 对捕获异常对象进行的常见方法操作 1） String getMessage();//获取异常信息字符串 ​ 说明：获取的只有异常信息，较为简单 2）String toString()//获取异常名称 ：异常信息 ​ 说明：获取的信息较为齐全 3）void prinStackTrace();//异常名称，异常信息，异常出现的位置 注意：jvm默认的异常处理机制就是在调用prinStackTrace方法。打印异常的堆栈跟踪信息 说明：信息最为齐全 异常声明throws介绍在程序的开发过程中，应该对可能出现异常并未处理的功能模块使用throws进行标识声明将，在调用者使用该功能模块时知道该模块可能出现问题，并进行异常处理，如果不处理将会出现编译失败的情况。 处理实例对功能模块中声明的异常，主函数在使用的时候针对抛出的异常进行捕抓并做相对应的处理 多异常处理1）在声明异常时，建议声明更加具体的异常。这样的处理更加的具体。 2）对声明的异常进行处理时一般使用更加具体的异常进行异常处理，提高正对性 3）提高异常处理的针对性可以在发生声明的具体异常意外出现的异常进行及时有效的处理 总结：当功能模块可能出现多个异常时一般使用多异常的处理机制进行处理 实例1）多异常声明方法：throws 异常1，异常2 2）异常处理方法，书写对应的catch语句对捕获异常进行处理,如图所示 注意​ 1）对方声明几个异常就有几个catch块进行异常处理，不要定义多余的catch块 ​ 2）如果多个catch块中的异常出现继承关系，父类异常catch块放在最下面 ​ 3）建立catch处理时，catch中一定要定义具体处理方式，不要简单的定义一句 e.printStackTrace(),也不要简单的书写一条输出语句。 ​ 4）正确的处理异常方式是将异常结果输出记录到异常记录文件，提供维护人员进行维护 自定义异常介绍Java针对了普遍有可能出现的问题进行了总结和封装成类的形式，但是在项目开发的过程中同样会出现异常，这些异常部分可能是项目的特有异常Java中是没有定义的，所以就需要开发人员自定义异常。 自定义异常类1）将异常封装成一个类并继承Exception,注意必须是自定义类继承Exception 原因：异常体系有一个特点：因为异常类和异常对象都被抛出他们都具备可抛性，这个可抛性是Throwable这个体系中独有特点，只有这个体系的类和对象才可以被throws和throw操作 2）添加异常信息，直接定义构造函数接收异常信息并调用父类方法即可添加 原因：在父类的Throwable中已经定义了错误信息接收机制，子类直接使用父类构造方法即可 自定义异常方法1）定义一个自定义的异常类 2)在功能模块中，达到了异常条件时将自定义异常手动抛出 3）对抛出异常对象进行处理，处理方式 （1）在函数内部使用try catch处理，如下图所示 （2）在函数上声明让调用者进行处理 注意： （1）由于自定义异常非Java本身定义所以在编写功能模块时需要使用关键字throw将异常手动抛出 （1）编写功能模块时，功能模块内部引起的异常则在内部进行处理，如果是外部调用者导致的功能异常则将异常抛出由调用者解决（即谁直接导致或操作导致异常的发生谁就对该异常进行处理，不能层层抛出去） 实例需求：在进行除法运算时，对于除数是负数的情况，也视为是错误的无法进行运算的 （1）自定义异常类 （2）功能模块 （3）调用者函数 throw和throws的区别1）throws使用在函数上 2）throw使用在函数内 3）throws后面跟的异常类，可以跟多个。用逗号隔开 4）throw后跟的是异常对象(不仅限于自定义异常) RuntimeException介绍对于异常分为两种： 1）编译时被检测异常 2）编译时不被检测异常（运行时异常。RuntimeException以及其子类） RuntimeException是Exception中的特殊异常类 该异常类特点： （1）在函数内部throw异常对象时，不需要在函数上声明,编译一样通过 （2）在函数上进行声明，调用者可以不进行处理，编译一样通过 原因：之所以不用在函数上进行声明是因为不需要调用者进行处理，当该异常发生时希望程序停止。因为在运行时，出现了无法继续运算的情况，希望停止程序后对代码进行修正 实例 自定义异常新类型自定义异常时：如果该异常的发生，无法继续进行运算，就让自定义异常继承RuntimeException 异常-finally介绍：finally代码块存放着程序中一定会执行的代码 常用环境：常用于关闭资源 注意：finally只有一种情况不执行，当执行到System.exit(0),finally不会执行 异常-覆盖时的异常特点1）子类在覆盖父类方法时，如果覆盖的父类方法抛出异常，那么子类的覆盖方法只能抛出父类的异常或该异常的子类或者不抛出异常 2）如果在覆盖方法的时候出现了新的异常，这种情况不可以将异常抛出，而是将异常处理在函数内部 3）如果父类方法抛出多异常，那么子类在覆盖该方法时，只能抛出父类异常的子集 4）如果父类或者接口方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常，如果子类发生了异常就只能进行try处理，绝对不能抛出 总结异常的好处 1)将问题进行封装 2）将正常流程代码和问题处理代码相分离，方便阅读 异常处理原则 1）处理方式有两种:try或者throws 2）调用到抛出异常的功能时，抛出几个就处理几个（一个try，对应多个catch） 3）多个catch，父类的catch放到最下面 4）catch内，需要定义针对性的处理方式。不要简单定义printStackTrace输出语句,也不要不写，当捕获的异常本功能处理不了时，可以在catch中抛出","categories":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/categories/Java/"}],"tags":[{"name":"Java基础","slug":"Java基础","permalink":"http://yoursite.com/tags/Java基础/"}]},{"title":"Linux实操篇-Linux实用指令","slug":"Linux实操篇-Linux实用指令","date":"2019-05-25T05:04:48.707Z","updated":"2019-06-10T10:02:20.883Z","comments":true,"path":"2019/05/25/Linux实操篇-Linux实用指令/","link":"","permalink":"http://yoursite.com/2019/05/25/Linux实操篇-Linux实用指令/","excerpt":"","text":"运行级别指令运行级别说明Linux有七个运行级别，如下所示 运行级别 级别说明 0 关机 1 单用户（找回丢失密码） 2 多用户无网络服务 3 多用户有网络服务（用的最多的） 4 保留尚未使用 5 图形界面 6 重启（启用该运行别之后机器进入该级别就会重启） 运行级别配置文件：/etc/inittab 常用的运行级别是3和5，要修改默认的运行级别可以修改运行级别配置文件：/etc/inittab的id:5 initdefault:这行中的数字 指定运行级别基本语法： init [0123456] 举例：从图像界面到运行级别3，再从级别3回退到级别5 在Linux的图形界面中，打开终端输入：init 3 回车进入级别3，再输入init5即可回到级别5 【面试题】如何找回root密码题目：如何找回root密码，如果我们不小心忘记了root密码，怎么找回？ 思路：进入到单用户模式（运行级别1），然后修改root密码，因为进入单用户模式，root不需要密码就可以登录 实际操作步骤：1）启动系统没有进入到登录页面前点击enter键暂停启动，如下图所示 2）输入e,编辑命令在启动之前，进入如下页面 3)将光标移动到第二行，再输入e(编辑内核)，进入如下页面，输入1（运行级别1，单用户模式） 4）输入enter键，再输入b，开始引导 5）开始进入单用户模式，用户登录为root 6）进入之后直接输入passwd root进行修改root账户密码。 7）输入reboot重启完成操作 细节说明 1）不允许通过使用远程操作的方式进行修改密码，需要进行直接操作电脑的方式进行 2）假如默认运行级别被修改为级别0，出现无法开机的情况，解决办法是进入单用户模式修改默认启动级别即可 帮助指令当我们对某个指令不熟悉时，我们可以使用Linux指令的帮助指令进行了解指令的使用方法。 man 获得帮助信息 基本语法 :man [命令或配置文件]（功能描述：获得帮助信息） help指令 基本语法:help 命令 （功能描述：获得shell内置命令的帮助信息） 百度帮助更直接 虽然上面两个都可以来获取指令帮助，但是需要英语功底，如果英语不太好的，我还是 推荐大家直接百度靠谱。 文件目录类pwd 指令功能描述：显示当前工作目录的绝对路径 基本语法：pwd ls指令 基本语法：ls [选项] [目录或是文件] 常用选项 1） -a ：显示当前目录所有的文件和目录，包括隐藏的。 2） -l ：以列表的方式显示信息 操作实例如图所示： cd 指令功能描述：进入到指定目录 基本语法 ：cd [参数] (功能描述：切换到指定目录) 常用参数 ： 1） 绝对路径和相对路径 2）cd ~ 或者cd 回到自己的家目录 3） cd .. 回到当前目录的上一级目录 如何理解绝对绝对路径与相对路径：需求：从当前工作目录时的 /root进入到/home 绝对路径： /home，即从根目录开始定位 相对路径：../home，从当前工作目录定位 mkdir指令功能描述：mkdir指令用于创建目录 基本语法： mkdir [选项] 要创建的目录 常用选项 ：-p ：创建多级目录 实例 1）创建一个目录：/home/dog 指令： mkdir /home/dog 2）创建多级目录 /home/animal/tiger 指令：mkdir -p /home/animal/tiger rmdir指令功能描述： rmdir指令删除空目录 基本语法 rmdir [选项] 要删除的空目录 细节说明 1）rmdir 删除的是空目录，如果目录下有内容时无法删除的。 2）如果需要删除非空目录，需要使用指令： rm -rf 要删除的目录 touch指令功能描述： touch指令创建空文件 基本语法 touch 文件名称 实例： 1）创建一个文件: touch 1.txt 2) 创建多个文件：touch 1.txt 2.txt cp指令cp 指令拷贝文件到指定目录 基本语法 cp [选项] source dest 常用选项 -r ：递归复制整个文件夹 说明： 强制覆盖不提示的方法：\\cp 实例： 1）将当前目录下的1.txt文件拷贝到当前目录home/b目录下 2） 拷贝文件夹 ： cp -r 源目录/ 目标目录/ 3）拷贝文件夹时，覆盖目标文件夹文件：\\cp -r 源目录/ 目标目录/ rm指令功能描述：rm 指令移除文件或目录 基本语法 rm [选项] 要删除的文件或目录 常用选项 1) -r ：递归删除整个文件夹 2）-f ： 强制删除不提示 说明：强制删除不提示的方法：带上 -f 参数即可 实例 （1）删除文件 （2）强制删除整个目录 mv指令功能描述：mv 移动文件到相应目录或重命名 基本语法 1）mv oldNameFile newNameFile (功能描述：重命名) 2）mv /temp/movefile /targetFolder (功能描述：移动文件) 实例 （1）重命名文件 需求：将当前目录下的aaa.txt文件重命名为pig.txt 细节说明：它的实质还是移动命令（即剪切），将当前目录下的aaa.txt文件，移动到当前目录下的pig.txt文件 （2）移动文件 需求：将当前目录下的pig.txt文件移动到/root目录下 cat指令功能描述：cat 查看文件内容 ，以只读的方式 基本语法 ：cat [选项] 要查看的文件 常用选项 ： -n ：显示行号 实例 需求： 读取/ect/profile 文件内容，并显示行号 细节说明 1）它的功能只能查看文件内容，不能对文件进行修改。（只读的方式） 2）在使用cat命令为了浏览方便，一般会带上 管道命令 | more ，对文件分页显示，点击空格键即可浏览下一页。语法：cat 文件名 | more more指令功能描述： more指令是一个基于VI编辑器的文本过滤器，它以全屏幕的方式按页 显示文本文件的内容。 more指令中内置了若干快捷键，详见操作说明 操作说明 操作 功能说明 空白键（space） 代表向下翻一页 Enter 代表向下翻一行 q 代表立刻离开more ，不再显示该文件内容。 Ctrl+F 向下滚动一屏 Ctrl+B 返回上一屏 = 输出当前行的行号 :f 输出文件名和当前行的行号 基本语法 ：more 要查看的文件 less指令功能描述：less指令用来分屏查看文件内容，它的功能与more指令类似，但是比more指令更加强大，支 持各种显示终端。less指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是 根据显示需要加载内容，对于显示大型文件具有较高的效率。 操作说明 操作 功能说明 空白键 向下翻动一页 [pagedown] 向下翻动一页 [pageup] 向上翻动一页； /字串 向下搜寻『字串』的功能；n：向下查找；N：向上查找； ?字串 向上搜寻『字串』的功能；n：向上查找；N：向下查找； q 离开 less 这个程序； 指令&gt; 和 &gt;&gt; 指令输出重定向&gt;和 &gt;&gt; 追加 功能描述： 1)输出重定向&gt;添加内到指定文件会将原来的文件内容覆盖 2）追加&gt;&gt;添加内容到指定文件不会覆盖原来的文件内容，而是追加到文件末尾 基本语法1) ls -l &gt;文件 （功能描述：列表的内容写入文件a.txt中（覆盖写））2) ls -al &gt;&gt;文件 （功能描述：列表的内容追加到文件aa.txt的末尾）3) cat 文件1 &gt; 文件2 （功能描述：将文件1的内容覆盖到文件2）4) echo “内容”&gt;&gt; 文件 (功能描述：直接将双引号中的内容追加到指定文件中) 实例 （1）需求：创建a.txt文件并存入当前列表信息 说明：ls-l &gt;a.txt,是将ls-l的显示内容覆盖写入到a.txt文件中。如果该文件不存在，将新建一个a.txt文件 （2）将文件1的内容覆盖到文件2 echo指令功能描述： echo输出内容到控制台。 基本语法 echo [选项] [输出内容] 实例 （1）输出环境变量路径（path） (2)输出hello到控制台 head指令功能描述：head用于显示文件的开头部分内容，默认情况下head指令显示文件的前10行内容 基本语法： 1） head 文件 (功能描述：查看文件头10行内容) 2）head -n 5 文件 (功能描述：查看文件头5行内容，5可以是任意行数) 实例 （1）查看/etc/profile文件前五行 tail指令功能描述：tail用于输出文件中尾部的内容，默认情况下tail指令显示文件的前10行内容。 基本语法 1) tail 文件 （功能描述：查看文件后10行内容） 2) tail -n 5 文件 （功能描述：查看文件后5行内容，5可以是任意行数） 3) tail -f 文件 （功能描述：实时追踪该文档的所有更新） 实例 （1）查看/etc/profile 最后5行的代码 （2）实时监控mydate.txt,看看文件有变化时，是否看到实时的追加日期 ​ 1）tail -f 文件对文件进行实时监控 ​ 2）在其他终端向文件添加内容，实时监控终端也会同步更新显示 ln 指令功能描述：软链接也成为符号链接，类似于windows里的快捷方式，主要存放了链接其他文件的路径 基本语法： ln -s [原文件或目录] [软链接名] （功能描述：给原文件创建一个软链接） 细节说明：当我们使用pwd指令查看目录时，仍然看到的是软链接所在目录。 实例 （1） 在/home 目录下创建一个软链接 linkToRoot，连接到 /root 目录 （2） 删除软连接 linkToRoot（删除软链接的时候不要带斜杠，否则提示忙） history指令查看已经执行过历史命令,也可以执行历史指令 基本语法 ：history （功能描述：查看已经执行过历史命令） 实例 （1）显示所有的历史命令 （2） 显示最近使用过的10个指令 （3）执行历史编号为178的指令 时间日期类date指令-显示当前日期基本语法 1) date （功能描述：显示当前时间） 2) date +%Y （功能描述：显示当前年份） 3) date +%m （功能描述：显示当前月份） 4) date +%d （功能描述：显示当前是哪一天） 5) date “+%Y-%m-%d %H:%M:%S”（功能描述：显示年月日时分秒） 实例 （1）显示当前年月日 ​ 1）第一种方式 ​ 2）第二种方式 date指令-设置日期基本语法： date -s 字符串时间 实例 （1） 设置系统当前时间 ， 比如设置成 2018-10-10 11:22:22 cal指令功能描述：查看日历指令 基本语法： cal [选项] （功能描述：不加选项，显示本月日历） 实例 （1） 显示当前日历 （2） 显示2020年日历 搜索查找类find指令功能描述： find指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终 端。 基本语法 ：find [搜索范围] [选项] 常用选项说明 选项 功能 -name&lt;查询方式&gt; 按照指定的文件名查找模式查找文件 -user&lt;用户名&gt; -user&lt;用户名&gt; -size&lt;文件大小&gt; 按照指定的文件大小查找文件。 实例 （1） 按文件名：根据名称查找/home 目录下的hello.txt文件 （2）按拥有者：查找/opt目录下，用户名称为 nobody的文件 locate指令功能描述： locaate指令可以快速定位文件路径。locate指令利用事先建立的系统中所有文件名称及路径 的locate数据库实现快速定位给定的文件。Locate指令无需遍历整个文件系统，查询速度较快。 为了保证查询结果的准确度，管理员必须定期更新locate时刻。 基本语法 ：locate 搜索文件 特别说明： 由于locate指令基于数据库进行查询，所以第一次运行前，必须使用updatedb指令创建locate 数据库。 实例 （1）请使用locate 指令快速定位 hello.txt 文件所在目录 grep指令和 管道符号 |功能描述： grep 过滤查找 ， 管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理。基本语法 ：grep [选项] 查找内容 源文件 常用选项 选项 功能 -n 显示匹配行以及行号 -i 忽略字母大小写 实例 （1） 请在 hello.txt 文件中，查找 “yes” 所在行(区分大小写)，并且显示行号 （1） 请在 hello.txt 文件中，查找 “yes” 或”Yes”所在行，并且显示行号 压缩和解压类gzip/gunzip 指令功能描述：gzip 用于压缩文件， gunzip 用于解压的基本语法 ： 1）gzip 文件 （功能描述：压缩文件，只能将文件压缩为*.gz文件） 2）gunzip 文件.gz （功能描述：解压缩文件命令）实例 （1）gzip压缩， 将 /home下的 hello.txt文件进行压缩 （2）gunzip压缩， 将 /home下的 hello.txt.gz 文件进行解压缩 zip/unzip 指令功能描述：zip 用于压缩文件， unzip 用于解压的，这个在项目打包发布中很有用的基本语法： zip [选项] XXX.zip 将要压缩的内容（功能描述：压缩文件和目录的命令） unzip [选项] XXX.zip （功能描述：解压缩文件） zip常用选项： -r：递归压缩，即压缩目录 unzip的常用选项： -d&lt;目录&gt; ：指定解压后文件的存放目录 实例 （1） 将 /home下的 所有文件进行压缩成 mypackage.zip （2） 将 mypackge.zip 解压到 /opt/tmp 目录下 tar 指令功能描述：tar 指令 是打包指令，最后打包后的文件是 .tar.gz 的文件。基本语法： tar [选项] XXX.tar.gz 打包的内容 (功能描述：打包目录，压缩后的文件格式.tar.gz) 选项说明（压缩带上前四个参数，如果是解压就不带z参数应带x参数） 选项 功能 -c 产生.tar打包文件 -v 显示详细信息 -f 指定压缩后的文件名 -z 打包同时压缩 -x 解包.tar文件 实例 (1) 压缩多个文件，将 /home/a1.txt 和 /home/a2.txt 压缩成 a.tar.gz (2) 将/home 的文件夹 压缩成 myhome.tar.gz (3) 将 a.tar.gz 解压到当前目录(注意参数) (4)将myhome.tar.gz 解压到 /opt目录下（指定解压的目录，事先需要存在，否则报错） gunzip压缩， 将 /home下的 hello.txt.gz 文件进行解压缩","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux实操","slug":"Linux实操","permalink":"http://yoursite.com/tags/Linux实操/"}]},{"title":"Linux实操篇-常见命令与用户管理","slug":"Linux实操篇-常见命令与用户管理","date":"2019-05-24T10:46:55.166Z","updated":"2019-05-28T05:49:41.507Z","comments":true,"path":"2019/05/24/Linux实操篇-常见命令与用户管理/","link":"","permalink":"http://yoursite.com/2019/05/24/Linux实操篇-常见命令与用户管理/","excerpt":"","text":"常见命令关机&amp;重启相关命令 命令 功能 shutdown -h 1 一分钟后关机 shutdown -h now 立即进行关机 shutdown -r now 立即重启计算机 halt 关机 reboot 现在重启计算机 sync 把内存的数据同步到磁盘 注意： 不管是重启计算机还是关闭计算机，都需要运行sync命令，把内存中的数据写到磁盘中去，防止数据丢失。 用户登录和注销1) 登录时尽量少用root帐号登录，因为它是系统管理员，最大的权限，避免操作失误。可以使用普通用户登录，涉及到需要更高权限的操作时，在登录后再用”su - 用户名’命令来切换成系统管理员身份 2) 在提示符下输入 logout 即可注销用户 细节： logout 注销指令在图形运行级别无效，在 运行级别 3下有效 用户管理介绍Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向 系统管理员申请一个账号，然后以这个账号的身份进入系统。 用户管理常见指令添加用户 基本语法：命令行输入useradd 用户名 说明： 1) 当创建用户成功后，会自动的创建和用户同名的家目录 2) 也可以通过 useradd -d 指定目录 新的用户名，给新创建的用户指定家目录 指定/修改密码 基本语法： passwd 用户名 删除用户 基本语法 1）删除用户，但是保留家目录：userdel 用户名 2）删除用户以及用户家目录： userdel -r 用户名 注意：在实际开发中如果出现开发人员离职的情况，需要删除用户，但是不会删除家目录因为在家目录中还有很多的工程源码。 查询用户信息 基本语法： id 用户名 切换用户 在操作Linux中，如果当前用户的权限不够，可以通过 su - 指令，切换到高权限用户，比如root 基本语法 su 切换用户名 细节说明 1) 从权限高的用户切换到权限低的用户，不需要输入密码，反之需要。 2) 当需要返回到原来用户时，使用exit指令 实例：创建一个用户zwj，然后切换到zwj 查看当前登录用户 基本语法：whoami/who am i 两种命令执行效果如下图所示 用户组介绍 类似于角色，系统可以对有共性的多个用户进行统一的管理，比如武侠小说中的门派，每一个用户都有一个属于自己的门派有自己独特的武功 增加用户组 基本语法：groupadd 组名 操作示意图 删除用户组 基本语法： groupdel 组名 操作示意图 添加用户时候为用户指定对应的组 细节说明： 1）前面的zwj账号已经被删除的基础上新建的zwj账号 修改用户的组 基本语法：user -g 用户组 用户名 细节说明： 1)用户组为用户修改到的新的用户组 用户和组的相关文件/etc/passwd 文件 用户（user）的配置文件，记录用户的各种信息 每行的含义：用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录 Shell /etc/shadow 文件 口令的配置文件每行的含义：登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警 告时间:不活动时间:失效时间:标志 /etc/group 文件 组(group)的配置文件，记录Linux包含的组的信息 每行含义：组名:口令:组标识号:组内用户列表","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux实操","slug":"Linux实操","permalink":"http://yoursite.com/tags/Linux实操/"}]},{"title":"Linux基础篇-vi和vim编辑器","slug":"Linux基础篇-vi和vim编辑器","date":"2019-05-24T08:39:22.229Z","updated":"2019-05-24T09:21:07.926Z","comments":true,"path":"2019/05/24/Linux基础篇-vi和vim编辑器/","link":"","permalink":"http://yoursite.com/2019/05/24/Linux基础篇-vi和vim编辑器/","excerpt":"","text":"介绍1）所有的Linux系统都会内建有vi文本编辑器 2）vim 具有程序编辑的能力，可以看做是Vi的增强版本，可以主动的以字体颜色辨别 语法的正确性，方便程序设计。代码补完、编译及错误跳转等方便编程的功能特别 丰富，在程序员中被广泛使用。 vi和vim的常用三种模式正常模式: 以 vim 打开一个档案就直接进入一般模式了(这是默认的模式)。在这个模式中， 你可以使用 『上下左右』按键来移动光标，你可以使用『删除字符』或『删除整行』来处理档案内容， 也可以使用『复制、贴上』来处理你的文件数据。 插入模式: 按下i, I, o, O, a, A, r, R等任何一个字母之后才会进入编辑模式, 一般来说按i即可. 命令行模式 ： 在这个模式当中， 可以提供你相关指令，完成读取、存盘、替换、离开 vim 、显示行号等的 动作则是在此模式中达成的！ vi和vim的三种模式转换 使用案例需求：使用vim编辑器，开发一个Hello.java程序，并保存 步骤： 1）使用远程登录工具，登录服务器，这里使用Xshell进行连接 2）命令行键入vim Hello.java 新建Hello.java文件 3）当前属于正常模式，键盘输入i进入插入模式（命令行窗口底部提示进入插入模式） 4）直接使用键盘进行输入编辑文件内容，如图所示 5）保存并退出。首先由插入模式转换为正常模式，转换方式为按下键盘Esc键，转换到正常模式，正常模式输入：wq 保存并退出，这时候输入ll指令，就可以看到在目录里面已经存在Hello.java这个文件了 常用vi和vim编辑器快捷键1）删除当前行： dd,删除当前行向下的n行：ndd(n是删除行数)；模式： 正常模式 2）拷贝当前行：yy,拷贝当前行向下的n行：nyy(n是拷贝的行数)；粘贴指令：p;模式：正常模式 3) 在文件中查找某个单词 [命令行模式下 /关键字 ， 回车查找 , 输入 n 就是查找下一个 ]4) 设置文件的行号，取消文件的行号.[命令行下 : set nu 和 :set nonu] 5) 编辑 /etc/profile 文件，使用快捷键到底文档的最末行[G]和最首行[gg] 6) 在一个文件中输入 “hello” ,然后又撤销这个动作 u；模式：正常模式 7) 将光标移动到 指定行，使用方式：行号+shift+g，模式：正常模式","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux基础","slug":"Linux基础","permalink":"http://yoursite.com/tags/Linux基础/"}]},{"title":"Linux基础篇-Linux的远程登录与上传下载文件","slug":"Linux基础篇-Linux的远程登录与上传下载文件","date":"2019-05-23T14:30:07.769Z","updated":"2019-05-24T07:44:12.305Z","comments":true,"path":"2019/05/23/Linux基础篇-Linux的远程登录与上传下载文件/","link":"","permalink":"http://yoursite.com/2019/05/23/Linux基础篇-Linux的远程登录与上传下载文件/","excerpt":"","text":"Linux的远程登录原因在实际的使用的情况中，Linux的应用领域在服务器方面的运用比较多。由于服务器都是在远端的机房中，所以开发和维护人员无法通过直接操作服务器的方式展开工作。所以在实际的开发和维护中，开发和维护人员都通过使用远程登录的方式进行对服务器的操作。 远程登录工具目前市面上的远程工具较多，本文介绍Xshell软件进行远程登录，理由如下： 1）相比SecureCRT，它是一款对个人是免费的软件，如果使用SecureCRT需要付费或者使用破解版； 2）配色与Linux一致，并且还改进了深蓝色字体不容易看见的问题 免费和界面的理由让我选择了它 注意：使用远程登录工具登录到服务器后是以命令行的方式显示显示在工具窗口中，程序员的工作环境也一般是命令行窗口 使用方法软件的安装过程较为简单，安装过程中选择家庭免费版进行安装即可。 1）第一步点击新建连接 2）设置连接信息，名称自定义即可，填写需要进行连接的服务器IP地址。最后点击确认按钮，新建连接成功。 4）点击查看连接会话，查看新建的连接，点击连接服务器。若是第一次连接会提示输入登录账号密码，按要求输入即可 Linux的远程上传下载文件1）Xshell的同系列软件还有Xftp它是远程上传下载文件的工具，同样的它也是免费的，它的创建和连接服务器的操作步骤与Xshell类似。需要注意的是在创建连接会话的时候应该将协议改为SFTP,端口切换为22号端口后连接。 2）在连接成功后就会出现如下图所示的窗口，通过拖拽或者右键点击相应的文件再点击传输按钮即可实现文件的上传和下载功能。如下图所示 3）注意：如果出现中文乱码的问题，将编码方式设置成UTF-8即可，操作步骤如下：","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux基础","slug":"Linux基础","permalink":"http://yoursite.com/tags/Linux基础/"}]},{"title":"Linux基础篇-Linux的目录结构","slug":"Linux基础篇-Linux的目录结构","date":"2019-05-22T15:42:52.517Z","updated":"2019-05-23T14:31:18.877Z","comments":true,"path":"2019/05/22/Linux基础篇-Linux的目录结构/","link":"","permalink":"http://yoursite.com/2019/05/22/Linux基础篇-Linux的目录结构/","excerpt":"","text":"基本介绍Linux的文件系统中采用的是级层式的树状目录结构，在目录的最上层是文件系统的根目录“/”，然后在此根目录下创建其他的目录。 一句经典的话：在Linux的世界里，一切皆文件（不管是软件还是硬件，都可以以文件的方式进行操作） 以下是文件系统树状图： 在CentOSE中的文件系统图像化目录如下图所示： 目录结构具体介绍文件系统的根目录在Linux中我们见到的都是树状结构，比如操作系统安装在了文件系统中，它是由”/“起始的树状结构，它就是Linux的最顶端，我们将其称之为Linux的root。Linux的文件系统入口就是“/”，所有的目录、文件、设备都在/之下，/就是Linux文件系统的组织者，也是最上级的领导者。 挂载概念：挂载的意思是将设备与系统的目录关联，实现对设备进行操作； 没有挂载的设备相当于一个封闭的盒子，里面的数据出不来外面的数据进不去，设备挂载之后，相当于给盒子开了一个窗户或者门，实现数据的交流。 FHS规范因为Linux属于开源的操作系统，所以在很多公司或者技术团队在使用过程中会对Linux的核心代码进行开发、编程等操作。这样的个性化开发将会目录存放数据混乱的问题。这个问题使Linux的开发人员无法对他人发的电脑进行开发和使用。于是FHS（Filesystem Hierarchy Standard ）标准诞生，解决了这个问题。规范目录下存放的数据内容，规范每一个特定目录下存放的数据。FHS依据文件系统使用的频繁与否与是否允许使用者进行随意改动，而将目录定义成为四种交互作用的形态，如下表所示： 可分享的(shareable) 不可分享的(unshareable) 不变的(static) /usr (软件放置处) /etc (配置文件) /opt (第三方协力软件) /boot (开机与核心档) 可变动的(variable) /var/mail (使用者邮件信箱) /var/run (程序相关) /var/spool/news (新闻组) /var/lock (程序相关) 四种类型: 1.可分享的： 可以分享给其他系统挂载使用的目录，所以包括执行文件与用户的邮件等数据， 是能够分享给网络上其他主机挂载用的目录； 2.不可分享的： 自己机器上面运作的装置文件或者是与程序有关的socket文件等， 仅与自身机器有关，不可以分享给其他主机。 3.不变的： 有些数据是不会经常变动的，跟随着distribution而不变动。 例如函式库、文件说明文件、系统管理员所管理的主机服务配置文件等等； 4.可变动的： 经常改变的数据，例如登录文件、一般用户可自行收受的新闻组等。 事实上，FHS针对目录树架构仅定义出三层目录底下应该放置什么数据而已，分别是底下这三个目录的定义： / (root, 根目录)：与开机系统有关； /usr (unix software resource)：与软件安装/执行有关； /var (variable)：与系统运作过程有关。 根目录的意义根目录是操作系统的最重要的目录，其重要性等同于Windows系统中的c盘目录，它包含了各类的系统重要文件，由于根目录的重要性所以在FHS的标准中建议根目录所在分区越小越好，而且程序安装最好不要和根目录放在同一分区内，保持根分区越小越好，这样保证了文件系统出现问题的几率变小，同时使得文件系统的性能更佳。 基于以上的原因，FHS认为根目录下面应该包含以下的子目录： 目录 应放置文件内容 /bin 是Binary的缩写，这个目录存放着最经常使用的命令。在/bin底下的指令可以被root与一般帐号所使用，主要有：cat,chmod(修改权限), chown, date, mv, mkdir, cp, bash等等常用的指令。 /boot 主要放置开机会使用到的核心文件，包括Linux连接文件、镜像文件 /dev 在Linux系统上，任何装置与周边设备都是以文件的型态存在于这个目录当中。 （相当于Windows的设备管理器，把所有的硬件用文件的形式存储） /etc 所有的系统管理所需要的配置文件和子目录 my.conf。例如人员的帐号密码文件、各种服务的启始文件等等。 这个目录下的各文件属性是可以让一般使用者查阅的，但是只有root有权力修改。 /home 这是系统预设的使用者家目录(home directory)。 在你新增一个一般使用者帐号时，就会有一个与与户名相同的目录出现。比较重要的是，家目录有两种代号：~ ：代表当前使用者的家目录，而 ~guest：则代表用户名为guest的家目录。 /lib 系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几 乎所有的应用程序都需要用到这些共享库。 /media media是媒体的英文，顾名思义，这个/media底下放置的就是可移除的装置。 如：光碟、DVD、U盘等装置都暂时挂载于此。 常见的有：/media/floppy, /media/cdrom等等。 /mnt 系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂 载在/mnt/上，然后进入该目录就可以查看里的内容。 d:/myshare /opt 这是给主机额外安装软件所摆放的目录。如安装ORACLE数据库就可放到该目录下。 默认为空。 事实上FHS针对根目录所定义的标准就仅限于上表，不过仍旧有些目录也需要我们了解一下，具体如下： 目录 应放置文件内容 /proc 这个目录本身是一个虚拟文件系统(virtual filesystem)。 它是系统内存的映射，访问这个目录来获取系统信息。 /lost+found 这个目录是使用标准的ext2/ext3文件系统格式才会产生的一个目录，目的在于当档案系统发生错误时，将一些遗失的片段放置到这个目录下。（这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。） /sys 这是Linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统。 除了这些目录的内容之外，另外要注意的是，因为根目录与开机有关，开机过程中仅有根目录会被挂载， 其他分区则是在开机完成之后才会持续的进行挂载的行为。就是因为如此，因此根目录下与开机过程有关的目录， 就不能够与根目录放到不同的分区去。 那哪些目录不可与根目录分开呢？有底下这些： /etc：各种软件与系统的设置文件，及软件的启动停止脚本 /bin：重要执行文件 /dev：所需要的设置文件 /lib：各种目标文件与函数库和各种不同版本内核的模块 /sbin：重要的系统执行文件 这五个目录千万不可与根目录分开在不同的分区。请背下来啊。 /usr 的意义与内容： /usr不是user的缩写，其实usr是Unix Software Resource的缩写， 也就是Unix操作系统软件资源所放置的目录。 FHS建议所有软件开发者，将他们的数据合理的放置到这个目录下的次目录，而不要自行建立该软件自己独立的目录。 因为是所有系统默认的软件(distribution发布者提供的软件)都会放置到/usr底下，因此这个目录有点类似Windows 系统的C:\\Windows\\ + C:\\Program files\\这两个目录的综合体，系统刚安装完毕时，这个目录会占用最多的硬盘容量。 一般来说，/usr的次目录建议有底下这些： 目录 应放置的文件内容 /usr/X11R6/ 为X Window System重要数据所放置的目录，之所以取名为X11R6是因为最后的X版本为第11版，且该版的第6次释出之意 /usr/bin/ 绝大部分的用户可使用指令都放在这里。所有可执行文件，如 gcc，firefox 等。请注意到他与/bin的不同之处。(是否与开机过程有关) /usr/include/ c/c++等程序语言的头文件(header)与包含文件(include)放置处，当我们以tarball方式 (*.tar.gz 的方式安装软件)安装某些数据时，会使用到里头的许多包含档。 /usr/lib/ 包含各应用软件的函式库、目标文件(object file)，以及不被一般使用者惯用的执行档或脚本(script)。 某些软件会提供一些特殊的指令来进行服务器的设定，这些指令也不会经常被系统管理员操作， 那就会被摆放到这个目录下啦。要注意的是，如果你使用的是X86_64的Linux系统， 那可能会有/usr/lib64/目录产生 /usr/local/ 这是另一个给主机额外安装软件所安装的目录。一般是通过编译源码方式安装的程序。举例：你的distribution提供的软件较旧，你想安装较新的软件但又不想移除旧版， 此时你可以将新版软件安装于/usr/local/目录下，可与原先的旧版软件有分别啦。 你可以自行到/usr/local去看看，该目录下也是具有bin, etc, include, lib…的次目录 /usr/sbin/ 非系统正常运作所需要的系统指令。最常见的就是某些网络服务器软件的服务指令(daemon) /usr/share/ 放置共享文件的地方，在这个目录下放置的数据几乎是不分硬件架构均可读取的数据， 因为几乎都是文本文件嘛。在此目录下常见的还有这些次目录：/usr/share/man：联机帮助文件 /usr/src/ 一般原始码建议放置到这里，src有source的意思。至于核心原始码则建议放置到/usr/src/linux/目录下。 /var 的意义与内容： 如果/usr是安装时会占用较大硬盘容量的目录，那么/var就是在系统运作后才会渐渐占用硬盘容量的目录。 因为/var目录主要针对常态性变动的文件，包括缓存(cache)、登录文件(log file)以及某些软件运作所产生的文件， 包括程序文件(lock file, run file)，或者例如MySQL数据库的文件等等。常见的次目录有： 目录 应放置文件内容 /var/cache/ 应用程序本身运作过程中会产生的一些暂存档 /var/lib/ 程序本身执行的过程中，需要使用到的数据文件放置的目录。在此目录下各自的软件应该要有各自的目录。 举例来说，MySQL的数据库放置到/var/lib/mysql/而rpm的数据库则放到/var/lib/rpm去 /var/lock/ 某些装置或者是文件资源一次只能被一个应用程序所使用，如果同时有两个程序使用该设备时， 就可能产生一些错误的状况，因此就得要将该装置上锁(lock)，以确保该设备只会给单一软件所使用。 举例来说，刻录机正在刻录一块光盘，如果两个人同时刻录，那片子写入的是谁的数据？所以当第一个人在刻录时该刻录机就会被上锁， 第二个人就得要该装置被解除锁定(就是前一个人用完了)才能够继续使用 /var/log/ 非常重要。这是登录文件放置的目录。里面比较重要的文件如/var/log/messages, /var/log/wtmp(记录登入者的信息)等。 /var/mail/ 放置个人电子邮件信箱的目录，不过这个目录也被放置到/var/spool/mail/目录中，通常这两个目录是互为链接文件。 /var/run/ 某些程序或者是服务启动后，会将他们的PID放置在这个目录下 /var/spool/ 这个目录通常放置一些队列数据，所谓的“队列”就是排队等待其他程序使用的数据。 这些数据被使用后通常都会被删除。举例来说，系统收到新信会放置到/var/spool/mail/中， 但使用者收下该信件后该封信原则上就会被删除。信件如果暂时寄不出去会被放到/var/spool/mqueue/中， 等到被送出后就被删除。如果是工作排程数据(crontab)，就会被放置到/var/spool/cron/目录中。 由于FHS仅是定义出最上层(/)及次层(/usr, /var)的目录内容应该要放置的文件或目录数据， 因此，在其他次目录层级内，就可以随开发者自行来配置了。 总结1)Linux的目录中有且只有一个根目录/ 2）Linux的各个目录存放的内容是规划好的，不可以乱放文件 3）Linux是以文件的方式进行管理设备，因此在Linux系统中，一切皆文件 4）学习要求：掌握目录存放内容、脑海中形成目录树","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux基础","slug":"Linux基础","permalink":"http://yoursite.com/tags/Linux基础/"}]},{"title":"Linux基础篇-Linux的介绍","slug":"Linux基础篇-Linux的介绍","date":"2019-05-22T12:40:10.268Z","updated":"2019-05-23T14:31:31.043Z","comments":true,"path":"2019/05/22/Linux基础篇-Linux的介绍/","link":"","permalink":"http://yoursite.com/2019/05/22/Linux基础篇-Linux的介绍/","excerpt":"","text":"Linux介绍 1）Linux的读法，常见有三种【里纽克斯、利尼克斯、里纳克斯】 2）Linux特点：免费、开源、安全（由于系统是开源的所以现在基本全世界的程序员都在维护Linux,保证了Linux系统的安全性）、高效、稳定、对高并发的处理非常的强悍。 3）Linux的创始人是来自芬兰的林纳斯，吉祥物是一只企鹅，据说林纳斯因为再一次逛动物园的时候被一只企鹅咬了，所以就以企鹅作为Linux的吉祥物。吉祥物的名字叫tux 4）Linux的主要发行版有：Redhat、CentOSE、Ubuntu、Suse、红旗Linux。如下所示，其中Redhat和CentOSE都是来自于Redhat公司旗下的发行版 Linux和UNIXLinux和UNIX的最大的区别是，前者是开发源代码的自由软件，而后者是对源代码实行知识产权保护的传统商业软件。这应该是他们最大的不同，这种不同体现在用户对前者有很高的自主权，而对后者却只能去被动的适应；这种不同还表现在前者的开发是处在一个完全开放的环境之中,而后者的开发完全是处在一个黑箱之中,只有相关的开发人员才能够接触的产品的原型。 Linux 的源头要追溯到最古老的UNIX。1969年，Bell实验室的Ken Thompson开始利用一台闲置的 PDP-7计算机开发了一种多用户，多任务操作系统。很快，Dennis Richie加入了这个项目，在他们共同努力下诞生了最早的UNIX。Richie受一个更早的项目——MULTICS的启发，将此操作系统命名为 Unix。早期UNIX是用汇编语言编写的，但其第三个版本用一种崭新的编程语言C重新设计了。C是Richie设计出来并用于编写操作系统的程序语言。通过这次重新编写，Unix得以移植到更为强大的 DEC PDP-11/45与11/70计算机上运行。后来发生的一切，正如他们所说，已经成为历史。Unix从实验室走出来并成为了操作系统的主流，现在几乎每个主要的计算机厂商都有其自有版本的Unix. Linux起源于一个学生的简单需求。Linus Torvalds,Linux的作者与主要维护者，在其上大学时所买得起的唯一软件是Minix. Minix是一个类似Unix，被广泛用来辅助教学的简单操作系统。Linus 对Minix不是很满意，于是决定自己编写软件。他以学生时代熟悉的Unix作为原型， 在一台Intel 386 PC上开始了他的工作。他的进展很快，受工作成绩的鼓舞，他将这项成果通过互连网与其他同学共享，主要用于学术领域。有人看到了这个软件并开始分发。每当出现新问题时，有人会立刻找到解决办法并加入其中，很快的， Linux成为了一个操作系统。值得注意的是Linux并没有包括Unix源码。它是按照公开的POSIX标准重新编写的。Linux大量使用了由麻省剑桥免费软件基金的GNU软件，同时Linux自身也是用它们构造而成。 二者也有两个大的区别：UNIX 系统大多是与硬件配套的，也就是说，大多数 UNIX 系统如 AIX、HP-UX 等是无法安装在 x86 服务器和个人计算机上的，而 Linux 则可以运行在多种硬件平台上；UNIX 是商业软件所以是收费的，而 Linux 是开源软件，是免费、公开源代码的。 Linux 受至旷大计算机爱好者的喜爱，主要原因也有两个：它属于开源软件，用户不用支付可费用就可以获得它和它的源代码，并且可以根据自己的需要对它进行必要的修改，无偿使用，无约束地继续传播；它具有 UNIX 的全部功能，任何使用 UNIX 操作系统或想要学习 UNIX 操作系统的人都可以从 Linux 中获益。 开源软件是不同于商业软件的一种模式，从字面上理解，就是开放源代码，大家不用担心里面会搞什么猫腻，这会带来软件的革新和安全。 另外，开源其实并不等同于免费，而是一种新的软件盈利模式。目前很多软件都是开源软件，对计算机行业与互联网影响深远。 Linux与Windows的区别对比","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"Linux基础","slug":"Linux基础","permalink":"http://yoursite.com/tags/Linux基础/"}]},{"title":"hexo博客pure主题配置（转载）","slug":"hexo博客pure主题配置（转载）","date":"2019-05-09T18:25:20.617Z","updated":"2019-05-09T18:28:33.329Z","comments":true,"path":"2019/05/10/hexo博客pure主题配置（转载）/","link":"","permalink":"http://yoursite.com/2019/05/10/hexo博客pure主题配置（转载）/","excerpt":"","text":"pureA brand new default theme for [Hexo]. Preview | English documentation | iconfont 特色 多语言 第三方评论框（友言、来必力、gitment、gitalk） 可展示个人豆瓣书单 可展示个人github托管项目 可设置支付宝、微信打赏页面展示 首页 | 归档 | 分类 | 标签 | 项目 | 书单 | 友链 | 关于 配置说明在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件 安装主题1git clone https://github.com/cofess/hexo-theme-pure.git themes/pure 更新主题12cd themes/puregit pull 启用pure主题打开站点配置文件，找到theme字段，将其值更改为 pure 1theme: pure 到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。 1hexo s 安装插件hexo-wordcount1npm install hexo-wordcount --save hexo-generator-json-content1npm install hexo-generator-json-content --save hexo-generator-feed1npm install hexo-generator-feed --save hexo-generator-sitemap1npm install hexo-generator-sitemap --save hexo-generator-baidu-sitemap1npm install hexo-generator-baidu-sitemap --save 主题配置设置语言打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\\pure\\languages目录下语言文件，简体中文配置如下： 1language: zh-CN 主题颜色定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple 123# configconfig: skin: # 主题颜色 theme-black theme-blue theme-green theme-purple 导航菜单12345678910111213141516171819202122# 导航菜单menu: Home: . Archives: archives # 归档 Categories: categories # 分类 Tags: tags # 标签 Repository: repository # github repositories Books: books # 书单 Links: links # 友链 About: about # 关于# 导航菜单图标（font awesome）menu_icons: enable: true # 是否启用菜单图标 home: icon-home-fill archives: icon-archives-fill categories: icon-folder tags: icon-tags repository: icon-project books: icon-book-fill links: icon-friendship about: icon-cup-fill 设置个人信息123头像在themes\\pure\\source\\images 目录下替换图片即可，捐献的二维码同理。个人信息大部分都在 主题配置文件 中设置 搜索主题内置三种站内搜索方式：insight、swiftype、baidu 12345# Searchsearch: insight: true # you need to install `hexo-generator-json-content` before using Insight Search swiftype: # enter swiftype install key here baidu: false # you need to disable other search engines to use Baidu search 分享支持weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin 123456# Share# weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedinshare: enable: true # 是否启用分享 sites: weibo,qq,wechat,facebook,twitter # PC端显示的分享图标 mobile_sites: weibo,qq,qzone # 移动端显示的分享图标 评论主题集成了disqus、友言、来必力、gitment、gitalk评论系统，选择其中一种即可 12345678910111213141516# Comment# Gitment# Introduction: https://imsun.net/posts/gitment-introduction/comment: type: livere # 启用哪种评论系统 disqus: # enter disqus shortname here youyan: uid: *** # enter youyan uid livere: uid: *** # enter livere uid gitment: githubID: username repo: username.github.io ClientID: *** ClientSecret: *** lazy: false 文章浏览量统计主题内置了不蒜子和leancloud来统计文章浏览量，启用其中之一即可，注意leancloud需要到其官网申请APP ID 和APP Key。 比如，启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true即可： 123pv: busuanzi: enable: true # 不蒜子统计 如果不需要第三方来统计浏览量，只需将相应设置改为false即可（设置为false后不会加载第三方JS脚本） Github respostory复制theme/pure/_source/ 目录下repository文件夹到blog path/source/ 目录下 123# Githubgithub: username: *** # github username 豆瓣书单复制theme/pure/_source/ 目录下books文件夹到blog path/source/ 目录下 12345# douban 豆瓣书单douban: user: *** # 豆瓣用户名 start: 0 # 从哪一条记录开始 count: 100 # 获取豆瓣书单数据条数 友情链接复制theme/pure/_source/ 目录下links文件夹到blog path/source/ 目录下 在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。 然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。 单个友情链接的格式为： 1234Name: link: http://example.com avatar: http://example.com/avatar.png desc: &quot;这是一个描述&quot; 添加多个友情链接，我们只需要根据上面的格式重复填写即可。 . 将 Name 改为友情链接的名字，例如 Cofess。 . http://example.com 为友情链接的地址。 . http://example.com/avatar.png 为友情链接的头像。 . 这是一个描述 为友情链接描述。 文章索引目录123456title: 文章标题categories: - 文章分类tags: - 文章标签toc: true # 是否启用内容索引 sidebar侧边栏文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可： 123456title: 文章标题categories: - 文章分类tags: - 文章标签sidebar: none # 是否启用sidebar侧边栏，none：不启用 博客优化hexo-neat auto Minify html、js、css and make it neat 1npm install hexo-neat --save 在博客配置文件_config.yml中添加 12345678910111213141516# hexo-neatneat_enable: trueneat_html: enable: true exclude: neat_css: enable: true exclude: - &apos;*.min.css&apos;neat_js: enable: true mangle: true output: compress: exclude: - &apos;*.min.js&apos; hexo-baidu-url-submit1npm install hexo-baidu-url-submit --save hexo-translate-title 使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题 安装 1npm install hexo-translate-title --save 在博客配置文件_config.yml中添加 123456translate_title: translate_way: google #google | baidu | youdao youdao_api_key: XXX youdao_keyfrom: XXX is_need_proxy: true #true | false proxy_url: http://localhost:8123 注意：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将_config.yml 下的is_need_proxy: true改为false。如果设置为true,请设置本地代理地址 数学公式 Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签 解决方案解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。 更换Hexo的markdown渲染引擎，hexo-renderer-markdown-it-plus引擎替换默认的渲染引擎hexo-renderer-marked即可。 安装hexo-renderer-markdown-it-plus插件12npm un hexo-renderer-marked --savenpm i hexo-renderer-markdown-it-plus --save 配置安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件_config.yml中添加 12345678910111213141516markdown_it_plus: highlight: true html: true xhtmlOut: true breaks: true langPrefix: linkify: true typographer: quotes: “”‘’ plugins: - plugin: name: markdown-it-katex enable: true - plugin: name: markdown-it-mark enable: false 文章启用mathjax12title: Hello Worldmathjax: true","categories":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/categories/随笔/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"在校大学生如何申请软件著作权（超级详细）","slug":"在校大学生如何申请软件著作权（超级详细）","date":"2019-05-09T12:47:47.406Z","updated":"2019-05-29T09:54:43.225Z","comments":true,"path":"2019/05/09/在校大学生如何申请软件著作权（超级详细）/","link":"","permalink":"http://yoursite.com/2019/05/09/在校大学生如何申请软件著作权（超级详细）/","excerpt":"","text":"前言前段时间，参加比赛负责开发APP，在开发完成后需要以学校为第一作者单位的方式进行申请软件著作权。因为是第一次申请，花了挺多时间去了解这个流程的，其中： （1）网上的文章大多是针对个人名义申请的流程方法进行讲解 （2）网上针对在校大学生的申请方法资料较少，而且不仔细 导致在申请软件著作权的时候走了挺多弯路的。所以我想写一篇博客给大家介绍作为一名在校大学生如何以学校作为第一作者单位申请软件著作权。避免入坑！！！ 网上申请步骤：注意：本文所涉及的浏览器操作都需要在IE浏览器中打开并设置兼容视图，其他浏览器可能会出现不兼容的情况 设置兼容视图方法： 在IE浏览器的右上角有一个齿轮的图标，点一下弹出菜单，选择兼容性视图设置，点击后 在弹出的窗口里把中国版权保护中心网站首页的地址添加进去，网址：http://www.ccopyright.com.cn/ 打开中国版权保护中心网站 点击网站右上方注册/登录按钮（1）已经有账号的同学直接点击登录按钮进行登录 （2）没有账号的同学往下看怎么注册 ​ 1）点击注册进入如下页面填写个人信息（注意邮箱一定要使用自己的常用邮箱因为版权中心需要联系你的 时候可以是通过发邮件的方式联系你） ​ 2）点击进一步完善资料，继续填写资料信息并点击同意注册按钮注册账户。注册账户之后进行邮箱验证。 激活邮箱后完成注册。 （3）返回到网站首页点击登录按钮登录（图为登录成功页面） 进行网上申请登记软件著作权(1)点击登录页面上左下角的我要登记按钮，接着再点击右边栏目的“R11.计算机软件著作权登记申请”，如下图所示 （2）进入到登记申请表页面进行申请填写 软件全称：品牌 + 产品用途与功能+“软件（不能加软件版本号） 开发方式：合作开发 软件技术特点栏填写提示： ​ 1）硬件环境：填写所申请软件的最小运行的硬件环境如CPU、内存等 ​ 2）软件环境：申请软件的操作系统运行环境以及在操作系统上还需要什么运行环境 ​ 3）程序语言：填写申请软件开发语言 ​ 4）程序量：源代码程序没有空行没有注释的情况下代码行数 ​ 5）软件功能和技术特点：分别填写软件功能和技术特点不要漏写 其中著作权人是本次针对以学校为第一作者单位申请最需要注意的地方，以下对它做详细的填写说明 ​ 第一栏著作权人信息： ​ 1）姓名/单位名称一栏填写内容：申请人所在学校 ​ 2）类别选择事业单位法人 ​ 3）证件类型：事业单位法人证书 ​ 4）证件号码：填写学校事业单位法认证书号码，同学需要自己去自己学校官网或向校办咨询 注意：如申请软件著作权用于科研项目，请事先咨询学校或学院的科技处第一栏位置填写学校、学院还是个人 ​ 通过点击“添加著作权人”的方式添加著作权人（开始填写软件开发的作者） ​ 1）姓名/单位名称：作者名字 ​ 2）类别：自然人 ​ 3）证件类别以及证件号码：选择身份证并填写身份证号码即可 注意：在第二栏的著作权人信息中，如果需要软件著作权证书点击“是“，如下图所示 完成申请表格的填写后，点击保存按钮进行预览自己的软件著作权申请登记表是否有问题，没有问题即可提交打印下载pdf文件。 注意：在提交之前一定要看清楚有没有信息填写错误，一旦提交就不能修改了。 材料准备完成第二步的网上申请以后，就可以进行准备材料邮寄或到大厅办理了。以下对准备的材料做详细介绍： 申请表 申请表是在上一步在网上登记申请提交后下载的pdf文件，在下载下来后，将其打印成纸质版。签章处签上申请人名字，如果申请人是学校则在签章位置盖上学校签章。 完整文档一份软件总体设计，软件详细设计，软件使用说明书都是可以的，因为申请时使用说明书的比较多，这里重点介绍一下《用户使用说明书》写作注意事项。 1）必须包括软件的硬件环境，软件环境，安装及卸载等章节2）文档每页不少于30行，有图除外3）使用A4纸张，纵向、单面打印，文字应当从左向右排列4）文档需黑白打印5）申请文件各部分应当分别用数字顺序在右上角标注页码。所有登记材料中出现的版本号，应与申请表中保持完 全一致。以及出现的软件截图中的软件名字需要和申请书一致6）提交60页的文档，如果不足则全部提交，如果超过60页，则只提交前30页和最后30页 模板百度搜索就能找到，网上挺多类型的开发文档模板的，同学们按需求查找即可。 合作开发协议书由于学校、软甲开发作者有几个著作权人进行合作开发。所以在申请材料准备的时候需要拟定合作开发协议，什么？拟定？嗨呀，百度一下模板就出来了。注意合作开发协议的甲方需要是学校公章盖章。其他乙方等由自然人作者签字就可以了。 软件源码（1）一般交存：源程序和文档应提交前、后各连续30页，不足60页的，应当全部提交；（2）例外交存：请按照《计算机软件著作权登记办法》第十二条规定的方式之一提交软件的鉴别材料。 软件源码格式要求如下： 1）申请人若在源程序和文档页眉上标注了所申请软件的名称和版本号，应当与申请表即《计算机软件著作权申请表》中相应内容完全一致 2）右上角应标注页码 3）源程序每页不少于50行 4）最后一页应是程序的结束页，文档每页不少于30行，有图除外。 5）不得有注释，不得有空行 6）有全部的源程序留存、备查、应当和提交的60页文档相同页码部分完全一致 注：如果嫌麻烦的同学，这里我推荐使用下图这个软件著作权小工具制作源代码文件。但是这个是一个收费的软件，也比较便宜9.99元一个月，1.99元一天。使用的同学需要电脑office2010及以下的版本，太高版本的office可能会出现没办法用的问题。需要的同学自取：https://www.xasumao.cn/products-SoftwareCopyrightApplication.html 身份证复印件以及事业单位法人证书1）学校事业单位法人证书复印件一份（并在法人证书复印件上注明软件著作权使用、盖上学校公章） 2）申请自然人作者身份证复印件正反面，复印在一张A4纸上 学校公章和事业单位法人证书的获取办法不同的学校可能会有不同的方法，这里介绍我所在学校的申请学校公章和事业单位法人证书的方式（仅做参考）： 首先到学校科技处（一般在学校办公大楼，不知道的同学可以事先去学校官网了解）说明你的来意，在老师同意之后，老师会给你学校的事业单位法人证书，并向学校校长办公室申请学校公章（注意这里你要数清楚你要盖多少个公章）。接着过到学校校长办公室盖章即可。 将材料寄送或到大厅办理 第三章的材料准备好之后就可以开始邮寄了，邮寄地址如下： 办理软件著作权登记可到登记大厅现场办理，也可使用挂号信函或特快专递邮寄到中国版权保护中心软件登记部。 ​ 邮寄联系地址：北京市西城区天桥南大街1号天桥艺术大厦A座三层302（邮编：100050）登记部（收） ​ 电话：86-010-68003887 ​ 现场办理地址：天桥艺术大厦A座版权登记大厅 另外： 在进行邮寄后中国版权中心收到纸质版材料在受理材料后会向申请人发送受理通知邮件。如需登正材料也会发邮件提示登正 注： （1）2016年6月1日起，中国版权保护中心登记大厅（天桥）不再现场取号受理登记业务,登记受理将全部实行微信预约（2）在线提交表格后60个工作日内未提交纸质版材料申请作废","categories":[{"name":"办证、申请","slug":"办证、申请","permalink":"http://yoursite.com/categories/办证、申请/"}],"tags":[{"name":"软件著作权","slug":"软件著作权","permalink":"http://yoursite.com/tags/软件著作权/"}]},{"title":"DoCode的前世今生","slug":"DoCode的前世今生","date":"2019-05-09T12:47:47.403Z","updated":"2019-05-09T18:30:09.839Z","comments":true,"path":"2019/05/09/DoCode的前世今生/","link":"","permalink":"http://yoursite.com/2019/05/09/DoCode的前世今生/","excerpt":"","text":"在混迹于于各种程序员的圈子后自己也开始想，要是能也有一个属于自己的博客就好了，于是乎在2018年的末尾注册了一个CSDN的账号，有了自己的第一个博客。但是不争气的自己事实上并不是那么安稳的人。在CSDN还没开始写博客的时候，就开始想着会不会有一种属于自己搭建的博客呢？ 但是事情并没有那么的顺利，我第一次开始着手的时候，突然意识到一个问题，那就是：我没有前端的相关知识…..这就难倒我了。完了…….没有技术还想入非非，第一次放弃。 随着时间的推移，我也慢慢忘记了这么一回事，我也以为这个事情就这样过去了。在2019年也就是我大四下学期开学的时候，一个偶然的机会在B站看到了一个视频，内容是个人博客的搭建教学视频。这个视频一下子激发了我的兴趣，我在想，那不是我这样就可以实现我之前个人博客的想法了观看完这个视频后。因为这个视频的让我感觉到不是注册账号登录那么简答，所以我并没有冲动地打开电脑开始搭建自己的第一个个人博客。我仔细思考了一番，虽然我是一名即将迈入社会的程序员。但是同时我拥有的另外一个身份是我是一名非计算机专业出身的程序员。自己的能力水平，至少还是在需要自己安安心心踏踏实实学习的阶段。人是要有梦想，但同时还需要拥有的是自己的踏实。仰望星空的同时要一步一个脚印。 在冷静想了一番后，我决定把这件事情往后挪一挪。时间就这么过去了一周，一周过后因为一些原因没办法再安心地学习下去了。于是自己想着找一件事情来做，也是为了自己不去想那么多也没那么难受。于是就开始搭建第一个属于自己的个人博客。 站名在思考很久之后最后决定取名DoCode，主要原因是因为自己是一名非科班出身的程序员，希望自己能在这条路一直走下去，坚持自己最初的想法，不忘初心。 ​ 2019年3月4日","categories":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/categories/随笔/"}],"tags":[{"name":"关于DoCode","slug":"关于DoCode","permalink":"http://yoursite.com/tags/关于DoCode/"}]}]}